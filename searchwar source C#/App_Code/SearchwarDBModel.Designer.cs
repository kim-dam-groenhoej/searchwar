//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Me__Appli__145C0A3F", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Pa__Appli__45F365D3", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Applications), "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_Paths), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Ro__Appli__32E0915F", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_Role), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Us__Appli__0425A276", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Me__UserI__15502E78", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Paths), "aspnet_PersonalizationAllUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.aspnet_PersonalizationAllUsers), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.aspnet_Paths), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Pe__UserI__5070F446", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.aspnet_Users), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK__aspnet_Pr__UserI__29572725", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "aspnet_Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.aspnet_Profile), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapRoles_aspnet_Roles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Role), "SW_SiteMapNodeRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeRole), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_Blog_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_Blog), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_Blog_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_Blog), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_Faq_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_Faq", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_Faq), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_Faq_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_Faq", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_Faq), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarContinent_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarContinent), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarContinent_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarContinent), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarCountry), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarCountry), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarGame_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarGame), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarGame_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarGame), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarSkill_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarSkill), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarSkill_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarSkill), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarType_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarGameType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarGameType), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarType_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SearchWarGameType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarGameType), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SiteMapNodeMetaTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeMetaTag), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SiteMapNodeMetaTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeMetaTag), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_ChatBlinking_SW_chat", "SW_chat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_chat), "SW_ChatBlinking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_ChatBlinking), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatPersons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_ChatPerson), "SW_ChatBlinking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_ChatBlinking), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_ServerContinents_SW_Server", "SW_Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Server), "SW_ServerContinents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_ServerContinents), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_ServerContinents_SW_SearchWarContinent", "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarContinent), "SW_ServerContinents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_ServerContinents), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_Advertise_SW_AdvertiseCompany", "SW_AdvertiseCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_AdvertiseCompany), "SW_Advertise", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_Advertise), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_Advertise_SW_AdvertisePlace", "SW_AdvertisePlace", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_AdvertisePlace), "SW_Advertise", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_Advertise), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_BlogData_SW_Blog", "SW_Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Blog), "SW_BlogData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_BlogData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_BlogData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_BlogData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_BlogData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_ChatMessages_SW_chat", "SW_chat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_chat), "SW_ChatMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_ChatMessage), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatPersons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_ChatPerson), "SW_ChatMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_ChatMessage), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_FaqData_SW_Faq", "SW_Faq", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Faq), "SW_FaqData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_FaqData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_FaqData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_FaqData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_FaqData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchCountryData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_SearchWarCountryData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarCountryData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarContinentData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_SearchWarContinentData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarContinentData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarSkillData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_SearchWarSkillData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarSkillData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_SiteMapNodeData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_Lang", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_Lang), "SW_SiteMapNodeMetaTagsData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeMetaTagsData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarContinent), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarContinent), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWarCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarCountry), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWarCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarCountry), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWarGame", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarGame), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWarGameType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarGameType), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWarSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarSkill), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWarSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SearchWarSkill), "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWar), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWar), "SW_SearchWarPlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarPlayer), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarContinent), "SW_SearchWarContinentData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarContinentData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarContinent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarContinent), "SW_SearchWarCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarCountry), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarCountry), "SW_SearchWarCountryData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarCountryData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGame", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarGame), "SW_SearchWarGameType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarGameType), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SearchWarSkill), "SW_SearchWarSkillData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SearchWarSkillData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SiteMapNodeMetaTag), "SW_SiteMapNodeMetaTagsData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeMetaTagsData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_Role), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.aspnet_Users))]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMap_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SiteMapNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNode), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMap_aspnet_Users1", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.aspnet_Users), "SW_SiteMapNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNode), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SiteMapNode), "SW_SiteMapNodeData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeData), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SiteMapNode), "SW_SiteMapNodeMetaTag", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Searchwar_netModel.SW_SiteMapNodeMetaTag), true)]
[assembly: EdmRelationshipAttribute("Searchwar_netModel", "FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Searchwar_netModel.SW_SiteMapNode), "SW_SiteMapNodeRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Searchwar_netModel.SW_SiteMapNodeRole), true)]

#endregion

namespace Searchwar_netModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Searchwar_netEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Searchwar_netEntities object using the connection string found in the 'Searchwar_netEntities' section of the application configuration file.
        /// </summary>
        public Searchwar_netEntities() : base("name=Searchwar_netEntities", "Searchwar_netEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Searchwar_netEntities object.
        /// </summary>
        public Searchwar_netEntities(string connectionString) : base(connectionString, "Searchwar_netEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Searchwar_netEntities object.
        /// </summary>
        public Searchwar_netEntities(EntityConnection connection) : base(connection, "Searchwar_netEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Paths> aspnet_Paths
        {
            get
            {
                if ((_aspnet_Paths == null))
                {
                    _aspnet_Paths = base.CreateObjectSet<aspnet_Paths>("aspnet_Paths");
                }
                return _aspnet_Paths;
            }
        }
        private ObjectSet<aspnet_Paths> _aspnet_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
        {
            get
            {
                if ((_aspnet_PersonalizationAllUsers == null))
                {
                    _aspnet_PersonalizationAllUsers = base.CreateObjectSet<aspnet_PersonalizationAllUsers>("aspnet_PersonalizationAllUsers");
                }
                return _aspnet_PersonalizationAllUsers;
            }
        }
        private ObjectSet<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if ((_aspnet_PersonalizationPerUser == null))
                {
                    _aspnet_PersonalizationPerUser = base.CreateObjectSet<aspnet_PersonalizationPerUser>("aspnet_PersonalizationPerUser");
                }
                return _aspnet_PersonalizationPerUser;
            }
        }
        private ObjectSet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Profile> aspnet_Profile
        {
            get
            {
                if ((_aspnet_Profile == null))
                {
                    _aspnet_Profile = base.CreateObjectSet<aspnet_Profile>("aspnet_Profile");
                }
                return _aspnet_Profile;
            }
        }
        private ObjectSet<aspnet_Profile> _aspnet_Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Role> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Role>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Role> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events
        {
            get
            {
                if ((_aspnet_WebEvent_Events == null))
                {
                    _aspnet_WebEvent_Events = base.CreateObjectSet<aspnet_WebEvent_Events>("aspnet_WebEvent_Events");
                }
                return _aspnet_WebEvent_Events;
            }
        }
        private ObjectSet<aspnet_WebEvent_Events> _aspnet_WebEvent_Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_ChatBlinking> SW_ChatBlinking
        {
            get
            {
                if ((_SW_ChatBlinking == null))
                {
                    _SW_ChatBlinking = base.CreateObjectSet<SW_ChatBlinking>("SW_ChatBlinking");
                }
                return _SW_ChatBlinking;
            }
        }
        private ObjectSet<SW_ChatBlinking> _SW_ChatBlinking;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_Server> SW_Server
        {
            get
            {
                if ((_SW_Server == null))
                {
                    _SW_Server = base.CreateObjectSet<SW_Server>("SW_Server");
                }
                return _SW_Server;
            }
        }
        private ObjectSet<SW_Server> _SW_Server;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_ServerContinents> SW_ServerContinents
        {
            get
            {
                if ((_SW_ServerContinents == null))
                {
                    _SW_ServerContinents = base.CreateObjectSet<SW_ServerContinents>("SW_ServerContinents");
                }
                return _SW_ServerContinents;
            }
        }
        private ObjectSet<SW_ServerContinents> _SW_ServerContinents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_Advertise> SW_Advertise
        {
            get
            {
                if ((_SW_Advertise == null))
                {
                    _SW_Advertise = base.CreateObjectSet<SW_Advertise>("SW_Advertise");
                }
                return _SW_Advertise;
            }
        }
        private ObjectSet<SW_Advertise> _SW_Advertise;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_AdvertiseCompany> SW_AdvertiseCompany
        {
            get
            {
                if ((_SW_AdvertiseCompany == null))
                {
                    _SW_AdvertiseCompany = base.CreateObjectSet<SW_AdvertiseCompany>("SW_AdvertiseCompany");
                }
                return _SW_AdvertiseCompany;
            }
        }
        private ObjectSet<SW_AdvertiseCompany> _SW_AdvertiseCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_AdvertisePlace> SW_AdvertisePlace
        {
            get
            {
                if ((_SW_AdvertisePlace == null))
                {
                    _SW_AdvertisePlace = base.CreateObjectSet<SW_AdvertisePlace>("SW_AdvertisePlace");
                }
                return _SW_AdvertisePlace;
            }
        }
        private ObjectSet<SW_AdvertisePlace> _SW_AdvertisePlace;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_Banlist> SW_Banlist
        {
            get
            {
                if ((_SW_Banlist == null))
                {
                    _SW_Banlist = base.CreateObjectSet<SW_Banlist>("SW_Banlist");
                }
                return _SW_Banlist;
            }
        }
        private ObjectSet<SW_Banlist> _SW_Banlist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_Blog> SW_Blog
        {
            get
            {
                if ((_SW_Blog == null))
                {
                    _SW_Blog = base.CreateObjectSet<SW_Blog>("SW_Blog");
                }
                return _SW_Blog;
            }
        }
        private ObjectSet<SW_Blog> _SW_Blog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_BlogData> SW_BlogData
        {
            get
            {
                if ((_SW_BlogData == null))
                {
                    _SW_BlogData = base.CreateObjectSet<SW_BlogData>("SW_BlogData");
                }
                return _SW_BlogData;
            }
        }
        private ObjectSet<SW_BlogData> _SW_BlogData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_chat> SW_chat
        {
            get
            {
                if ((_SW_chat == null))
                {
                    _SW_chat = base.CreateObjectSet<SW_chat>("SW_chat");
                }
                return _SW_chat;
            }
        }
        private ObjectSet<SW_chat> _SW_chat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_ChatMessage> SW_ChatMessages
        {
            get
            {
                if ((_SW_ChatMessages == null))
                {
                    _SW_ChatMessages = base.CreateObjectSet<SW_ChatMessage>("SW_ChatMessages");
                }
                return _SW_ChatMessages;
            }
        }
        private ObjectSet<SW_ChatMessage> _SW_ChatMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_ChatPerson> SW_ChatPersons
        {
            get
            {
                if ((_SW_ChatPersons == null))
                {
                    _SW_ChatPersons = base.CreateObjectSet<SW_ChatPerson>("SW_ChatPersons");
                }
                return _SW_ChatPersons;
            }
        }
        private ObjectSet<SW_ChatPerson> _SW_ChatPersons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_Faq> SW_Faq
        {
            get
            {
                if ((_SW_Faq == null))
                {
                    _SW_Faq = base.CreateObjectSet<SW_Faq>("SW_Faq");
                }
                return _SW_Faq;
            }
        }
        private ObjectSet<SW_Faq> _SW_Faq;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_FaqData> SW_FaqData
        {
            get
            {
                if ((_SW_FaqData == null))
                {
                    _SW_FaqData = base.CreateObjectSet<SW_FaqData>("SW_FaqData");
                }
                return _SW_FaqData;
            }
        }
        private ObjectSet<SW_FaqData> _SW_FaqData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_Lang> SW_Lang
        {
            get
            {
                if ((_SW_Lang == null))
                {
                    _SW_Lang = base.CreateObjectSet<SW_Lang>("SW_Lang");
                }
                return _SW_Lang;
            }
        }
        private ObjectSet<SW_Lang> _SW_Lang;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWar> SW_SearchWar
        {
            get
            {
                if ((_SW_SearchWar == null))
                {
                    _SW_SearchWar = base.CreateObjectSet<SW_SearchWar>("SW_SearchWar");
                }
                return _SW_SearchWar;
            }
        }
        private ObjectSet<SW_SearchWar> _SW_SearchWar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarContinent> SW_SearchWarContinent
        {
            get
            {
                if ((_SW_SearchWarContinent == null))
                {
                    _SW_SearchWarContinent = base.CreateObjectSet<SW_SearchWarContinent>("SW_SearchWarContinent");
                }
                return _SW_SearchWarContinent;
            }
        }
        private ObjectSet<SW_SearchWarContinent> _SW_SearchWarContinent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarContinentData> SW_SearchWarContinentData
        {
            get
            {
                if ((_SW_SearchWarContinentData == null))
                {
                    _SW_SearchWarContinentData = base.CreateObjectSet<SW_SearchWarContinentData>("SW_SearchWarContinentData");
                }
                return _SW_SearchWarContinentData;
            }
        }
        private ObjectSet<SW_SearchWarContinentData> _SW_SearchWarContinentData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarCountry> SW_SearchWarCountry
        {
            get
            {
                if ((_SW_SearchWarCountry == null))
                {
                    _SW_SearchWarCountry = base.CreateObjectSet<SW_SearchWarCountry>("SW_SearchWarCountry");
                }
                return _SW_SearchWarCountry;
            }
        }
        private ObjectSet<SW_SearchWarCountry> _SW_SearchWarCountry;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarCountryData> SW_SearchWarCountryData
        {
            get
            {
                if ((_SW_SearchWarCountryData == null))
                {
                    _SW_SearchWarCountryData = base.CreateObjectSet<SW_SearchWarCountryData>("SW_SearchWarCountryData");
                }
                return _SW_SearchWarCountryData;
            }
        }
        private ObjectSet<SW_SearchWarCountryData> _SW_SearchWarCountryData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarGame> SW_SearchWarGame
        {
            get
            {
                if ((_SW_SearchWarGame == null))
                {
                    _SW_SearchWarGame = base.CreateObjectSet<SW_SearchWarGame>("SW_SearchWarGame");
                }
                return _SW_SearchWarGame;
            }
        }
        private ObjectSet<SW_SearchWarGame> _SW_SearchWarGame;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarGameType> SW_SearchWarGameType
        {
            get
            {
                if ((_SW_SearchWarGameType == null))
                {
                    _SW_SearchWarGameType = base.CreateObjectSet<SW_SearchWarGameType>("SW_SearchWarGameType");
                }
                return _SW_SearchWarGameType;
            }
        }
        private ObjectSet<SW_SearchWarGameType> _SW_SearchWarGameType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarPlayer> SW_SearchWarPlayer
        {
            get
            {
                if ((_SW_SearchWarPlayer == null))
                {
                    _SW_SearchWarPlayer = base.CreateObjectSet<SW_SearchWarPlayer>("SW_SearchWarPlayer");
                }
                return _SW_SearchWarPlayer;
            }
        }
        private ObjectSet<SW_SearchWarPlayer> _SW_SearchWarPlayer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarSkill> SW_SearchWarSkill
        {
            get
            {
                if ((_SW_SearchWarSkill == null))
                {
                    _SW_SearchWarSkill = base.CreateObjectSet<SW_SearchWarSkill>("SW_SearchWarSkill");
                }
                return _SW_SearchWarSkill;
            }
        }
        private ObjectSet<SW_SearchWarSkill> _SW_SearchWarSkill;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SearchWarSkillData> SW_SearchWarSkillData
        {
            get
            {
                if ((_SW_SearchWarSkillData == null))
                {
                    _SW_SearchWarSkillData = base.CreateObjectSet<SW_SearchWarSkillData>("SW_SearchWarSkillData");
                }
                return _SW_SearchWarSkillData;
            }
        }
        private ObjectSet<SW_SearchWarSkillData> _SW_SearchWarSkillData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SiteMapNodeData> SW_SiteMapNodeData
        {
            get
            {
                if ((_SW_SiteMapNodeData == null))
                {
                    _SW_SiteMapNodeData = base.CreateObjectSet<SW_SiteMapNodeData>("SW_SiteMapNodeData");
                }
                return _SW_SiteMapNodeData;
            }
        }
        private ObjectSet<SW_SiteMapNodeData> _SW_SiteMapNodeData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTags
        {
            get
            {
                if ((_SW_SiteMapNodeMetaTags == null))
                {
                    _SW_SiteMapNodeMetaTags = base.CreateObjectSet<SW_SiteMapNodeMetaTag>("SW_SiteMapNodeMetaTags");
                }
                return _SW_SiteMapNodeMetaTags;
            }
        }
        private ObjectSet<SW_SiteMapNodeMetaTag> _SW_SiteMapNodeMetaTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SiteMapNodeMetaTagsData> SW_SiteMapNodeMetaTagsData
        {
            get
            {
                if ((_SW_SiteMapNodeMetaTagsData == null))
                {
                    _SW_SiteMapNodeMetaTagsData = base.CreateObjectSet<SW_SiteMapNodeMetaTagsData>("SW_SiteMapNodeMetaTagsData");
                }
                return _SW_SiteMapNodeMetaTagsData;
            }
        }
        private ObjectSet<SW_SiteMapNodeMetaTagsData> _SW_SiteMapNodeMetaTagsData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SiteMapNodeRole> SW_SiteMapNodeRoles
        {
            get
            {
                if ((_SW_SiteMapNodeRoles == null))
                {
                    _SW_SiteMapNodeRoles = base.CreateObjectSet<SW_SiteMapNodeRole>("SW_SiteMapNodeRoles");
                }
                return _SW_SiteMapNodeRoles;
            }
        }
        private ObjectSet<SW_SiteMapNodeRole> _SW_SiteMapNodeRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Applications> vw_aspnet_Applications
        {
            get
            {
                if ((_vw_aspnet_Applications == null))
                {
                    _vw_aspnet_Applications = base.CreateObjectSet<vw_aspnet_Applications>("vw_aspnet_Applications");
                }
                return _vw_aspnet_Applications;
            }
        }
        private ObjectSet<vw_aspnet_Applications> _vw_aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers
        {
            get
            {
                if ((_vw_aspnet_MembershipUsers == null))
                {
                    _vw_aspnet_MembershipUsers = base.CreateObjectSet<vw_aspnet_MembershipUsers>("vw_aspnet_MembershipUsers");
                }
                return _vw_aspnet_MembershipUsers;
            }
        }
        private ObjectSet<vw_aspnet_MembershipUsers> _vw_aspnet_MembershipUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Profiles> vw_aspnet_Profiles
        {
            get
            {
                if ((_vw_aspnet_Profiles == null))
                {
                    _vw_aspnet_Profiles = base.CreateObjectSet<vw_aspnet_Profiles>("vw_aspnet_Profiles");
                }
                return _vw_aspnet_Profiles;
            }
        }
        private ObjectSet<vw_aspnet_Profiles> _vw_aspnet_Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Roles> vw_aspnet_Roles
        {
            get
            {
                if ((_vw_aspnet_Roles == null))
                {
                    _vw_aspnet_Roles = base.CreateObjectSet<vw_aspnet_Roles>("vw_aspnet_Roles");
                }
                return _vw_aspnet_Roles;
            }
        }
        private ObjectSet<vw_aspnet_Roles> _vw_aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Users> vw_aspnet_Users
        {
            get
            {
                if ((_vw_aspnet_Users == null))
                {
                    _vw_aspnet_Users = base.CreateObjectSet<vw_aspnet_Users>("vw_aspnet_Users");
                }
                return _vw_aspnet_Users;
            }
        }
        private ObjectSet<vw_aspnet_Users> _vw_aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles
        {
            get
            {
                if ((_vw_aspnet_UsersInRoles == null))
                {
                    _vw_aspnet_UsersInRoles = base.CreateObjectSet<vw_aspnet_UsersInRoles>("vw_aspnet_UsersInRoles");
                }
                return _vw_aspnet_UsersInRoles;
            }
        }
        private ObjectSet<vw_aspnet_UsersInRoles> _vw_aspnet_UsersInRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths
        {
            get
            {
                if ((_vw_aspnet_WebPartState_Paths == null))
                {
                    _vw_aspnet_WebPartState_Paths = base.CreateObjectSet<vw_aspnet_WebPartState_Paths>("vw_aspnet_WebPartState_Paths");
                }
                return _vw_aspnet_WebPartState_Paths;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_Paths> _vw_aspnet_WebPartState_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared
        {
            get
            {
                if ((_vw_aspnet_WebPartState_Shared == null))
                {
                    _vw_aspnet_WebPartState_Shared = base.CreateObjectSet<vw_aspnet_WebPartState_Shared>("vw_aspnet_WebPartState_Shared");
                }
                return _vw_aspnet_WebPartState_Shared;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_Shared> _vw_aspnet_WebPartState_Shared;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User
        {
            get
            {
                if ((_vw_aspnet_WebPartState_User == null))
                {
                    _vw_aspnet_WebPartState_User = base.CreateObjectSet<vw_aspnet_WebPartState_User>("vw_aspnet_WebPartState_User");
                }
                return _vw_aspnet_WebPartState_User;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_User> _vw_aspnet_WebPartState_User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SW_SiteMapNode> SW_SiteMapNode
        {
            get
            {
                if ((_SW_SiteMapNode == null))
                {
                    _SW_SiteMapNode = base.CreateObjectSet<SW_SiteMapNode>("SW_SiteMapNode");
                }
                return _SW_SiteMapNode;
            }
        }
        private ObjectSet<SW_SiteMapNode> _SW_SiteMapNode;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Paths(aspnet_Paths aspnet_Paths)
        {
            base.AddObject("aspnet_Paths", aspnet_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationAllUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers)
        {
            base.AddObject("aspnet_PersonalizationAllUsers", aspnet_PersonalizationAllUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationPerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser)
        {
            base.AddObject("aspnet_PersonalizationPerUser", aspnet_PersonalizationPerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Profile(aspnet_Profile aspnet_Profile)
        {
            base.AddObject("aspnet_Profile", aspnet_Profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Role aspnet_Role)
        {
            base.AddObject("aspnet_Roles", aspnet_Role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_WebEvent_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_WebEvent_Events(aspnet_WebEvent_Events aspnet_WebEvent_Events)
        {
            base.AddObject("aspnet_WebEvent_Events", aspnet_WebEvent_Events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_ChatBlinking EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_ChatBlinking(SW_ChatBlinking sW_ChatBlinking)
        {
            base.AddObject("SW_ChatBlinking", sW_ChatBlinking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_Server EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_Server(SW_Server sW_Server)
        {
            base.AddObject("SW_Server", sW_Server);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_ServerContinents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_ServerContinents(SW_ServerContinents sW_ServerContinents)
        {
            base.AddObject("SW_ServerContinents", sW_ServerContinents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_Advertise EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_Advertise(SW_Advertise sW_Advertise)
        {
            base.AddObject("SW_Advertise", sW_Advertise);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_AdvertiseCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_AdvertiseCompany(SW_AdvertiseCompany sW_AdvertiseCompany)
        {
            base.AddObject("SW_AdvertiseCompany", sW_AdvertiseCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_AdvertisePlace EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_AdvertisePlace(SW_AdvertisePlace sW_AdvertisePlace)
        {
            base.AddObject("SW_AdvertisePlace", sW_AdvertisePlace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_Banlist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_Banlist(SW_Banlist sW_Banlist)
        {
            base.AddObject("SW_Banlist", sW_Banlist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_Blog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_Blog(SW_Blog sW_Blog)
        {
            base.AddObject("SW_Blog", sW_Blog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_BlogData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_BlogData(SW_BlogData sW_BlogData)
        {
            base.AddObject("SW_BlogData", sW_BlogData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_chat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_chat(SW_chat sW_chat)
        {
            base.AddObject("SW_chat", sW_chat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_ChatMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_ChatMessages(SW_ChatMessage sW_ChatMessage)
        {
            base.AddObject("SW_ChatMessages", sW_ChatMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_ChatPersons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_ChatPersons(SW_ChatPerson sW_ChatPerson)
        {
            base.AddObject("SW_ChatPersons", sW_ChatPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_Faq EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_Faq(SW_Faq sW_Faq)
        {
            base.AddObject("SW_Faq", sW_Faq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_FaqData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_FaqData(SW_FaqData sW_FaqData)
        {
            base.AddObject("SW_FaqData", sW_FaqData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_Lang EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_Lang(SW_Lang sW_Lang)
        {
            base.AddObject("SW_Lang", sW_Lang);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWar(SW_SearchWar sW_SearchWar)
        {
            base.AddObject("SW_SearchWar", sW_SearchWar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarContinent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarContinent(SW_SearchWarContinent sW_SearchWarContinent)
        {
            base.AddObject("SW_SearchWarContinent", sW_SearchWarContinent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarContinentData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarContinentData(SW_SearchWarContinentData sW_SearchWarContinentData)
        {
            base.AddObject("SW_SearchWarContinentData", sW_SearchWarContinentData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarCountry EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarCountry(SW_SearchWarCountry sW_SearchWarCountry)
        {
            base.AddObject("SW_SearchWarCountry", sW_SearchWarCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarCountryData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarCountryData(SW_SearchWarCountryData sW_SearchWarCountryData)
        {
            base.AddObject("SW_SearchWarCountryData", sW_SearchWarCountryData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarGame EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarGame(SW_SearchWarGame sW_SearchWarGame)
        {
            base.AddObject("SW_SearchWarGame", sW_SearchWarGame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarGameType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarGameType(SW_SearchWarGameType sW_SearchWarGameType)
        {
            base.AddObject("SW_SearchWarGameType", sW_SearchWarGameType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarPlayer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarPlayer(SW_SearchWarPlayer sW_SearchWarPlayer)
        {
            base.AddObject("SW_SearchWarPlayer", sW_SearchWarPlayer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarSkill EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarSkill(SW_SearchWarSkill sW_SearchWarSkill)
        {
            base.AddObject("SW_SearchWarSkill", sW_SearchWarSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SearchWarSkillData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SearchWarSkillData(SW_SearchWarSkillData sW_SearchWarSkillData)
        {
            base.AddObject("SW_SearchWarSkillData", sW_SearchWarSkillData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SiteMapNodeData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SiteMapNodeData(SW_SiteMapNodeData sW_SiteMapNodeData)
        {
            base.AddObject("SW_SiteMapNodeData", sW_SiteMapNodeData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SiteMapNodeMetaTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SiteMapNodeMetaTags(SW_SiteMapNodeMetaTag sW_SiteMapNodeMetaTag)
        {
            base.AddObject("SW_SiteMapNodeMetaTags", sW_SiteMapNodeMetaTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SiteMapNodeMetaTagsData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SiteMapNodeMetaTagsData(SW_SiteMapNodeMetaTagsData sW_SiteMapNodeMetaTagsData)
        {
            base.AddObject("SW_SiteMapNodeMetaTagsData", sW_SiteMapNodeMetaTagsData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SiteMapNodeRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SiteMapNodeRoles(SW_SiteMapNodeRole sW_SiteMapNodeRole)
        {
            base.AddObject("SW_SiteMapNodeRoles", sW_SiteMapNodeRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Applications(vw_aspnet_Applications vw_aspnet_Applications)
        {
            base.AddObject("vw_aspnet_Applications", vw_aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_MembershipUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_MembershipUsers(vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers)
        {
            base.AddObject("vw_aspnet_MembershipUsers", vw_aspnet_MembershipUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Profiles(vw_aspnet_Profiles vw_aspnet_Profiles)
        {
            base.AddObject("vw_aspnet_Profiles", vw_aspnet_Profiles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Roles(vw_aspnet_Roles vw_aspnet_Roles)
        {
            base.AddObject("vw_aspnet_Roles", vw_aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Users(vw_aspnet_Users vw_aspnet_Users)
        {
            base.AddObject("vw_aspnet_Users", vw_aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_UsersInRoles(vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles)
        {
            base.AddObject("vw_aspnet_UsersInRoles", vw_aspnet_UsersInRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_Paths(vw_aspnet_WebPartState_Paths vw_aspnet_WebPartState_Paths)
        {
            base.AddObject("vw_aspnet_WebPartState_Paths", vw_aspnet_WebPartState_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_Shared EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_Shared(vw_aspnet_WebPartState_Shared vw_aspnet_WebPartState_Shared)
        {
            base.AddObject("vw_aspnet_WebPartState_Shared", vw_aspnet_WebPartState_Shared);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_User(vw_aspnet_WebPartState_User vw_aspnet_WebPartState_User)
        {
            base.AddObject("vw_aspnet_WebPartState_User", vw_aspnet_WebPartState_User);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SW_SiteMapNode EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSW_SiteMapNode(SW_SiteMapNode sW_SiteMapNode)
        {
            base.AddObject("SW_SiteMapNode", sW_SiteMapNode);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Me__Appli__145C0A3F", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("Searchwar_netModel.FK__aspnet_Me__Appli__145C0A3F", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("Searchwar_netModel.FK__aspnet_Me__Appli__145C0A3F", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pa__Appli__45F365D3", "aspnet_Paths")]
        public EntityCollection<aspnet_Paths> aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pa__Appli__45F365D3", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pa__Appli__45F365D3", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Ro__Appli__32E0915F", "aspnet_Roles")]
        public EntityCollection<aspnet_Role> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Role>("Searchwar_netModel.FK__aspnet_Ro__Appli__32E0915F", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Role>("Searchwar_netModel.FK__aspnet_Ro__Appli__32E0915F", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Us__Appli__0425A276", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("Searchwar_netModel.FK__aspnet_Us__Appli__0425A276", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("Searchwar_netModel.FK__aspnet_Us__Appli__0425A276", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Me__Appli__145C0A3F", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Me__Appli__145C0A3F", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Me__Appli__145C0A3F", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Me__Appli__145C0A3F", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Me__Appli__145C0A3F", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Me__UserI__15502E78", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static aspnet_Paths Createaspnet_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            aspnet_Paths aspnet_Paths = new aspnet_Paths();
            aspnet_Paths.ApplicationId = applicationId;
            aspnet_Paths.PathId = pathId;
            aspnet_Paths.Path = path;
            aspnet_Paths.LoweredPath = loweredPath;
            return aspnet_Paths;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                OnLoweredPathChanging(value);
                ReportPropertyChanging("LoweredPath");
                _LoweredPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredPath");
                OnLoweredPathChanged();
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pa__Appli__45F365D3", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Pa__Appli__45F365D3", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Pa__Appli__45F365D3", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Pa__Appli__45F365D3", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Pa__Appli__45F365D3", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_PersonalizationAllUsers")]
        public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_PersonalizationAllUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_PersonalizationAllUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_PersonalizationAllUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_PersonalizationAllUsers>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_PersonalizationAllUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("Searchwar_netModel.FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("Searchwar_netModel.FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_PersonalizationPerUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_PersonalizationAllUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationAllUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationAllUsers object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationAllUsers Createaspnet_PersonalizationAllUsers(global::System.Guid pathId, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers = new aspnet_PersonalizationAllUsers();
            aspnet_PersonalizationAllUsers.PathId = pathId;
            aspnet_PersonalizationAllUsers.PageSettings = pageSettings;
            aspnet_PersonalizationAllUsers.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationAllUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4BAC3F29", "aspnet_Paths", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_PersonalizationPerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationPerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationPerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationPerUser Createaspnet_PersonalizationPerUser(global::System.Guid id, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser = new aspnet_PersonalizationPerUser();
            aspnet_PersonalizationPerUser.Id = id;
            aspnet_PersonalizationPerUser.PageSettings = pageSettings;
            aspnet_PersonalizationPerUser.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationPerUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("Searchwar_netModel.FK__aspnet_Pe__PathI__4F7CD00D", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pe__UserI__5070F446", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pe__UserI__5070F446", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pe__UserI__5070F446", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pe__UserI__5070F446", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pe__UserI__5070F446", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        /// <param name="propertyValuesBinary">Initial value of the PropertyValuesBinary property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_Profile Createaspnet_Profile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValuesString, global::System.Byte[] propertyValuesBinary, global::System.DateTime lastUpdatedDate)
        {
            aspnet_Profile aspnet_Profile = new aspnet_Profile();
            aspnet_Profile.UserId = userId;
            aspnet_Profile.PropertyNames = propertyNames;
            aspnet_Profile.PropertyValuesString = propertyValuesString;
            aspnet_Profile.PropertyValuesBinary = propertyValuesBinary;
            aspnet_Profile.LastUpdatedDate = lastUpdatedDate;
            return aspnet_Profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pr__UserI__29572725", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Role object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Role Createaspnet_Role(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Role aspnet_Role = new aspnet_Role();
            aspnet_Role.ApplicationId = applicationId;
            aspnet_Role.RoleId = roleId;
            aspnet_Role.RoleName = roleName;
            aspnet_Role.LoweredRoleName = loweredRoleName;
            return aspnet_Role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Ro__Appli__32E0915F", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Ro__Appli__32E0915F", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Ro__Appli__32E0915F", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Ro__Appli__32E0915F", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Ro__Appli__32E0915F", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapRoles_aspnet_Roles", "SW_SiteMapNodeRoles")]
        public EntityCollection<SW_SiteMapNodeRole> SW_SiteMapNodeRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeRole>("Searchwar_netModel.FK_SW_SiteMapRoles_aspnet_Roles", "SW_SiteMapNodeRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeRole>("Searchwar_netModel.FK_SW_SiteMapRoles_aspnet_Roles", "SW_SiteMapNodeRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("Searchwar_netModel.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("Searchwar_netModel.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Us__Appli__0425A276", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Us__Appli__0425A276", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Us__Appli__0425A276", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Us__Appli__0425A276", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Searchwar_netModel.FK__aspnet_Us__Appli__0425A276", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Me__UserI__15502E78", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Searchwar_netModel.FK__aspnet_Me__UserI__15502E78", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pe__UserI__5070F446", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("Searchwar_netModel.FK__aspnet_Pe__UserI__5070F446", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("Searchwar_netModel.FK__aspnet_Pe__UserI__5070F446", "aspnet_PersonalizationPerUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK__aspnet_Pr__UserI__29572725", "aspnet_Profile")]
        public aspnet_Profile aspnet_Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Profile> aspnet_ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Profile>("Searchwar_netModel.FK__aspnet_Pr__UserI__29572725", "aspnet_Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Blog_aspnet_Users", "SW_Blog")]
        public EntityCollection<SW_Blog> SW_Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_Blog>("Searchwar_netModel.FK_SW_Blog_aspnet_Users", "SW_Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_Blog>("Searchwar_netModel.FK_SW_Blog_aspnet_Users", "SW_Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Blog_aspnet_Users1", "SW_Blog")]
        public EntityCollection<SW_Blog> SW_Blog1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_Blog>("Searchwar_netModel.FK_SW_Blog_aspnet_Users1", "SW_Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_Blog>("Searchwar_netModel.FK_SW_Blog_aspnet_Users1", "SW_Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Faq_aspnet_Users", "SW_Faq")]
        public EntityCollection<SW_Faq> SW_Faq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_Faq>("Searchwar_netModel.FK_SW_Faq_aspnet_Users", "SW_Faq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_Faq>("Searchwar_netModel.FK_SW_Faq_aspnet_Users", "SW_Faq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Faq_aspnet_Users1", "SW_Faq")]
        public EntityCollection<SW_Faq> SW_Faq1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_Faq>("Searchwar_netModel.FK_SW_Faq_aspnet_Users1", "SW_Faq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_Faq>("Searchwar_netModel.FK_SW_Faq_aspnet_Users1", "SW_Faq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinent_aspnet_Users", "SW_SearchWarContinent")]
        public EntityCollection<SW_SearchWarContinent> SW_SearchWarContinent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users", "SW_SearchWarContinent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinent_aspnet_Users1", "SW_SearchWarContinent")]
        public EntityCollection<SW_SearchWarContinent> SW_SearchWarContinent1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users1", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users1", "SW_SearchWarContinent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_aspnet_Users", "SW_SearchWarCountry")]
        public EntityCollection<SW_SearchWarCountry> SW_SearchWarCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users", "SW_SearchWarCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users", "SW_SearchWarCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_aspnet_Users1", "SW_SearchWarCountry")]
        public EntityCollection<SW_SearchWarCountry> SW_SearchWarCountry1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users1", "SW_SearchWarCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users1", "SW_SearchWarCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarGame_aspnet_Users", "SW_SearchWarGame")]
        public EntityCollection<SW_SearchWarGame> SW_SearchWarGame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users", "SW_SearchWarGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users", "SW_SearchWarGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarGame_aspnet_Users1", "SW_SearchWarGame")]
        public EntityCollection<SW_SearchWarGame> SW_SearchWarGame1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users1", "SW_SearchWarGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users1", "SW_SearchWarGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkill_aspnet_Users", "SW_SearchWarSkill")]
        public EntityCollection<SW_SearchWarSkill> SW_SearchWarSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users", "SW_SearchWarSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users", "SW_SearchWarSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkill_aspnet_Users1", "SW_SearchWarSkill")]
        public EntityCollection<SW_SearchWarSkill> SW_SearchWarSkill1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users1", "SW_SearchWarSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users1", "SW_SearchWarSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarType_aspnet_Users", "SW_SearchWarGameType")]
        public EntityCollection<SW_SearchWarGameType> SW_SearchWarGameType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users", "SW_SearchWarGameType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users", "SW_SearchWarGameType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarType_aspnet_Users1", "SW_SearchWarGameType")]
        public EntityCollection<SW_SearchWarGameType> SW_SearchWarGameType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users1", "SW_SearchWarGameType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users1", "SW_SearchWarGameType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_aspnet_Users", "SW_SiteMapNodeMetaTags")]
        public EntityCollection<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users", "SW_SiteMapNodeMetaTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users", "SW_SiteMapNodeMetaTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_aspnet_Users1", "SW_SiteMapNodeMetaTags")]
        public EntityCollection<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTags1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users1", "SW_SiteMapNodeMetaTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users1", "SW_SiteMapNodeMetaTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Role> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Role>("Searchwar_netModel.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Role>("Searchwar_netModel.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMap_aspnet_Users", "SW_SiteMapNode")]
        public EntityCollection<SW_SiteMapNode> SW_SiteMapNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users", "SW_SiteMapNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users", "SW_SiteMapNode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMap_aspnet_Users1", "SW_SiteMapNode")]
        public EntityCollection<SW_SiteMapNode> SW_SiteMapNode1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users1", "SW_SiteMapNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users1", "SW_SiteMapNode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="aspnet_WebEvent_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_WebEvent_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_WebEvent_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventTimeUtc">Initial value of the EventTimeUtc property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSequence">Initial value of the EventSequence property.</param>
        /// <param name="eventOccurrence">Initial value of the EventOccurrence property.</param>
        /// <param name="eventCode">Initial value of the EventCode property.</param>
        /// <param name="eventDetailCode">Initial value of the EventDetailCode property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static aspnet_WebEvent_Events Createaspnet_WebEvent_Events(global::System.String eventId, global::System.DateTime eventTimeUtc, global::System.DateTime eventTime, global::System.String eventType, global::System.Decimal eventSequence, global::System.Decimal eventOccurrence, global::System.Int32 eventCode, global::System.Int32 eventDetailCode, global::System.String machineName)
        {
            aspnet_WebEvent_Events aspnet_WebEvent_Events = new aspnet_WebEvent_Events();
            aspnet_WebEvent_Events.EventId = eventId;
            aspnet_WebEvent_Events.EventTimeUtc = eventTimeUtc;
            aspnet_WebEvent_Events.EventTime = eventTime;
            aspnet_WebEvent_Events.EventType = eventType;
            aspnet_WebEvent_Events.EventSequence = eventSequence;
            aspnet_WebEvent_Events.EventOccurrence = eventOccurrence;
            aspnet_WebEvent_Events.EventCode = eventCode;
            aspnet_WebEvent_Events.EventDetailCode = eventDetailCode;
            aspnet_WebEvent_Events.MachineName = machineName;
            return aspnet_WebEvent_Events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.String _EventId;
        partial void OnEventIdChanging(global::System.String value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimeUtc
        {
            get
            {
                return _EventTimeUtc;
            }
            set
            {
                OnEventTimeUtcChanging(value);
                ReportPropertyChanging("EventTimeUtc");
                _EventTimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTimeUtc");
                OnEventTimeUtcChanged();
            }
        }
        private global::System.DateTime _EventTimeUtc;
        partial void OnEventTimeUtcChanging(global::System.DateTime value);
        partial void OnEventTimeUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventSequence
        {
            get
            {
                return _EventSequence;
            }
            set
            {
                OnEventSequenceChanging(value);
                ReportPropertyChanging("EventSequence");
                _EventSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventSequence");
                OnEventSequenceChanged();
            }
        }
        private global::System.Decimal _EventSequence;
        partial void OnEventSequenceChanging(global::System.Decimal value);
        partial void OnEventSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventOccurrence
        {
            get
            {
                return _EventOccurrence;
            }
            set
            {
                OnEventOccurrenceChanging(value);
                ReportPropertyChanging("EventOccurrence");
                _EventOccurrence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventOccurrence");
                OnEventOccurrenceChanged();
            }
        }
        private global::System.Decimal _EventOccurrence;
        partial void OnEventOccurrenceChanging(global::System.Decimal value);
        partial void OnEventOccurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCode
        {
            get
            {
                return _EventCode;
            }
            set
            {
                OnEventCodeChanging(value);
                ReportPropertyChanging("EventCode");
                _EventCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCode");
                OnEventCodeChanged();
            }
        }
        private global::System.Int32 _EventCode;
        partial void OnEventCodeChanging(global::System.Int32 value);
        partial void OnEventCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDetailCode
        {
            get
            {
                return _EventDetailCode;
            }
            set
            {
                OnEventDetailCodeChanging(value);
                ReportPropertyChanging("EventDetailCode");
                _EventDetailCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDetailCode");
                OnEventDetailCodeChanged();
            }
        }
        private global::System.Int32 _EventDetailCode;
        partial void OnEventDetailCodeChanging(global::System.Int32 value);
        partial void OnEventDetailCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationPath
        {
            get
            {
                return _ApplicationPath;
            }
            set
            {
                OnApplicationPathChanging(value);
                ReportPropertyChanging("ApplicationPath");
                _ApplicationPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationPath");
                OnApplicationPathChanged();
            }
        }
        private global::System.String _ApplicationPath;
        partial void OnApplicationPathChanging(global::System.String value);
        partial void OnApplicationPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationVirtualPath
        {
            get
            {
                return _ApplicationVirtualPath;
            }
            set
            {
                OnApplicationVirtualPathChanging(value);
                ReportPropertyChanging("ApplicationVirtualPath");
                _ApplicationVirtualPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationVirtualPath");
                OnApplicationVirtualPathChanged();
            }
        }
        private global::System.String _ApplicationVirtualPath;
        partial void OnApplicationVirtualPathChanging(global::System.String value);
        partial void OnApplicationVirtualPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUrl
        {
            get
            {
                return _RequestUrl;
            }
            set
            {
                OnRequestUrlChanging(value);
                ReportPropertyChanging("RequestUrl");
                _RequestUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUrl");
                OnRequestUrlChanged();
            }
        }
        private global::System.String _RequestUrl;
        partial void OnRequestUrlChanging(global::System.String value);
        partial void OnRequestUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionType
        {
            get
            {
                return _ExceptionType;
            }
            set
            {
                OnExceptionTypeChanging(value);
                ReportPropertyChanging("ExceptionType");
                _ExceptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionType");
                OnExceptionTypeChanged();
            }
        }
        private global::System.String _ExceptionType;
        partial void OnExceptionTypeChanging(global::System.String value);
        partial void OnExceptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_Advertise")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_Advertise : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_Advertise object.
        /// </summary>
        /// <param name="advertiseId">Initial value of the AdvertiseId property.</param>
        /// <param name="advertiseCode">Initial value of the AdvertiseCode property.</param>
        /// <param name="advertisePlaceId">Initial value of the AdvertisePlaceId property.</param>
        /// <param name="advertiseCompanyId">Initial value of the AdvertiseCompanyId property.</param>
        /// <param name="advertiseName">Initial value of the AdvertiseName property.</param>
        /// <param name="advertiseAddedDate">Initial value of the AdvertiseAddedDate property.</param>
        /// <param name="advertiseShowFromDate">Initial value of the AdvertiseShowFromDate property.</param>
        /// <param name="advertiseShowToDate">Initial value of the AdvertiseShowToDate property.</param>
        /// <param name="advertiseAddedUserId">Initial value of the AdvertiseAddedUserId property.</param>
        /// <param name="advertiseEditUserId">Initial value of the AdvertiseEditUserId property.</param>
        public static SW_Advertise CreateSW_Advertise(global::System.Int32 advertiseId, global::System.String advertiseCode, global::System.Int32 advertisePlaceId, global::System.Int32 advertiseCompanyId, global::System.String advertiseName, global::System.DateTime advertiseAddedDate, global::System.DateTime advertiseShowFromDate, global::System.DateTime advertiseShowToDate, global::System.DateTime advertiseAddedUserId, global::System.DateTime advertiseEditUserId)
        {
            SW_Advertise sW_Advertise = new SW_Advertise();
            sW_Advertise.AdvertiseId = advertiseId;
            sW_Advertise.AdvertiseCode = advertiseCode;
            sW_Advertise.AdvertisePlaceId = advertisePlaceId;
            sW_Advertise.AdvertiseCompanyId = advertiseCompanyId;
            sW_Advertise.AdvertiseName = advertiseName;
            sW_Advertise.AdvertiseAddedDate = advertiseAddedDate;
            sW_Advertise.AdvertiseShowFromDate = advertiseShowFromDate;
            sW_Advertise.AdvertiseShowToDate = advertiseShowToDate;
            sW_Advertise.AdvertiseAddedUserId = advertiseAddedUserId;
            sW_Advertise.AdvertiseEditUserId = advertiseEditUserId;
            return sW_Advertise;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertiseId
        {
            get
            {
                return _AdvertiseId;
            }
            set
            {
                if (_AdvertiseId != value)
                {
                    OnAdvertiseIdChanging(value);
                    ReportPropertyChanging("AdvertiseId");
                    _AdvertiseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdvertiseId");
                    OnAdvertiseIdChanged();
                }
            }
        }
        private global::System.Int32 _AdvertiseId;
        partial void OnAdvertiseIdChanging(global::System.Int32 value);
        partial void OnAdvertiseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdvertiseCode
        {
            get
            {
                return _AdvertiseCode;
            }
            set
            {
                OnAdvertiseCodeChanging(value);
                ReportPropertyChanging("AdvertiseCode");
                _AdvertiseCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdvertiseCode");
                OnAdvertiseCodeChanged();
            }
        }
        private global::System.String _AdvertiseCode;
        partial void OnAdvertiseCodeChanging(global::System.String value);
        partial void OnAdvertiseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertisePlaceId
        {
            get
            {
                return _AdvertisePlaceId;
            }
            set
            {
                OnAdvertisePlaceIdChanging(value);
                ReportPropertyChanging("AdvertisePlaceId");
                _AdvertisePlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisePlaceId");
                OnAdvertisePlaceIdChanged();
            }
        }
        private global::System.Int32 _AdvertisePlaceId;
        partial void OnAdvertisePlaceIdChanging(global::System.Int32 value);
        partial void OnAdvertisePlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertiseCompanyId
        {
            get
            {
                return _AdvertiseCompanyId;
            }
            set
            {
                OnAdvertiseCompanyIdChanging(value);
                ReportPropertyChanging("AdvertiseCompanyId");
                _AdvertiseCompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseCompanyId");
                OnAdvertiseCompanyIdChanged();
            }
        }
        private global::System.Int32 _AdvertiseCompanyId;
        partial void OnAdvertiseCompanyIdChanging(global::System.Int32 value);
        partial void OnAdvertiseCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdvertiseName
        {
            get
            {
                return _AdvertiseName;
            }
            set
            {
                OnAdvertiseNameChanging(value);
                ReportPropertyChanging("AdvertiseName");
                _AdvertiseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdvertiseName");
                OnAdvertiseNameChanged();
            }
        }
        private global::System.String _AdvertiseName;
        partial void OnAdvertiseNameChanging(global::System.String value);
        partial void OnAdvertiseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseAddedDate
        {
            get
            {
                return _AdvertiseAddedDate;
            }
            set
            {
                OnAdvertiseAddedDateChanging(value);
                ReportPropertyChanging("AdvertiseAddedDate");
                _AdvertiseAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseAddedDate");
                OnAdvertiseAddedDateChanged();
            }
        }
        private global::System.DateTime _AdvertiseAddedDate;
        partial void OnAdvertiseAddedDateChanging(global::System.DateTime value);
        partial void OnAdvertiseAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdvertiseEditDate
        {
            get
            {
                return _AdvertiseEditDate;
            }
            set
            {
                OnAdvertiseEditDateChanging(value);
                ReportPropertyChanging("AdvertiseEditDate");
                _AdvertiseEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseEditDate");
                OnAdvertiseEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdvertiseEditDate;
        partial void OnAdvertiseEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdvertiseEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseShowFromDate
        {
            get
            {
                return _AdvertiseShowFromDate;
            }
            set
            {
                OnAdvertiseShowFromDateChanging(value);
                ReportPropertyChanging("AdvertiseShowFromDate");
                _AdvertiseShowFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseShowFromDate");
                OnAdvertiseShowFromDateChanged();
            }
        }
        private global::System.DateTime _AdvertiseShowFromDate;
        partial void OnAdvertiseShowFromDateChanging(global::System.DateTime value);
        partial void OnAdvertiseShowFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseShowToDate
        {
            get
            {
                return _AdvertiseShowToDate;
            }
            set
            {
                OnAdvertiseShowToDateChanging(value);
                ReportPropertyChanging("AdvertiseShowToDate");
                _AdvertiseShowToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseShowToDate");
                OnAdvertiseShowToDateChanged();
            }
        }
        private global::System.DateTime _AdvertiseShowToDate;
        partial void OnAdvertiseShowToDateChanging(global::System.DateTime value);
        partial void OnAdvertiseShowToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseAddedUserId
        {
            get
            {
                return _AdvertiseAddedUserId;
            }
            set
            {
                OnAdvertiseAddedUserIdChanging(value);
                ReportPropertyChanging("AdvertiseAddedUserId");
                _AdvertiseAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseAddedUserId");
                OnAdvertiseAddedUserIdChanged();
            }
        }
        private global::System.DateTime _AdvertiseAddedUserId;
        partial void OnAdvertiseAddedUserIdChanging(global::System.DateTime value);
        partial void OnAdvertiseAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseEditUserId
        {
            get
            {
                return _AdvertiseEditUserId;
            }
            set
            {
                OnAdvertiseEditUserIdChanging(value);
                ReportPropertyChanging("AdvertiseEditUserId");
                _AdvertiseEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseEditUserId");
                OnAdvertiseEditUserIdChanged();
            }
        }
        private global::System.DateTime _AdvertiseEditUserId;
        partial void OnAdvertiseEditUserIdChanging(global::System.DateTime value);
        partial void OnAdvertiseEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Advertise_SW_AdvertiseCompany", "SW_AdvertiseCompany")]
        public SW_AdvertiseCompany SW_AdvertiseCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_AdvertiseCompany>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertiseCompany", "SW_AdvertiseCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_AdvertiseCompany>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertiseCompany", "SW_AdvertiseCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_AdvertiseCompany> SW_AdvertiseCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_AdvertiseCompany>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertiseCompany", "SW_AdvertiseCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_AdvertiseCompany>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertiseCompany", "SW_AdvertiseCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Advertise_SW_AdvertisePlace", "SW_AdvertisePlace")]
        public SW_AdvertisePlace SW_AdvertisePlace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_AdvertisePlace>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertisePlace", "SW_AdvertisePlace").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_AdvertisePlace>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertisePlace", "SW_AdvertisePlace").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_AdvertisePlace> SW_AdvertisePlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_AdvertisePlace>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertisePlace", "SW_AdvertisePlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_AdvertisePlace>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertisePlace", "SW_AdvertisePlace", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_AdvertiseCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_AdvertiseCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_AdvertiseCompany object.
        /// </summary>
        /// <param name="advertiseCompanyId">Initial value of the AdvertiseCompanyId property.</param>
        /// <param name="advertiseCompanyName">Initial value of the AdvertiseCompanyName property.</param>
        /// <param name="advertiseCompanyAddedDate">Initial value of the AdvertiseCompanyAddedDate property.</param>
        /// <param name="advertiseCompanyEditDate">Initial value of the AdvertiseCompanyEditDate property.</param>
        /// <param name="advertiseCompanyAddedUserId">Initial value of the AdvertiseCompanyAddedUserId property.</param>
        /// <param name="advertiseCompanyEditUserId">Initial value of the AdvertiseCompanyEditUserId property.</param>
        public static SW_AdvertiseCompany CreateSW_AdvertiseCompany(global::System.Int32 advertiseCompanyId, global::System.String advertiseCompanyName, global::System.DateTime advertiseCompanyAddedDate, global::System.DateTime advertiseCompanyEditDate, global::System.Guid advertiseCompanyAddedUserId, global::System.Guid advertiseCompanyEditUserId)
        {
            SW_AdvertiseCompany sW_AdvertiseCompany = new SW_AdvertiseCompany();
            sW_AdvertiseCompany.AdvertiseCompanyId = advertiseCompanyId;
            sW_AdvertiseCompany.AdvertiseCompanyName = advertiseCompanyName;
            sW_AdvertiseCompany.AdvertiseCompanyAddedDate = advertiseCompanyAddedDate;
            sW_AdvertiseCompany.AdvertiseCompanyEditDate = advertiseCompanyEditDate;
            sW_AdvertiseCompany.AdvertiseCompanyAddedUserId = advertiseCompanyAddedUserId;
            sW_AdvertiseCompany.AdvertiseCompanyEditUserId = advertiseCompanyEditUserId;
            return sW_AdvertiseCompany;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertiseCompanyId
        {
            get
            {
                return _AdvertiseCompanyId;
            }
            set
            {
                if (_AdvertiseCompanyId != value)
                {
                    OnAdvertiseCompanyIdChanging(value);
                    ReportPropertyChanging("AdvertiseCompanyId");
                    _AdvertiseCompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdvertiseCompanyId");
                    OnAdvertiseCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _AdvertiseCompanyId;
        partial void OnAdvertiseCompanyIdChanging(global::System.Int32 value);
        partial void OnAdvertiseCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdvertiseCompanyName
        {
            get
            {
                return _AdvertiseCompanyName;
            }
            set
            {
                OnAdvertiseCompanyNameChanging(value);
                ReportPropertyChanging("AdvertiseCompanyName");
                _AdvertiseCompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdvertiseCompanyName");
                OnAdvertiseCompanyNameChanged();
            }
        }
        private global::System.String _AdvertiseCompanyName;
        partial void OnAdvertiseCompanyNameChanging(global::System.String value);
        partial void OnAdvertiseCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdvertiseCompanyDesc
        {
            get
            {
                return _AdvertiseCompanyDesc;
            }
            set
            {
                OnAdvertiseCompanyDescChanging(value);
                ReportPropertyChanging("AdvertiseCompanyDesc");
                _AdvertiseCompanyDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdvertiseCompanyDesc");
                OnAdvertiseCompanyDescChanged();
            }
        }
        private global::System.String _AdvertiseCompanyDesc;
        partial void OnAdvertiseCompanyDescChanging(global::System.String value);
        partial void OnAdvertiseCompanyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseCompanyAddedDate
        {
            get
            {
                return _AdvertiseCompanyAddedDate;
            }
            set
            {
                OnAdvertiseCompanyAddedDateChanging(value);
                ReportPropertyChanging("AdvertiseCompanyAddedDate");
                _AdvertiseCompanyAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseCompanyAddedDate");
                OnAdvertiseCompanyAddedDateChanged();
            }
        }
        private global::System.DateTime _AdvertiseCompanyAddedDate;
        partial void OnAdvertiseCompanyAddedDateChanging(global::System.DateTime value);
        partial void OnAdvertiseCompanyAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertiseCompanyEditDate
        {
            get
            {
                return _AdvertiseCompanyEditDate;
            }
            set
            {
                OnAdvertiseCompanyEditDateChanging(value);
                ReportPropertyChanging("AdvertiseCompanyEditDate");
                _AdvertiseCompanyEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseCompanyEditDate");
                OnAdvertiseCompanyEditDateChanged();
            }
        }
        private global::System.DateTime _AdvertiseCompanyEditDate;
        partial void OnAdvertiseCompanyEditDateChanging(global::System.DateTime value);
        partial void OnAdvertiseCompanyEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AdvertiseCompanyAddedUserId
        {
            get
            {
                return _AdvertiseCompanyAddedUserId;
            }
            set
            {
                OnAdvertiseCompanyAddedUserIdChanging(value);
                ReportPropertyChanging("AdvertiseCompanyAddedUserId");
                _AdvertiseCompanyAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseCompanyAddedUserId");
                OnAdvertiseCompanyAddedUserIdChanged();
            }
        }
        private global::System.Guid _AdvertiseCompanyAddedUserId;
        partial void OnAdvertiseCompanyAddedUserIdChanging(global::System.Guid value);
        partial void OnAdvertiseCompanyAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AdvertiseCompanyEditUserId
        {
            get
            {
                return _AdvertiseCompanyEditUserId;
            }
            set
            {
                OnAdvertiseCompanyEditUserIdChanging(value);
                ReportPropertyChanging("AdvertiseCompanyEditUserId");
                _AdvertiseCompanyEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertiseCompanyEditUserId");
                OnAdvertiseCompanyEditUserIdChanged();
            }
        }
        private global::System.Guid _AdvertiseCompanyEditUserId;
        partial void OnAdvertiseCompanyEditUserIdChanging(global::System.Guid value);
        partial void OnAdvertiseCompanyEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Advertise_SW_AdvertiseCompany", "SW_Advertise")]
        public EntityCollection<SW_Advertise> SW_Advertise
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_Advertise>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertiseCompany", "SW_Advertise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_Advertise>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertiseCompany", "SW_Advertise", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_AdvertisePlace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_AdvertisePlace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_AdvertisePlace object.
        /// </summary>
        /// <param name="advertisePlaceId">Initial value of the AdvertisePlaceId property.</param>
        /// <param name="advertisePlaceAddedDate">Initial value of the AdvertisePlaceAddedDate property.</param>
        /// <param name="advertisePlaceEditDate">Initial value of the AdvertisePlaceEditDate property.</param>
        /// <param name="advertisePlaceAddedUserId">Initial value of the AdvertisePlaceAddedUserId property.</param>
        /// <param name="advertisePlaceEditUserId">Initial value of the AdvertisePlaceEditUserId property.</param>
        public static SW_AdvertisePlace CreateSW_AdvertisePlace(global::System.Int32 advertisePlaceId, global::System.DateTime advertisePlaceAddedDate, global::System.DateTime advertisePlaceEditDate, global::System.Guid advertisePlaceAddedUserId, global::System.Guid advertisePlaceEditUserId)
        {
            SW_AdvertisePlace sW_AdvertisePlace = new SW_AdvertisePlace();
            sW_AdvertisePlace.AdvertisePlaceId = advertisePlaceId;
            sW_AdvertisePlace.AdvertisePlaceAddedDate = advertisePlaceAddedDate;
            sW_AdvertisePlace.AdvertisePlaceEditDate = advertisePlaceEditDate;
            sW_AdvertisePlace.AdvertisePlaceAddedUserId = advertisePlaceAddedUserId;
            sW_AdvertisePlace.AdvertisePlaceEditUserId = advertisePlaceEditUserId;
            return sW_AdvertisePlace;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertisePlaceId
        {
            get
            {
                return _AdvertisePlaceId;
            }
            set
            {
                if (_AdvertisePlaceId != value)
                {
                    OnAdvertisePlaceIdChanging(value);
                    ReportPropertyChanging("AdvertisePlaceId");
                    _AdvertisePlaceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdvertisePlaceId");
                    OnAdvertisePlaceIdChanged();
                }
            }
        }
        private global::System.Int32 _AdvertisePlaceId;
        partial void OnAdvertisePlaceIdChanging(global::System.Int32 value);
        partial void OnAdvertisePlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdvertisePlaceDesc
        {
            get
            {
                return _AdvertisePlaceDesc;
            }
            set
            {
                OnAdvertisePlaceDescChanging(value);
                ReportPropertyChanging("AdvertisePlaceDesc");
                _AdvertisePlaceDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdvertisePlaceDesc");
                OnAdvertisePlaceDescChanged();
            }
        }
        private global::System.String _AdvertisePlaceDesc;
        partial void OnAdvertisePlaceDescChanging(global::System.String value);
        partial void OnAdvertisePlaceDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertisePlaceAddedDate
        {
            get
            {
                return _AdvertisePlaceAddedDate;
            }
            set
            {
                OnAdvertisePlaceAddedDateChanging(value);
                ReportPropertyChanging("AdvertisePlaceAddedDate");
                _AdvertisePlaceAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisePlaceAddedDate");
                OnAdvertisePlaceAddedDateChanged();
            }
        }
        private global::System.DateTime _AdvertisePlaceAddedDate;
        partial void OnAdvertisePlaceAddedDateChanging(global::System.DateTime value);
        partial void OnAdvertisePlaceAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AdvertisePlaceEditDate
        {
            get
            {
                return _AdvertisePlaceEditDate;
            }
            set
            {
                OnAdvertisePlaceEditDateChanging(value);
                ReportPropertyChanging("AdvertisePlaceEditDate");
                _AdvertisePlaceEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisePlaceEditDate");
                OnAdvertisePlaceEditDateChanged();
            }
        }
        private global::System.DateTime _AdvertisePlaceEditDate;
        partial void OnAdvertisePlaceEditDateChanging(global::System.DateTime value);
        partial void OnAdvertisePlaceEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AdvertisePlaceAddedUserId
        {
            get
            {
                return _AdvertisePlaceAddedUserId;
            }
            set
            {
                OnAdvertisePlaceAddedUserIdChanging(value);
                ReportPropertyChanging("AdvertisePlaceAddedUserId");
                _AdvertisePlaceAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisePlaceAddedUserId");
                OnAdvertisePlaceAddedUserIdChanged();
            }
        }
        private global::System.Guid _AdvertisePlaceAddedUserId;
        partial void OnAdvertisePlaceAddedUserIdChanging(global::System.Guid value);
        partial void OnAdvertisePlaceAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AdvertisePlaceEditUserId
        {
            get
            {
                return _AdvertisePlaceEditUserId;
            }
            set
            {
                OnAdvertisePlaceEditUserIdChanging(value);
                ReportPropertyChanging("AdvertisePlaceEditUserId");
                _AdvertisePlaceEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertisePlaceEditUserId");
                OnAdvertisePlaceEditUserIdChanged();
            }
        }
        private global::System.Guid _AdvertisePlaceEditUserId;
        partial void OnAdvertisePlaceEditUserIdChanging(global::System.Guid value);
        partial void OnAdvertisePlaceEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Advertise_SW_AdvertisePlace", "SW_Advertise")]
        public EntityCollection<SW_Advertise> SW_Advertise
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_Advertise>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertisePlace", "SW_Advertise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_Advertise>("Searchwar_netModel.FK_SW_Advertise_SW_AdvertisePlace", "SW_Advertise", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_Banlist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_Banlist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_Banlist object.
        /// </summary>
        /// <param name="banId">Initial value of the BanId property.</param>
        /// <param name="banIpAddress">Initial value of the BanIpAddress property.</param>
        public static SW_Banlist CreateSW_Banlist(global::System.Int32 banId, global::System.String banIpAddress)
        {
            SW_Banlist sW_Banlist = new SW_Banlist();
            sW_Banlist.BanId = banId;
            sW_Banlist.BanIpAddress = banIpAddress;
            return sW_Banlist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BanId
        {
            get
            {
                return _BanId;
            }
            set
            {
                if (_BanId != value)
                {
                    OnBanIdChanging(value);
                    ReportPropertyChanging("BanId");
                    _BanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BanId");
                    OnBanIdChanged();
                }
            }
        }
        private global::System.Int32 _BanId;
        partial void OnBanIdChanging(global::System.Int32 value);
        partial void OnBanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BanIpAddress
        {
            get
            {
                return _BanIpAddress;
            }
            set
            {
                OnBanIpAddressChanging(value);
                ReportPropertyChanging("BanIpAddress");
                _BanIpAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BanIpAddress");
                OnBanIpAddressChanged();
            }
        }
        private global::System.String _BanIpAddress;
        partial void OnBanIpAddressChanging(global::System.String value);
        partial void OnBanIpAddressChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_Blog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_Blog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_Blog object.
        /// </summary>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="blogAddedByUserId">Initial value of the BlogAddedByUserId property.</param>
        /// <param name="blogEditByUserId">Initial value of the BlogEditByUserId property.</param>
        /// <param name="blogAddedDate">Initial value of the BlogAddedDate property.</param>
        /// <param name="blogEditDate">Initial value of the BlogEditDate property.</param>
        public static SW_Blog CreateSW_Blog(global::System.Int32 blogId, global::System.Guid blogAddedByUserId, global::System.Guid blogEditByUserId, global::System.DateTime blogAddedDate, global::System.DateTime blogEditDate)
        {
            SW_Blog sW_Blog = new SW_Blog();
            sW_Blog.BlogId = blogId;
            sW_Blog.BlogAddedByUserId = blogAddedByUserId;
            sW_Blog.BlogEditByUserId = blogEditByUserId;
            sW_Blog.BlogAddedDate = blogAddedDate;
            sW_Blog.BlogEditDate = blogEditDate;
            return sW_Blog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                if (_BlogId != value)
                {
                    OnBlogIdChanging(value);
                    ReportPropertyChanging("BlogId");
                    _BlogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogId");
                    OnBlogIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlogAddedByUserId
        {
            get
            {
                return _BlogAddedByUserId;
            }
            set
            {
                OnBlogAddedByUserIdChanging(value);
                ReportPropertyChanging("BlogAddedByUserId");
                _BlogAddedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogAddedByUserId");
                OnBlogAddedByUserIdChanged();
            }
        }
        private global::System.Guid _BlogAddedByUserId;
        partial void OnBlogAddedByUserIdChanging(global::System.Guid value);
        partial void OnBlogAddedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlogEditByUserId
        {
            get
            {
                return _BlogEditByUserId;
            }
            set
            {
                OnBlogEditByUserIdChanging(value);
                ReportPropertyChanging("BlogEditByUserId");
                _BlogEditByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogEditByUserId");
                OnBlogEditByUserIdChanged();
            }
        }
        private global::System.Guid _BlogEditByUserId;
        partial void OnBlogEditByUserIdChanging(global::System.Guid value);
        partial void OnBlogEditByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BlogAddedDate
        {
            get
            {
                return _BlogAddedDate;
            }
            set
            {
                OnBlogAddedDateChanging(value);
                ReportPropertyChanging("BlogAddedDate");
                _BlogAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogAddedDate");
                OnBlogAddedDateChanged();
            }
        }
        private global::System.DateTime _BlogAddedDate;
        partial void OnBlogAddedDateChanging(global::System.DateTime value);
        partial void OnBlogAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BlogEditDate
        {
            get
            {
                return _BlogEditDate;
            }
            set
            {
                OnBlogEditDateChanging(value);
                ReportPropertyChanging("BlogEditDate");
                _BlogEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogEditDate");
                OnBlogEditDateChanged();
            }
        }
        private global::System.DateTime _BlogEditDate;
        partial void OnBlogEditDateChanging(global::System.DateTime value);
        partial void OnBlogEditDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Blog_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Blog_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Blog_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_BlogData_SW_Blog", "SW_BlogData")]
        public EntityCollection<SW_BlogData> SW_BlogData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_BlogData>("Searchwar_netModel.FK_SW_BlogData_SW_Blog", "SW_BlogData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_BlogData>("Searchwar_netModel.FK_SW_BlogData_SW_Blog", "SW_BlogData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_BlogData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_BlogData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_BlogData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="blogId">Initial value of the BlogId property.</param>
        /// <param name="blogTitle">Initial value of the BlogTitle property.</param>
        /// <param name="blogText">Initial value of the BlogText property.</param>
        public static SW_BlogData CreateSW_BlogData(global::System.Int32 langId, global::System.Int32 blogId, global::System.String blogTitle, global::System.String blogText)
        {
            SW_BlogData sW_BlogData = new SW_BlogData();
            sW_BlogData.LangId = langId;
            sW_BlogData.BlogId = blogId;
            sW_BlogData.BlogTitle = blogTitle;
            sW_BlogData.BlogText = blogText;
            return sW_BlogData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                if (_BlogId != value)
                {
                    OnBlogIdChanging(value);
                    ReportPropertyChanging("BlogId");
                    _BlogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlogId");
                    OnBlogIdChanged();
                }
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlogTitle
        {
            get
            {
                return _BlogTitle;
            }
            set
            {
                OnBlogTitleChanging(value);
                ReportPropertyChanging("BlogTitle");
                _BlogTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BlogTitle");
                OnBlogTitleChanged();
            }
        }
        private global::System.String _BlogTitle;
        partial void OnBlogTitleChanging(global::System.String value);
        partial void OnBlogTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlogText
        {
            get
            {
                return _BlogText;
            }
            set
            {
                OnBlogTextChanging(value);
                ReportPropertyChanging("BlogText");
                _BlogText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BlogText");
                OnBlogTextChanged();
            }
        }
        private global::System.String _BlogText;
        partial void OnBlogTextChanging(global::System.String value);
        partial void OnBlogTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_BlogData_SW_Blog", "SW_Blog")]
        public SW_Blog SW_Blog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Blog>("Searchwar_netModel.FK_SW_BlogData_SW_Blog", "SW_Blog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Blog>("Searchwar_netModel.FK_SW_BlogData_SW_Blog", "SW_Blog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Blog> SW_BlogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Blog>("Searchwar_netModel.FK_SW_BlogData_SW_Blog", "SW_Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Blog>("Searchwar_netModel.FK_SW_BlogData_SW_Blog", "SW_Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_BlogData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_BlogData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_BlogData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_BlogData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_BlogData_SW_Lang", "SW_Lang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_chat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_chat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_chat object.
        /// </summary>
        /// <param name="chatId">Initial value of the ChatId property.</param>
        /// <param name="chatDateAdded">Initial value of the ChatDateAdded property.</param>
        /// <param name="chatDateEdit">Initial value of the ChatDateEdit property.</param>
        /// <param name="chatIsClosed">Initial value of the ChatIsClosed property.</param>
        public static SW_chat CreateSW_chat(global::System.Guid chatId, global::System.DateTime chatDateAdded, global::System.DateTime chatDateEdit, global::System.Boolean chatIsClosed)
        {
            SW_chat sW_chat = new SW_chat();
            sW_chat.ChatId = chatId;
            sW_chat.ChatDateAdded = chatDateAdded;
            sW_chat.ChatDateEdit = chatDateEdit;
            sW_chat.ChatIsClosed = chatIsClosed;
            return sW_chat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatId
        {
            get
            {
                return _ChatId;
            }
            set
            {
                if (_ChatId != value)
                {
                    OnChatIdChanging(value);
                    ReportPropertyChanging("ChatId");
                    _ChatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChatId");
                    OnChatIdChanged();
                }
            }
        }
        private global::System.Guid _ChatId;
        partial void OnChatIdChanging(global::System.Guid value);
        partial void OnChatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChatDateAdded
        {
            get
            {
                return _ChatDateAdded;
            }
            set
            {
                OnChatDateAddedChanging(value);
                ReportPropertyChanging("ChatDateAdded");
                _ChatDateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatDateAdded");
                OnChatDateAddedChanged();
            }
        }
        private global::System.DateTime _ChatDateAdded;
        partial void OnChatDateAddedChanging(global::System.DateTime value);
        partial void OnChatDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChatDateEdit
        {
            get
            {
                return _ChatDateEdit;
            }
            set
            {
                OnChatDateEditChanging(value);
                ReportPropertyChanging("ChatDateEdit");
                _ChatDateEdit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatDateEdit");
                OnChatDateEditChanged();
            }
        }
        private global::System.DateTime _ChatDateEdit;
        partial void OnChatDateEditChanging(global::System.DateTime value);
        partial void OnChatDateEditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ChatIsClosed
        {
            get
            {
                return _ChatIsClosed;
            }
            set
            {
                OnChatIsClosedChanging(value);
                ReportPropertyChanging("ChatIsClosed");
                _ChatIsClosed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatIsClosed");
                OnChatIsClosedChanged();
            }
        }
        private global::System.Boolean _ChatIsClosed;
        partial void OnChatIsClosedChanging(global::System.Boolean value);
        partial void OnChatIsClosedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatBlinking_SW_chat", "SW_ChatBlinking")]
        public EntityCollection<SW_ChatBlinking> SW_ChatBlinking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_ChatBlinking>("Searchwar_netModel.FK_SW_ChatBlinking_SW_chat", "SW_ChatBlinking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_ChatBlinking>("Searchwar_netModel.FK_SW_ChatBlinking_SW_chat", "SW_ChatBlinking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatMessages_SW_chat", "SW_ChatMessages")]
        public EntityCollection<SW_ChatMessage> SW_ChatMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_ChatMessage>("Searchwar_netModel.FK_SW_ChatMessages_SW_chat", "SW_ChatMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_ChatMessage>("Searchwar_netModel.FK_SW_ChatMessages_SW_chat", "SW_ChatMessages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_ChatBlinking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_ChatBlinking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_ChatBlinking object.
        /// </summary>
        /// <param name="chatBlinkingId">Initial value of the ChatBlinkingId property.</param>
        /// <param name="chatStartBlinking">Initial value of the ChatStartBlinking property.</param>
        /// <param name="chatPersonId">Initial value of the ChatPersonId property.</param>
        /// <param name="chatId">Initial value of the ChatId property.</param>
        public static SW_ChatBlinking CreateSW_ChatBlinking(global::System.Guid chatBlinkingId, global::System.Boolean chatStartBlinking, global::System.Guid chatPersonId, global::System.Guid chatId)
        {
            SW_ChatBlinking sW_ChatBlinking = new SW_ChatBlinking();
            sW_ChatBlinking.ChatBlinkingId = chatBlinkingId;
            sW_ChatBlinking.ChatStartBlinking = chatStartBlinking;
            sW_ChatBlinking.ChatPersonId = chatPersonId;
            sW_ChatBlinking.ChatId = chatId;
            return sW_ChatBlinking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatBlinkingId
        {
            get
            {
                return _ChatBlinkingId;
            }
            set
            {
                if (_ChatBlinkingId != value)
                {
                    OnChatBlinkingIdChanging(value);
                    ReportPropertyChanging("ChatBlinkingId");
                    _ChatBlinkingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChatBlinkingId");
                    OnChatBlinkingIdChanged();
                }
            }
        }
        private global::System.Guid _ChatBlinkingId;
        partial void OnChatBlinkingIdChanging(global::System.Guid value);
        partial void OnChatBlinkingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ChatStartBlinking
        {
            get
            {
                return _ChatStartBlinking;
            }
            set
            {
                OnChatStartBlinkingChanging(value);
                ReportPropertyChanging("ChatStartBlinking");
                _ChatStartBlinking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatStartBlinking");
                OnChatStartBlinkingChanged();
            }
        }
        private global::System.Boolean _ChatStartBlinking;
        partial void OnChatStartBlinkingChanging(global::System.Boolean value);
        partial void OnChatStartBlinkingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatPersonId
        {
            get
            {
                return _ChatPersonId;
            }
            set
            {
                OnChatPersonIdChanging(value);
                ReportPropertyChanging("ChatPersonId");
                _ChatPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatPersonId");
                OnChatPersonIdChanged();
            }
        }
        private global::System.Guid _ChatPersonId;
        partial void OnChatPersonIdChanging(global::System.Guid value);
        partial void OnChatPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatId
        {
            get
            {
                return _ChatId;
            }
            set
            {
                OnChatIdChanging(value);
                ReportPropertyChanging("ChatId");
                _ChatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatId");
                OnChatIdChanged();
            }
        }
        private global::System.Guid _ChatId;
        partial void OnChatIdChanging(global::System.Guid value);
        partial void OnChatIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatBlinking_SW_chat", "SW_chat")]
        public SW_chat SW_chat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatBlinking_SW_chat", "SW_chat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatBlinking_SW_chat", "SW_chat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_chat> SW_chatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatBlinking_SW_chat", "SW_chat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatBlinking_SW_chat", "SW_chat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatPersons")]
        public SW_ChatPerson SW_ChatPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatPersons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatPersons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_ChatPerson> SW_ChatPersonsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatPersons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatPersons", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_ChatMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_ChatMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_ChatMessage object.
        /// </summary>
        /// <param name="chatMsgId">Initial value of the ChatMsgId property.</param>
        /// <param name="chatMsgText">Initial value of the ChatMsgText property.</param>
        /// <param name="chatMsgDateAdded">Initial value of the ChatMsgDateAdded property.</param>
        /// <param name="chatPersonId">Initial value of the ChatPersonId property.</param>
        /// <param name="chatId">Initial value of the ChatId property.</param>
        public static SW_ChatMessage CreateSW_ChatMessage(global::System.Guid chatMsgId, global::System.String chatMsgText, global::System.DateTime chatMsgDateAdded, global::System.Guid chatPersonId, global::System.Guid chatId)
        {
            SW_ChatMessage sW_ChatMessage = new SW_ChatMessage();
            sW_ChatMessage.ChatMsgId = chatMsgId;
            sW_ChatMessage.ChatMsgText = chatMsgText;
            sW_ChatMessage.ChatMsgDateAdded = chatMsgDateAdded;
            sW_ChatMessage.ChatPersonId = chatPersonId;
            sW_ChatMessage.ChatId = chatId;
            return sW_ChatMessage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatMsgId
        {
            get
            {
                return _ChatMsgId;
            }
            set
            {
                if (_ChatMsgId != value)
                {
                    OnChatMsgIdChanging(value);
                    ReportPropertyChanging("ChatMsgId");
                    _ChatMsgId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChatMsgId");
                    OnChatMsgIdChanged();
                }
            }
        }
        private global::System.Guid _ChatMsgId;
        partial void OnChatMsgIdChanging(global::System.Guid value);
        partial void OnChatMsgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChatMsgText
        {
            get
            {
                return _ChatMsgText;
            }
            set
            {
                OnChatMsgTextChanging(value);
                ReportPropertyChanging("ChatMsgText");
                _ChatMsgText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChatMsgText");
                OnChatMsgTextChanged();
            }
        }
        private global::System.String _ChatMsgText;
        partial void OnChatMsgTextChanging(global::System.String value);
        partial void OnChatMsgTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChatMsgDateAdded
        {
            get
            {
                return _ChatMsgDateAdded;
            }
            set
            {
                OnChatMsgDateAddedChanging(value);
                ReportPropertyChanging("ChatMsgDateAdded");
                _ChatMsgDateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatMsgDateAdded");
                OnChatMsgDateAddedChanged();
            }
        }
        private global::System.DateTime _ChatMsgDateAdded;
        partial void OnChatMsgDateAddedChanging(global::System.DateTime value);
        partial void OnChatMsgDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatPersonId
        {
            get
            {
                return _ChatPersonId;
            }
            set
            {
                OnChatPersonIdChanging(value);
                ReportPropertyChanging("ChatPersonId");
                _ChatPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatPersonId");
                OnChatPersonIdChanged();
            }
        }
        private global::System.Guid _ChatPersonId;
        partial void OnChatPersonIdChanging(global::System.Guid value);
        partial void OnChatPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatId
        {
            get
            {
                return _ChatId;
            }
            set
            {
                OnChatIdChanging(value);
                ReportPropertyChanging("ChatId");
                _ChatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatId");
                OnChatIdChanged();
            }
        }
        private global::System.Guid _ChatId;
        partial void OnChatIdChanging(global::System.Guid value);
        partial void OnChatIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatMessages_SW_chat", "SW_chat")]
        public SW_chat SW_chat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatMessages_SW_chat", "SW_chat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatMessages_SW_chat", "SW_chat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_chat> SW_chatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatMessages_SW_chat", "SW_chat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_chat>("Searchwar_netModel.FK_SW_ChatMessages_SW_chat", "SW_chat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatPersons")]
        public SW_ChatPerson SW_ChatPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatPersons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatPersons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_ChatPerson> SW_ChatPersonsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatPersons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_ChatPerson>("Searchwar_netModel.FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatPersons", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_ChatPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_ChatPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_ChatPerson object.
        /// </summary>
        /// <param name="chatPersonId">Initial value of the ChatPersonId property.</param>
        /// <param name="chatPersonName">Initial value of the ChatPersonName property.</param>
        /// <param name="chatPersonDateAdded">Initial value of the ChatPersonDateAdded property.</param>
        /// <param name="chatPersonDateEdit">Initial value of the ChatPersonDateEdit property.</param>
        public static SW_ChatPerson CreateSW_ChatPerson(global::System.Guid chatPersonId, global::System.String chatPersonName, global::System.DateTime chatPersonDateAdded, global::System.DateTime chatPersonDateEdit)
        {
            SW_ChatPerson sW_ChatPerson = new SW_ChatPerson();
            sW_ChatPerson.ChatPersonId = chatPersonId;
            sW_ChatPerson.ChatPersonName = chatPersonName;
            sW_ChatPerson.ChatPersonDateAdded = chatPersonDateAdded;
            sW_ChatPerson.ChatPersonDateEdit = chatPersonDateEdit;
            return sW_ChatPerson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatPersonId
        {
            get
            {
                return _ChatPersonId;
            }
            set
            {
                if (_ChatPersonId != value)
                {
                    OnChatPersonIdChanging(value);
                    ReportPropertyChanging("ChatPersonId");
                    _ChatPersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChatPersonId");
                    OnChatPersonIdChanged();
                }
            }
        }
        private global::System.Guid _ChatPersonId;
        partial void OnChatPersonIdChanging(global::System.Guid value);
        partial void OnChatPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChatPersonName
        {
            get
            {
                return _ChatPersonName;
            }
            set
            {
                OnChatPersonNameChanging(value);
                ReportPropertyChanging("ChatPersonName");
                _ChatPersonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChatPersonName");
                OnChatPersonNameChanged();
            }
        }
        private global::System.String _ChatPersonName;
        partial void OnChatPersonNameChanging(global::System.String value);
        partial void OnChatPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChatPersonDateAdded
        {
            get
            {
                return _ChatPersonDateAdded;
            }
            set
            {
                OnChatPersonDateAddedChanging(value);
                ReportPropertyChanging("ChatPersonDateAdded");
                _ChatPersonDateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatPersonDateAdded");
                OnChatPersonDateAddedChanged();
            }
        }
        private global::System.DateTime _ChatPersonDateAdded;
        partial void OnChatPersonDateAddedChanging(global::System.DateTime value);
        partial void OnChatPersonDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChatPersonDateEdit
        {
            get
            {
                return _ChatPersonDateEdit;
            }
            set
            {
                OnChatPersonDateEditChanging(value);
                ReportPropertyChanging("ChatPersonDateEdit");
                _ChatPersonDateEdit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatPersonDateEdit");
                OnChatPersonDateEditChanged();
            }
        }
        private global::System.DateTime _ChatPersonDateEdit;
        partial void OnChatPersonDateEditChanging(global::System.DateTime value);
        partial void OnChatPersonDateEditChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatBlinking")]
        public EntityCollection<SW_ChatBlinking> SW_ChatBlinking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_ChatBlinking>("Searchwar_netModel.FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatBlinking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_ChatBlinking>("Searchwar_netModel.FK_SW_ChatBlinking_SW_ChatPersons", "SW_ChatBlinking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatMessages")]
        public EntityCollection<SW_ChatMessage> SW_ChatMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_ChatMessage>("Searchwar_netModel.FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_ChatMessage>("Searchwar_netModel.FK_SW_ChatMessages_SW_ChatPersons", "SW_ChatMessages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_Faq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_Faq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_Faq object.
        /// </summary>
        /// <param name="fAQId">Initial value of the FAQId property.</param>
        /// <param name="fAQAddedByUserId">Initial value of the FAQAddedByUserId property.</param>
        /// <param name="fAQEditByUserId">Initial value of the FAQEditByUserId property.</param>
        /// <param name="fAQAddedDate">Initial value of the FAQAddedDate property.</param>
        /// <param name="fAQEditDate">Initial value of the FAQEditDate property.</param>
        public static SW_Faq CreateSW_Faq(global::System.Int32 fAQId, global::System.Guid fAQAddedByUserId, global::System.Guid fAQEditByUserId, global::System.DateTime fAQAddedDate, global::System.DateTime fAQEditDate)
        {
            SW_Faq sW_Faq = new SW_Faq();
            sW_Faq.FAQId = fAQId;
            sW_Faq.FAQAddedByUserId = fAQAddedByUserId;
            sW_Faq.FAQEditByUserId = fAQEditByUserId;
            sW_Faq.FAQAddedDate = fAQAddedDate;
            sW_Faq.FAQEditDate = fAQEditDate;
            return sW_Faq;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FAQId
        {
            get
            {
                return _FAQId;
            }
            set
            {
                if (_FAQId != value)
                {
                    OnFAQIdChanging(value);
                    ReportPropertyChanging("FAQId");
                    _FAQId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FAQId");
                    OnFAQIdChanged();
                }
            }
        }
        private global::System.Int32 _FAQId;
        partial void OnFAQIdChanging(global::System.Int32 value);
        partial void OnFAQIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FAQAddedByUserId
        {
            get
            {
                return _FAQAddedByUserId;
            }
            set
            {
                OnFAQAddedByUserIdChanging(value);
                ReportPropertyChanging("FAQAddedByUserId");
                _FAQAddedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FAQAddedByUserId");
                OnFAQAddedByUserIdChanged();
            }
        }
        private global::System.Guid _FAQAddedByUserId;
        partial void OnFAQAddedByUserIdChanging(global::System.Guid value);
        partial void OnFAQAddedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FAQEditByUserId
        {
            get
            {
                return _FAQEditByUserId;
            }
            set
            {
                OnFAQEditByUserIdChanging(value);
                ReportPropertyChanging("FAQEditByUserId");
                _FAQEditByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FAQEditByUserId");
                OnFAQEditByUserIdChanged();
            }
        }
        private global::System.Guid _FAQEditByUserId;
        partial void OnFAQEditByUserIdChanging(global::System.Guid value);
        partial void OnFAQEditByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FAQAddedDate
        {
            get
            {
                return _FAQAddedDate;
            }
            set
            {
                OnFAQAddedDateChanging(value);
                ReportPropertyChanging("FAQAddedDate");
                _FAQAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FAQAddedDate");
                OnFAQAddedDateChanged();
            }
        }
        private global::System.DateTime _FAQAddedDate;
        partial void OnFAQAddedDateChanging(global::System.DateTime value);
        partial void OnFAQAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FAQEditDate
        {
            get
            {
                return _FAQEditDate;
            }
            set
            {
                OnFAQEditDateChanging(value);
                ReportPropertyChanging("FAQEditDate");
                _FAQEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FAQEditDate");
                OnFAQEditDateChanged();
            }
        }
        private global::System.DateTime _FAQEditDate;
        partial void OnFAQEditDateChanging(global::System.DateTime value);
        partial void OnFAQEditDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Faq_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_Faq_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_Faq_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_FaqData_SW_Faq", "SW_FaqData")]
        public EntityCollection<SW_FaqData> SW_FaqData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_FaqData>("Searchwar_netModel.FK_SW_FaqData_SW_Faq", "SW_FaqData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_FaqData>("Searchwar_netModel.FK_SW_FaqData_SW_Faq", "SW_FaqData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_FaqData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_FaqData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_FaqData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="fAQId">Initial value of the FAQId property.</param>
        /// <param name="fAQQuestion">Initial value of the FAQQuestion property.</param>
        /// <param name="fAQAnswer">Initial value of the FAQAnswer property.</param>
        public static SW_FaqData CreateSW_FaqData(global::System.Int32 langId, global::System.Int32 fAQId, global::System.String fAQQuestion, global::System.String fAQAnswer)
        {
            SW_FaqData sW_FaqData = new SW_FaqData();
            sW_FaqData.LangId = langId;
            sW_FaqData.FAQId = fAQId;
            sW_FaqData.FAQQuestion = fAQQuestion;
            sW_FaqData.FAQAnswer = fAQAnswer;
            return sW_FaqData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FAQId
        {
            get
            {
                return _FAQId;
            }
            set
            {
                if (_FAQId != value)
                {
                    OnFAQIdChanging(value);
                    ReportPropertyChanging("FAQId");
                    _FAQId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FAQId");
                    OnFAQIdChanged();
                }
            }
        }
        private global::System.Int32 _FAQId;
        partial void OnFAQIdChanging(global::System.Int32 value);
        partial void OnFAQIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FAQQuestion
        {
            get
            {
                return _FAQQuestion;
            }
            set
            {
                OnFAQQuestionChanging(value);
                ReportPropertyChanging("FAQQuestion");
                _FAQQuestion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FAQQuestion");
                OnFAQQuestionChanged();
            }
        }
        private global::System.String _FAQQuestion;
        partial void OnFAQQuestionChanging(global::System.String value);
        partial void OnFAQQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FAQAnswer
        {
            get
            {
                return _FAQAnswer;
            }
            set
            {
                OnFAQAnswerChanging(value);
                ReportPropertyChanging("FAQAnswer");
                _FAQAnswer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FAQAnswer");
                OnFAQAnswerChanged();
            }
        }
        private global::System.String _FAQAnswer;
        partial void OnFAQAnswerChanging(global::System.String value);
        partial void OnFAQAnswerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_FaqData_SW_Faq", "SW_Faq")]
        public SW_Faq SW_Faq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Faq>("Searchwar_netModel.FK_SW_FaqData_SW_Faq", "SW_Faq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Faq>("Searchwar_netModel.FK_SW_FaqData_SW_Faq", "SW_Faq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Faq> SW_FaqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Faq>("Searchwar_netModel.FK_SW_FaqData_SW_Faq", "SW_Faq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Faq>("Searchwar_netModel.FK_SW_FaqData_SW_Faq", "SW_Faq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_FaqData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_FaqData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_FaqData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_FaqData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_FaqData_SW_Lang", "SW_Lang", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_Lang")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_Lang : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_Lang object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="langName">Initial value of the LangName property.</param>
        /// <param name="langShortname">Initial value of the LangShortname property.</param>
        public static SW_Lang CreateSW_Lang(global::System.Int32 langId, global::System.String langName, global::System.String langShortname)
        {
            SW_Lang sW_Lang = new SW_Lang();
            sW_Lang.LangId = langId;
            sW_Lang.LangName = langName;
            sW_Lang.LangShortname = langShortname;
            return sW_Lang;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LangName
        {
            get
            {
                return _LangName;
            }
            set
            {
                OnLangNameChanging(value);
                ReportPropertyChanging("LangName");
                _LangName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LangName");
                OnLangNameChanged();
            }
        }
        private global::System.String _LangName;
        partial void OnLangNameChanging(global::System.String value);
        partial void OnLangNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LangShortname
        {
            get
            {
                return _LangShortname;
            }
            set
            {
                OnLangShortnameChanging(value);
                ReportPropertyChanging("LangShortname");
                _LangShortname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LangShortname");
                OnLangShortnameChanged();
            }
        }
        private global::System.String _LangShortname;
        partial void OnLangShortnameChanging(global::System.String value);
        partial void OnLangShortnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_BlogData_SW_Lang", "SW_BlogData")]
        public EntityCollection<SW_BlogData> SW_BlogData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_BlogData>("Searchwar_netModel.FK_SW_BlogData_SW_Lang", "SW_BlogData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_BlogData>("Searchwar_netModel.FK_SW_BlogData_SW_Lang", "SW_BlogData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_FaqData_SW_Lang", "SW_FaqData")]
        public EntityCollection<SW_FaqData> SW_FaqData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_FaqData>("Searchwar_netModel.FK_SW_FaqData_SW_Lang", "SW_FaqData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_FaqData>("Searchwar_netModel.FK_SW_FaqData_SW_Lang", "SW_FaqData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchCountryData_SW_Lang", "SW_SearchWarCountryData")]
        public EntityCollection<SW_SearchWarCountryData> SW_SearchWarCountryData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarCountryData>("Searchwar_netModel.FK_SW_SearchCountryData_SW_Lang", "SW_SearchWarCountryData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarCountryData>("Searchwar_netModel.FK_SW_SearchCountryData_SW_Lang", "SW_SearchWarCountryData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinentData_SW_Lang", "SW_SearchWarContinentData")]
        public EntityCollection<SW_SearchWarContinentData> SW_SearchWarContinentData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarContinentData>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_Lang", "SW_SearchWarContinentData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarContinentData>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_Lang", "SW_SearchWarContinentData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkillData_SW_Lang", "SW_SearchWarSkillData")]
        public EntityCollection<SW_SearchWarSkillData> SW_SearchWarSkillData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarSkillData>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_Lang", "SW_SearchWarSkillData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarSkillData>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_Lang", "SW_SearchWarSkillData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapData_SW_Lang", "SW_SiteMapNodeData")]
        public EntityCollection<SW_SiteMapNodeData> SW_SiteMapNodeData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeData>("Searchwar_netModel.FK_SW_SiteMapData_SW_Lang", "SW_SiteMapNodeData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeData>("Searchwar_netModel.FK_SW_SiteMapData_SW_Lang", "SW_SiteMapNodeData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_SiteMapNodeMetaTagsData")]
        public EntityCollection<SW_SiteMapNodeMetaTagsData> SW_SiteMapNodeMetaTagsData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeMetaTagsData>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_SiteMapNodeMetaTagsData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeMetaTagsData>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_SiteMapNodeMetaTagsData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWar object.
        /// </summary>
        /// <param name="searchWarId">Initial value of the SearchWarId property.</param>
        /// <param name="searchWarSearchGameId">Initial value of the SearchWarSearchGameId property.</param>
        /// <param name="searchWarSearchXvs">Initial value of the SearchWarSearchXvs property.</param>
        /// <param name="searchWarSearchvsX">Initial value of the SearchWarSearchvsX property.</param>
        /// <param name="searchWarSearchMatchStart">Initial value of the SearchWarSearchMatchStart property.</param>
        /// <param name="searchWarAddedDate">Initial value of the SearchWarAddedDate property.</param>
        /// <param name="searchWarEditDate">Initial value of the SearchWarEditDate property.</param>
        /// <param name="searchWarUserIpAddress">Initial value of the SearchWarUserIpAddress property.</param>
        /// <param name="searchWarUserID">Initial value of the SearchWarUserID property.</param>
        /// <param name="searchWarIsRunning">Initial value of the SearchWarIsRunning property.</param>
        public static SW_SearchWar CreateSW_SearchWar(global::System.Guid searchWarId, global::System.Int32 searchWarSearchGameId, global::System.Int32 searchWarSearchXvs, global::System.Int32 searchWarSearchvsX, global::System.DateTime searchWarSearchMatchStart, global::System.DateTime searchWarAddedDate, global::System.DateTime searchWarEditDate, global::System.String searchWarUserIpAddress, global::System.Guid searchWarUserID, global::System.Boolean searchWarIsRunning)
        {
            SW_SearchWar sW_SearchWar = new SW_SearchWar();
            sW_SearchWar.SearchWarId = searchWarId;
            sW_SearchWar.SearchWarSearchGameId = searchWarSearchGameId;
            sW_SearchWar.SearchWarSearchXvs = searchWarSearchXvs;
            sW_SearchWar.SearchWarSearchvsX = searchWarSearchvsX;
            sW_SearchWar.SearchWarSearchMatchStart = searchWarSearchMatchStart;
            sW_SearchWar.SearchWarAddedDate = searchWarAddedDate;
            sW_SearchWar.SearchWarEditDate = searchWarEditDate;
            sW_SearchWar.SearchWarUserIpAddress = searchWarUserIpAddress;
            sW_SearchWar.SearchWarUserID = searchWarUserID;
            sW_SearchWar.SearchWarIsRunning = searchWarIsRunning;
            return sW_SearchWar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarId
        {
            get
            {
                return _SearchWarId;
            }
            set
            {
                if (_SearchWarId != value)
                {
                    OnSearchWarIdChanging(value);
                    ReportPropertyChanging("SearchWarId");
                    _SearchWarId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarId");
                    OnSearchWarIdChanged();
                }
            }
        }
        private global::System.Guid _SearchWarId;
        partial void OnSearchWarIdChanging(global::System.Guid value);
        partial void OnSearchWarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchWarClanName
        {
            get
            {
                return _SearchWarClanName;
            }
            set
            {
                OnSearchWarClanNameChanging(value);
                ReportPropertyChanging("SearchWarClanName");
                _SearchWarClanName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchWarClanName");
                OnSearchWarClanNameChanged();
            }
        }
        private global::System.String _SearchWarClanName;
        partial void OnSearchWarClanNameChanging(global::System.String value);
        partial void OnSearchWarClanNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarClanSkillId
        {
            get
            {
                return _SearchWarClanSkillId;
            }
            set
            {
                OnSearchWarClanSkillIdChanging(value);
                ReportPropertyChanging("SearchWarClanSkillId");
                _SearchWarClanSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarClanSkillId");
                OnSearchWarClanSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarClanSkillId;
        partial void OnSearchWarClanSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarClanSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarClanContinentId
        {
            get
            {
                return _SearchWarClanContinentId;
            }
            set
            {
                OnSearchWarClanContinentIdChanging(value);
                ReportPropertyChanging("SearchWarClanContinentId");
                _SearchWarClanContinentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarClanContinentId");
                OnSearchWarClanContinentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarClanContinentId;
        partial void OnSearchWarClanContinentIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarClanContinentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarClanCountryId
        {
            get
            {
                return _SearchWarClanCountryId;
            }
            set
            {
                OnSearchWarClanCountryIdChanging(value);
                ReportPropertyChanging("SearchWarClanCountryId");
                _SearchWarClanCountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarClanCountryId");
                OnSearchWarClanCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarClanCountryId;
        partial void OnSearchWarClanCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarClanCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarSearchGameId
        {
            get
            {
                return _SearchWarSearchGameId;
            }
            set
            {
                OnSearchWarSearchGameIdChanging(value);
                ReportPropertyChanging("SearchWarSearchGameId");
                _SearchWarSearchGameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchGameId");
                OnSearchWarSearchGameIdChanged();
            }
        }
        private global::System.Int32 _SearchWarSearchGameId;
        partial void OnSearchWarSearchGameIdChanging(global::System.Int32 value);
        partial void OnSearchWarSearchGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarSearchGameTypeId
        {
            get
            {
                return _SearchWarSearchGameTypeId;
            }
            set
            {
                OnSearchWarSearchGameTypeIdChanging(value);
                ReportPropertyChanging("SearchWarSearchGameTypeId");
                _SearchWarSearchGameTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchGameTypeId");
                OnSearchWarSearchGameTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarSearchGameTypeId;
        partial void OnSearchWarSearchGameTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarSearchGameTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarSearchSkillId
        {
            get
            {
                return _SearchWarSearchSkillId;
            }
            set
            {
                OnSearchWarSearchSkillIdChanging(value);
                ReportPropertyChanging("SearchWarSearchSkillId");
                _SearchWarSearchSkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchSkillId");
                OnSearchWarSearchSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarSearchSkillId;
        partial void OnSearchWarSearchSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarSearchSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarSearchContinentId
        {
            get
            {
                return _SearchWarSearchContinentId;
            }
            set
            {
                OnSearchWarSearchContinentIdChanging(value);
                ReportPropertyChanging("SearchWarSearchContinentId");
                _SearchWarSearchContinentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchContinentId");
                OnSearchWarSearchContinentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarSearchContinentId;
        partial void OnSearchWarSearchContinentIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarSearchContinentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SearchWarSearchCountryId
        {
            get
            {
                return _SearchWarSearchCountryId;
            }
            set
            {
                OnSearchWarSearchCountryIdChanging(value);
                ReportPropertyChanging("SearchWarSearchCountryId");
                _SearchWarSearchCountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchCountryId");
                OnSearchWarSearchCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SearchWarSearchCountryId;
        partial void OnSearchWarSearchCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSearchWarSearchCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarSearchXvs
        {
            get
            {
                return _SearchWarSearchXvs;
            }
            set
            {
                OnSearchWarSearchXvsChanging(value);
                ReportPropertyChanging("SearchWarSearchXvs");
                _SearchWarSearchXvs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchXvs");
                OnSearchWarSearchXvsChanged();
            }
        }
        private global::System.Int32 _SearchWarSearchXvs;
        partial void OnSearchWarSearchXvsChanging(global::System.Int32 value);
        partial void OnSearchWarSearchXvsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarSearchvsX
        {
            get
            {
                return _SearchWarSearchvsX;
            }
            set
            {
                OnSearchWarSearchvsXChanging(value);
                ReportPropertyChanging("SearchWarSearchvsX");
                _SearchWarSearchvsX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchvsX");
                OnSearchWarSearchvsXChanged();
            }
        }
        private global::System.Int32 _SearchWarSearchvsX;
        partial void OnSearchWarSearchvsXChanging(global::System.Int32 value);
        partial void OnSearchWarSearchvsXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchWarSearchMap
        {
            get
            {
                return _SearchWarSearchMap;
            }
            set
            {
                OnSearchWarSearchMapChanging(value);
                ReportPropertyChanging("SearchWarSearchMap");
                _SearchWarSearchMap = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchWarSearchMap");
                OnSearchWarSearchMapChanged();
            }
        }
        private global::System.String _SearchWarSearchMap;
        partial void OnSearchWarSearchMapChanging(global::System.String value);
        partial void OnSearchWarSearchMapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarSearchMatchStart
        {
            get
            {
                return _SearchWarSearchMatchStart;
            }
            set
            {
                OnSearchWarSearchMatchStartChanging(value);
                ReportPropertyChanging("SearchWarSearchMatchStart");
                _SearchWarSearchMatchStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSearchMatchStart");
                OnSearchWarSearchMatchStartChanged();
            }
        }
        private global::System.DateTime _SearchWarSearchMatchStart;
        partial void OnSearchWarSearchMatchStartChanging(global::System.DateTime value);
        partial void OnSearchWarSearchMatchStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchWarComment
        {
            get
            {
                return _SearchWarComment;
            }
            set
            {
                OnSearchWarCommentChanging(value);
                ReportPropertyChanging("SearchWarComment");
                _SearchWarComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchWarComment");
                OnSearchWarCommentChanged();
            }
        }
        private global::System.String _SearchWarComment;
        partial void OnSearchWarCommentChanging(global::System.String value);
        partial void OnSearchWarCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarAddedDate
        {
            get
            {
                return _SearchWarAddedDate;
            }
            set
            {
                OnSearchWarAddedDateChanging(value);
                ReportPropertyChanging("SearchWarAddedDate");
                _SearchWarAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarAddedDate");
                OnSearchWarAddedDateChanged();
            }
        }
        private global::System.DateTime _SearchWarAddedDate;
        partial void OnSearchWarAddedDateChanging(global::System.DateTime value);
        partial void OnSearchWarAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarEditDate
        {
            get
            {
                return _SearchWarEditDate;
            }
            set
            {
                OnSearchWarEditDateChanging(value);
                ReportPropertyChanging("SearchWarEditDate");
                _SearchWarEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarEditDate");
                OnSearchWarEditDateChanged();
            }
        }
        private global::System.DateTime _SearchWarEditDate;
        partial void OnSearchWarEditDateChanging(global::System.DateTime value);
        partial void OnSearchWarEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarUserIpAddress
        {
            get
            {
                return _SearchWarUserIpAddress;
            }
            set
            {
                OnSearchWarUserIpAddressChanging(value);
                ReportPropertyChanging("SearchWarUserIpAddress");
                _SearchWarUserIpAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarUserIpAddress");
                OnSearchWarUserIpAddressChanged();
            }
        }
        private global::System.String _SearchWarUserIpAddress;
        partial void OnSearchWarUserIpAddressChanging(global::System.String value);
        partial void OnSearchWarUserIpAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarUserID
        {
            get
            {
                return _SearchWarUserID;
            }
            set
            {
                OnSearchWarUserIDChanging(value);
                ReportPropertyChanging("SearchWarUserID");
                _SearchWarUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarUserID");
                OnSearchWarUserIDChanged();
            }
        }
        private global::System.Guid _SearchWarUserID;
        partial void OnSearchWarUserIDChanging(global::System.Guid value);
        partial void OnSearchWarUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SearchWarIsRunning
        {
            get
            {
                return _SearchWarIsRunning;
            }
            set
            {
                OnSearchWarIsRunningChanging(value);
                ReportPropertyChanging("SearchWarIsRunning");
                _SearchWarIsRunning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarIsRunning");
                OnSearchWarIsRunningChanged();
            }
        }
        private global::System.Boolean _SearchWarIsRunning;
        partial void OnSearchWarIsRunningChanging(global::System.Boolean value);
        partial void OnSearchWarIsRunningChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWarContinent")]
        public SW_SearchWarContinent SW_SearchWarContinent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWarContinent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWarContinent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarContinent> SW_SearchWarContinentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWarContinent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWarContinent")]
        public SW_SearchWarContinent SW_SearchWarContinent1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWarContinent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWarContinent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarContinent> SW_SearchWarContinent1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWarContinent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWarCountry")]
        public SW_SearchWarCountry SW_SearchWarCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWarCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWarCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarCountry> SW_SearchWarCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWarCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWarCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWarCountry")]
        public SW_SearchWarCountry SW_SearchWarCountry1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWarCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWarCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarCountry> SW_SearchWarCountry1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWarCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWarCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWarGame")]
        public SW_SearchWarGame SW_SearchWarGame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWarGame").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWarGame").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarGame> SW_SearchWarGameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWarGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWarGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWarGameType")]
        public SW_SearchWarGameType SW_SearchWarGameType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWarGameType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWarGameType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarGameType> SW_SearchWarGameTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWarGameType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWarGameType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWarSkill")]
        public SW_SearchWarSkill SW_SearchWarSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWarSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWarSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarSkill> SW_SearchWarSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWarSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWarSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWarSkill")]
        public SW_SearchWarSkill SW_SearchWarSkill1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWarSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWarSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarSkill> SW_SearchWarSkill1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWarSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWarSkill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWarPlayer")]
        public EntityCollection<SW_SearchWarPlayer> SW_SearchWarPlayer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarPlayer>("Searchwar_netModel.FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWarPlayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarPlayer>("Searchwar_netModel.FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWarPlayer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarContinent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarContinent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarContinent object.
        /// </summary>
        /// <param name="searchWarContinentId">Initial value of the SearchWarContinentId property.</param>
        /// <param name="searchWarContinentAddedDate">Initial value of the SearchWarContinentAddedDate property.</param>
        /// <param name="searchWarContinentEditDate">Initial value of the SearchWarContinentEditDate property.</param>
        /// <param name="searchWarContinentAddedUserId">Initial value of the SearchWarContinentAddedUserId property.</param>
        /// <param name="searchWarContinentEditUserId">Initial value of the SearchWarContinentEditUserId property.</param>
        public static SW_SearchWarContinent CreateSW_SearchWarContinent(global::System.Int32 searchWarContinentId, global::System.DateTime searchWarContinentAddedDate, global::System.DateTime searchWarContinentEditDate, global::System.Guid searchWarContinentAddedUserId, global::System.Guid searchWarContinentEditUserId)
        {
            SW_SearchWarContinent sW_SearchWarContinent = new SW_SearchWarContinent();
            sW_SearchWarContinent.SearchWarContinentId = searchWarContinentId;
            sW_SearchWarContinent.SearchWarContinentAddedDate = searchWarContinentAddedDate;
            sW_SearchWarContinent.SearchWarContinentEditDate = searchWarContinentEditDate;
            sW_SearchWarContinent.SearchWarContinentAddedUserId = searchWarContinentAddedUserId;
            sW_SearchWarContinent.SearchWarContinentEditUserId = searchWarContinentEditUserId;
            return sW_SearchWarContinent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarContinentId
        {
            get
            {
                return _SearchWarContinentId;
            }
            set
            {
                if (_SearchWarContinentId != value)
                {
                    OnSearchWarContinentIdChanging(value);
                    ReportPropertyChanging("SearchWarContinentId");
                    _SearchWarContinentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarContinentId");
                    OnSearchWarContinentIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarContinentId;
        partial void OnSearchWarContinentIdChanging(global::System.Int32 value);
        partial void OnSearchWarContinentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarContinentAddedDate
        {
            get
            {
                return _SearchWarContinentAddedDate;
            }
            set
            {
                OnSearchWarContinentAddedDateChanging(value);
                ReportPropertyChanging("SearchWarContinentAddedDate");
                _SearchWarContinentAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarContinentAddedDate");
                OnSearchWarContinentAddedDateChanged();
            }
        }
        private global::System.DateTime _SearchWarContinentAddedDate;
        partial void OnSearchWarContinentAddedDateChanging(global::System.DateTime value);
        partial void OnSearchWarContinentAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarContinentEditDate
        {
            get
            {
                return _SearchWarContinentEditDate;
            }
            set
            {
                OnSearchWarContinentEditDateChanging(value);
                ReportPropertyChanging("SearchWarContinentEditDate");
                _SearchWarContinentEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarContinentEditDate");
                OnSearchWarContinentEditDateChanged();
            }
        }
        private global::System.DateTime _SearchWarContinentEditDate;
        partial void OnSearchWarContinentEditDateChanging(global::System.DateTime value);
        partial void OnSearchWarContinentEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarContinentAddedUserId
        {
            get
            {
                return _SearchWarContinentAddedUserId;
            }
            set
            {
                OnSearchWarContinentAddedUserIdChanging(value);
                ReportPropertyChanging("SearchWarContinentAddedUserId");
                _SearchWarContinentAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarContinentAddedUserId");
                OnSearchWarContinentAddedUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarContinentAddedUserId;
        partial void OnSearchWarContinentAddedUserIdChanging(global::System.Guid value);
        partial void OnSearchWarContinentAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarContinentEditUserId
        {
            get
            {
                return _SearchWarContinentEditUserId;
            }
            set
            {
                OnSearchWarContinentEditUserIdChanging(value);
                ReportPropertyChanging("SearchWarContinentEditUserId");
                _SearchWarContinentEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarContinentEditUserId");
                OnSearchWarContinentEditUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarContinentEditUserId;
        partial void OnSearchWarContinentEditUserIdChanging(global::System.Guid value);
        partial void OnSearchWarContinentEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinent_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinent_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarContinent_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ServerContinents_SW_SearchWarContinent", "SW_ServerContinents")]
        public EntityCollection<SW_ServerContinents> SW_ServerContinents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_ServerContinents>("Searchwar_netModel.FK_SW_ServerContinents_SW_SearchWarContinent", "SW_ServerContinents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_ServerContinents>("Searchwar_netModel.FK_SW_ServerContinents_SW_SearchWarContinent", "SW_ServerContinents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent1", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarContinent2", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinentData")]
        public EntityCollection<SW_SearchWarContinentData> SW_SearchWarContinentData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarContinentData>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinentData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarContinentData>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinentData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarCountry")]
        public EntityCollection<SW_SearchWarCountry> SW_SearchWarCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarCountry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarContinentData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarContinentData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarContinentData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="searchWarContinentId">Initial value of the SearchWarContinentId property.</param>
        public static SW_SearchWarContinentData CreateSW_SearchWarContinentData(global::System.Int32 langId, global::System.Int32 searchWarContinentId)
        {
            SW_SearchWarContinentData sW_SearchWarContinentData = new SW_SearchWarContinentData();
            sW_SearchWarContinentData.LangId = langId;
            sW_SearchWarContinentData.SearchWarContinentId = searchWarContinentId;
            return sW_SearchWarContinentData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarContinentId
        {
            get
            {
                return _SearchWarContinentId;
            }
            set
            {
                if (_SearchWarContinentId != value)
                {
                    OnSearchWarContinentIdChanging(value);
                    ReportPropertyChanging("SearchWarContinentId");
                    _SearchWarContinentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarContinentId");
                    OnSearchWarContinentIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarContinentId;
        partial void OnSearchWarContinentIdChanging(global::System.Int32 value);
        partial void OnSearchWarContinentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchWarContinentName
        {
            get
            {
                return _SearchWarContinentName;
            }
            set
            {
                OnSearchWarContinentNameChanging(value);
                ReportPropertyChanging("SearchWarContinentName");
                _SearchWarContinentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchWarContinentName");
                OnSearchWarContinentNameChanged();
            }
        }
        private global::System.String _SearchWarContinentName;
        partial void OnSearchWarContinentNameChanging(global::System.String value);
        partial void OnSearchWarContinentNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinentData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_Lang", "SW_Lang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinent")]
        public SW_SearchWarContinent SW_SearchWarContinent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarContinent> SW_SearchWarContinentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarContinentData_SW_SearchWarContinent", "SW_SearchWarContinent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarCountry object.
        /// </summary>
        /// <param name="searchWarCountryId">Initial value of the SearchWarCountryId property.</param>
        /// <param name="searchWarCountryAddedDate">Initial value of the SearchWarCountryAddedDate property.</param>
        /// <param name="searchWarCountryEditDate">Initial value of the SearchWarCountryEditDate property.</param>
        /// <param name="searchWarCountryAddedUserId">Initial value of the SearchWarCountryAddedUserId property.</param>
        /// <param name="searchWarCountryEditUserId">Initial value of the SearchWarCountryEditUserId property.</param>
        /// <param name="searchWarContinentId">Initial value of the SearchWarContinentId property.</param>
        public static SW_SearchWarCountry CreateSW_SearchWarCountry(global::System.Int32 searchWarCountryId, global::System.DateTime searchWarCountryAddedDate, global::System.DateTime searchWarCountryEditDate, global::System.Guid searchWarCountryAddedUserId, global::System.Guid searchWarCountryEditUserId, global::System.Int32 searchWarContinentId)
        {
            SW_SearchWarCountry sW_SearchWarCountry = new SW_SearchWarCountry();
            sW_SearchWarCountry.SearchWarCountryId = searchWarCountryId;
            sW_SearchWarCountry.SearchWarCountryAddedDate = searchWarCountryAddedDate;
            sW_SearchWarCountry.SearchWarCountryEditDate = searchWarCountryEditDate;
            sW_SearchWarCountry.SearchWarCountryAddedUserId = searchWarCountryAddedUserId;
            sW_SearchWarCountry.SearchWarCountryEditUserId = searchWarCountryEditUserId;
            sW_SearchWarCountry.SearchWarContinentId = searchWarContinentId;
            return sW_SearchWarCountry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarCountryId
        {
            get
            {
                return _SearchWarCountryId;
            }
            set
            {
                if (_SearchWarCountryId != value)
                {
                    OnSearchWarCountryIdChanging(value);
                    ReportPropertyChanging("SearchWarCountryId");
                    _SearchWarCountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarCountryId");
                    OnSearchWarCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarCountryId;
        partial void OnSearchWarCountryIdChanging(global::System.Int32 value);
        partial void OnSearchWarCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarCountryAddedDate
        {
            get
            {
                return _SearchWarCountryAddedDate;
            }
            set
            {
                OnSearchWarCountryAddedDateChanging(value);
                ReportPropertyChanging("SearchWarCountryAddedDate");
                _SearchWarCountryAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarCountryAddedDate");
                OnSearchWarCountryAddedDateChanged();
            }
        }
        private global::System.DateTime _SearchWarCountryAddedDate;
        partial void OnSearchWarCountryAddedDateChanging(global::System.DateTime value);
        partial void OnSearchWarCountryAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarCountryEditDate
        {
            get
            {
                return _SearchWarCountryEditDate;
            }
            set
            {
                OnSearchWarCountryEditDateChanging(value);
                ReportPropertyChanging("SearchWarCountryEditDate");
                _SearchWarCountryEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarCountryEditDate");
                OnSearchWarCountryEditDateChanged();
            }
        }
        private global::System.DateTime _SearchWarCountryEditDate;
        partial void OnSearchWarCountryEditDateChanging(global::System.DateTime value);
        partial void OnSearchWarCountryEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarCountryAddedUserId
        {
            get
            {
                return _SearchWarCountryAddedUserId;
            }
            set
            {
                OnSearchWarCountryAddedUserIdChanging(value);
                ReportPropertyChanging("SearchWarCountryAddedUserId");
                _SearchWarCountryAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarCountryAddedUserId");
                OnSearchWarCountryAddedUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarCountryAddedUserId;
        partial void OnSearchWarCountryAddedUserIdChanging(global::System.Guid value);
        partial void OnSearchWarCountryAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarCountryEditUserId
        {
            get
            {
                return _SearchWarCountryEditUserId;
            }
            set
            {
                OnSearchWarCountryEditUserIdChanging(value);
                ReportPropertyChanging("SearchWarCountryEditUserId");
                _SearchWarCountryEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarCountryEditUserId");
                OnSearchWarCountryEditUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarCountryEditUserId;
        partial void OnSearchWarCountryEditUserIdChanging(global::System.Guid value);
        partial void OnSearchWarCountryEditUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarContinentId
        {
            get
            {
                return _SearchWarContinentId;
            }
            set
            {
                OnSearchWarContinentIdChanging(value);
                ReportPropertyChanging("SearchWarContinentId");
                _SearchWarContinentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarContinentId");
                OnSearchWarContinentIdChanged();
            }
        }
        private global::System.Int32 _SearchWarContinentId;
        partial void OnSearchWarContinentIdChanging(global::System.Int32 value);
        partial void OnSearchWarContinentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarCountry_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry1", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarCountry2", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarContinent")]
        public SW_SearchWarContinent SW_SearchWarContinent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarContinent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarContinent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarContinent> SW_SearchWarContinentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_SearchWarCountry_SW_SearchWarContinent", "SW_SearchWarContinent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountryData")]
        public EntityCollection<SW_SearchWarCountryData> SW_SearchWarCountryData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarCountryData>("Searchwar_netModel.FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountryData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarCountryData>("Searchwar_netModel.FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountryData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarCountryData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarCountryData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarCountryData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="searchWarCountrytId">Initial value of the SearchWarCountrytId property.</param>
        /// <param name="searchWarCountryName">Initial value of the SearchWarCountryName property.</param>
        /// <param name="searchWarCountryTLD">Initial value of the SearchWarCountryTLD property.</param>
        public static SW_SearchWarCountryData CreateSW_SearchWarCountryData(global::System.Int32 langId, global::System.Int32 searchWarCountrytId, global::System.String searchWarCountryName, global::System.String searchWarCountryTLD)
        {
            SW_SearchWarCountryData sW_SearchWarCountryData = new SW_SearchWarCountryData();
            sW_SearchWarCountryData.LangId = langId;
            sW_SearchWarCountryData.SearchWarCountrytId = searchWarCountrytId;
            sW_SearchWarCountryData.SearchWarCountryName = searchWarCountryName;
            sW_SearchWarCountryData.SearchWarCountryTLD = searchWarCountryTLD;
            return sW_SearchWarCountryData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarCountrytId
        {
            get
            {
                return _SearchWarCountrytId;
            }
            set
            {
                if (_SearchWarCountrytId != value)
                {
                    OnSearchWarCountrytIdChanging(value);
                    ReportPropertyChanging("SearchWarCountrytId");
                    _SearchWarCountrytId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarCountrytId");
                    OnSearchWarCountrytIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarCountrytId;
        partial void OnSearchWarCountrytIdChanging(global::System.Int32 value);
        partial void OnSearchWarCountrytIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarCountryName
        {
            get
            {
                return _SearchWarCountryName;
            }
            set
            {
                OnSearchWarCountryNameChanging(value);
                ReportPropertyChanging("SearchWarCountryName");
                _SearchWarCountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarCountryName");
                OnSearchWarCountryNameChanged();
            }
        }
        private global::System.String _SearchWarCountryName;
        partial void OnSearchWarCountryNameChanging(global::System.String value);
        partial void OnSearchWarCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarCountryTLD
        {
            get
            {
                return _SearchWarCountryTLD;
            }
            set
            {
                OnSearchWarCountryTLDChanging(value);
                ReportPropertyChanging("SearchWarCountryTLD");
                _SearchWarCountryTLD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarCountryTLD");
                OnSearchWarCountryTLDChanged();
            }
        }
        private global::System.String _SearchWarCountryTLD;
        partial void OnSearchWarCountryTLDChanging(global::System.String value);
        partial void OnSearchWarCountryTLDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchCountryData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchCountryData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchCountryData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchCountryData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchCountryData_SW_Lang", "SW_Lang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountry")]
        public SW_SearchWarCountry SW_SearchWarCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarCountry> SW_SearchWarCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarCountry>("Searchwar_netModel.FK_SW_SearchCountryData_SW_SearchWarCountry", "SW_SearchWarCountry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarGame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarGame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarGame object.
        /// </summary>
        /// <param name="searchWarGameId">Initial value of the SearchWarGameId property.</param>
        /// <param name="searchWarGameName">Initial value of the SearchWarGameName property.</param>
        /// <param name="searchWarGameAddedDate">Initial value of the SearchWarGameAddedDate property.</param>
        /// <param name="searchWarGameEditDate">Initial value of the SearchWarGameEditDate property.</param>
        /// <param name="searchWarGameAddedUserId">Initial value of the SearchWarGameAddedUserId property.</param>
        /// <param name="searchWarGameEditUserId">Initial value of the SearchWarGameEditUserId property.</param>
        public static SW_SearchWarGame CreateSW_SearchWarGame(global::System.Int32 searchWarGameId, global::System.String searchWarGameName, global::System.DateTime searchWarGameAddedDate, global::System.DateTime searchWarGameEditDate, global::System.Guid searchWarGameAddedUserId, global::System.Guid searchWarGameEditUserId)
        {
            SW_SearchWarGame sW_SearchWarGame = new SW_SearchWarGame();
            sW_SearchWarGame.SearchWarGameId = searchWarGameId;
            sW_SearchWarGame.SearchWarGameName = searchWarGameName;
            sW_SearchWarGame.SearchWarGameAddedDate = searchWarGameAddedDate;
            sW_SearchWarGame.SearchWarGameEditDate = searchWarGameEditDate;
            sW_SearchWarGame.SearchWarGameAddedUserId = searchWarGameAddedUserId;
            sW_SearchWarGame.SearchWarGameEditUserId = searchWarGameEditUserId;
            return sW_SearchWarGame;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarGameId
        {
            get
            {
                return _SearchWarGameId;
            }
            set
            {
                if (_SearchWarGameId != value)
                {
                    OnSearchWarGameIdChanging(value);
                    ReportPropertyChanging("SearchWarGameId");
                    _SearchWarGameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarGameId");
                    OnSearchWarGameIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarGameId;
        partial void OnSearchWarGameIdChanging(global::System.Int32 value);
        partial void OnSearchWarGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarGameName
        {
            get
            {
                return _SearchWarGameName;
            }
            set
            {
                OnSearchWarGameNameChanging(value);
                ReportPropertyChanging("SearchWarGameName");
                _SearchWarGameName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarGameName");
                OnSearchWarGameNameChanged();
            }
        }
        private global::System.String _SearchWarGameName;
        partial void OnSearchWarGameNameChanging(global::System.String value);
        partial void OnSearchWarGameNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarGameAddedDate
        {
            get
            {
                return _SearchWarGameAddedDate;
            }
            set
            {
                OnSearchWarGameAddedDateChanging(value);
                ReportPropertyChanging("SearchWarGameAddedDate");
                _SearchWarGameAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameAddedDate");
                OnSearchWarGameAddedDateChanged();
            }
        }
        private global::System.DateTime _SearchWarGameAddedDate;
        partial void OnSearchWarGameAddedDateChanging(global::System.DateTime value);
        partial void OnSearchWarGameAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarGameEditDate
        {
            get
            {
                return _SearchWarGameEditDate;
            }
            set
            {
                OnSearchWarGameEditDateChanging(value);
                ReportPropertyChanging("SearchWarGameEditDate");
                _SearchWarGameEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameEditDate");
                OnSearchWarGameEditDateChanged();
            }
        }
        private global::System.DateTime _SearchWarGameEditDate;
        partial void OnSearchWarGameEditDateChanging(global::System.DateTime value);
        partial void OnSearchWarGameEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarGameAddedUserId
        {
            get
            {
                return _SearchWarGameAddedUserId;
            }
            set
            {
                OnSearchWarGameAddedUserIdChanging(value);
                ReportPropertyChanging("SearchWarGameAddedUserId");
                _SearchWarGameAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameAddedUserId");
                OnSearchWarGameAddedUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarGameAddedUserId;
        partial void OnSearchWarGameAddedUserIdChanging(global::System.Guid value);
        partial void OnSearchWarGameAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarGameEditUserId
        {
            get
            {
                return _SearchWarGameEditUserId;
            }
            set
            {
                OnSearchWarGameEditUserIdChanging(value);
                ReportPropertyChanging("SearchWarGameEditUserId");
                _SearchWarGameEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameEditUserId");
                OnSearchWarGameEditUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarGameEditUserId;
        partial void OnSearchWarGameEditUserIdChanging(global::System.Guid value);
        partial void OnSearchWarGameEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarGame_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarGame_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarGame_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGame1", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGameType")]
        public EntityCollection<SW_SearchWarGameType> SW_SearchWarGameType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGameType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarGameType>("Searchwar_netModel.FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGameType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarGameType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarGameType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarGameType object.
        /// </summary>
        /// <param name="searchWarGameTypeId">Initial value of the SearchWarGameTypeId property.</param>
        /// <param name="searchWarGameId">Initial value of the SearchWarGameId property.</param>
        /// <param name="searchWarGameTypeName">Initial value of the SearchWarGameTypeName property.</param>
        /// <param name="searchWarGameTypeAddedDate">Initial value of the SearchWarGameTypeAddedDate property.</param>
        /// <param name="searchWarGameTypeEditDate">Initial value of the SearchWarGameTypeEditDate property.</param>
        /// <param name="searchWarGameTypeAddedUserId">Initial value of the SearchWarGameTypeAddedUserId property.</param>
        /// <param name="searchWarGameTypeEditUserId">Initial value of the SearchWarGameTypeEditUserId property.</param>
        public static SW_SearchWarGameType CreateSW_SearchWarGameType(global::System.Int32 searchWarGameTypeId, global::System.Int32 searchWarGameId, global::System.String searchWarGameTypeName, global::System.DateTime searchWarGameTypeAddedDate, global::System.DateTime searchWarGameTypeEditDate, global::System.Guid searchWarGameTypeAddedUserId, global::System.Guid searchWarGameTypeEditUserId)
        {
            SW_SearchWarGameType sW_SearchWarGameType = new SW_SearchWarGameType();
            sW_SearchWarGameType.SearchWarGameTypeId = searchWarGameTypeId;
            sW_SearchWarGameType.SearchWarGameId = searchWarGameId;
            sW_SearchWarGameType.SearchWarGameTypeName = searchWarGameTypeName;
            sW_SearchWarGameType.SearchWarGameTypeAddedDate = searchWarGameTypeAddedDate;
            sW_SearchWarGameType.SearchWarGameTypeEditDate = searchWarGameTypeEditDate;
            sW_SearchWarGameType.SearchWarGameTypeAddedUserId = searchWarGameTypeAddedUserId;
            sW_SearchWarGameType.SearchWarGameTypeEditUserId = searchWarGameTypeEditUserId;
            return sW_SearchWarGameType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarGameTypeId
        {
            get
            {
                return _SearchWarGameTypeId;
            }
            set
            {
                if (_SearchWarGameTypeId != value)
                {
                    OnSearchWarGameTypeIdChanging(value);
                    ReportPropertyChanging("SearchWarGameTypeId");
                    _SearchWarGameTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarGameTypeId");
                    OnSearchWarGameTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarGameTypeId;
        partial void OnSearchWarGameTypeIdChanging(global::System.Int32 value);
        partial void OnSearchWarGameTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarGameId
        {
            get
            {
                return _SearchWarGameId;
            }
            set
            {
                OnSearchWarGameIdChanging(value);
                ReportPropertyChanging("SearchWarGameId");
                _SearchWarGameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameId");
                OnSearchWarGameIdChanged();
            }
        }
        private global::System.Int32 _SearchWarGameId;
        partial void OnSearchWarGameIdChanging(global::System.Int32 value);
        partial void OnSearchWarGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarGameTypeName
        {
            get
            {
                return _SearchWarGameTypeName;
            }
            set
            {
                OnSearchWarGameTypeNameChanging(value);
                ReportPropertyChanging("SearchWarGameTypeName");
                _SearchWarGameTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarGameTypeName");
                OnSearchWarGameTypeNameChanged();
            }
        }
        private global::System.String _SearchWarGameTypeName;
        partial void OnSearchWarGameTypeNameChanging(global::System.String value);
        partial void OnSearchWarGameTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarGameTypeAddedDate
        {
            get
            {
                return _SearchWarGameTypeAddedDate;
            }
            set
            {
                OnSearchWarGameTypeAddedDateChanging(value);
                ReportPropertyChanging("SearchWarGameTypeAddedDate");
                _SearchWarGameTypeAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameTypeAddedDate");
                OnSearchWarGameTypeAddedDateChanged();
            }
        }
        private global::System.DateTime _SearchWarGameTypeAddedDate;
        partial void OnSearchWarGameTypeAddedDateChanging(global::System.DateTime value);
        partial void OnSearchWarGameTypeAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarGameTypeEditDate
        {
            get
            {
                return _SearchWarGameTypeEditDate;
            }
            set
            {
                OnSearchWarGameTypeEditDateChanging(value);
                ReportPropertyChanging("SearchWarGameTypeEditDate");
                _SearchWarGameTypeEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameTypeEditDate");
                OnSearchWarGameTypeEditDateChanged();
            }
        }
        private global::System.DateTime _SearchWarGameTypeEditDate;
        partial void OnSearchWarGameTypeEditDateChanging(global::System.DateTime value);
        partial void OnSearchWarGameTypeEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarGameTypeAddedUserId
        {
            get
            {
                return _SearchWarGameTypeAddedUserId;
            }
            set
            {
                OnSearchWarGameTypeAddedUserIdChanging(value);
                ReportPropertyChanging("SearchWarGameTypeAddedUserId");
                _SearchWarGameTypeAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameTypeAddedUserId");
                OnSearchWarGameTypeAddedUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarGameTypeAddedUserId;
        partial void OnSearchWarGameTypeAddedUserIdChanging(global::System.Guid value);
        partial void OnSearchWarGameTypeAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarGameTypeEditUserId
        {
            get
            {
                return _SearchWarGameTypeEditUserId;
            }
            set
            {
                OnSearchWarGameTypeEditUserIdChanging(value);
                ReportPropertyChanging("SearchWarGameTypeEditUserId");
                _SearchWarGameTypeEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarGameTypeEditUserId");
                OnSearchWarGameTypeEditUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarGameTypeEditUserId;
        partial void OnSearchWarGameTypeEditUserIdChanging(global::System.Guid value);
        partial void OnSearchWarGameTypeEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarType_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarType_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarType_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarGameType", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGame")]
        public SW_SearchWarGame SW_SearchWarGame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGame").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGame").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarGame> SW_SearchWarGameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarGame>("Searchwar_netModel.FK_SW_SearchWarType_SW_SearchWarGame", "SW_SearchWarGame", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarPlayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarPlayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarPlayer object.
        /// </summary>
        /// <param name="searchWarPlayerId">Initial value of the SearchWarPlayerId property.</param>
        /// <param name="searchWarNick">Initial value of the SearchWarNick property.</param>
        /// <param name="searchWarId">Initial value of the SearchWarId property.</param>
        public static SW_SearchWarPlayer CreateSW_SearchWarPlayer(global::System.Int32 searchWarPlayerId, global::System.String searchWarNick, global::System.Guid searchWarId)
        {
            SW_SearchWarPlayer sW_SearchWarPlayer = new SW_SearchWarPlayer();
            sW_SearchWarPlayer.SearchWarPlayerId = searchWarPlayerId;
            sW_SearchWarPlayer.SearchWarNick = searchWarNick;
            sW_SearchWarPlayer.SearchWarId = searchWarId;
            return sW_SearchWarPlayer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarPlayerId
        {
            get
            {
                return _SearchWarPlayerId;
            }
            set
            {
                if (_SearchWarPlayerId != value)
                {
                    OnSearchWarPlayerIdChanging(value);
                    ReportPropertyChanging("SearchWarPlayerId");
                    _SearchWarPlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarPlayerId");
                    OnSearchWarPlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarPlayerId;
        partial void OnSearchWarPlayerIdChanging(global::System.Int32 value);
        partial void OnSearchWarPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarNick
        {
            get
            {
                return _SearchWarNick;
            }
            set
            {
                OnSearchWarNickChanging(value);
                ReportPropertyChanging("SearchWarNick");
                _SearchWarNick = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarNick");
                OnSearchWarNickChanged();
            }
        }
        private global::System.String _SearchWarNick;
        partial void OnSearchWarNickChanging(global::System.String value);
        partial void OnSearchWarNickChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SearchWarName
        {
            get
            {
                return _SearchWarName;
            }
            set
            {
                OnSearchWarNameChanging(value);
                ReportPropertyChanging("SearchWarName");
                _SearchWarName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SearchWarName");
                OnSearchWarNameChanged();
            }
        }
        private global::System.String _SearchWarName;
        partial void OnSearchWarNameChanging(global::System.String value);
        partial void OnSearchWarNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarId
        {
            get
            {
                return _SearchWarId;
            }
            set
            {
                OnSearchWarIdChanging(value);
                ReportPropertyChanging("SearchWarId");
                _SearchWarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarId");
                OnSearchWarIdChanged();
            }
        }
        private global::System.Guid _SearchWarId;
        partial void OnSearchWarIdChanging(global::System.Guid value);
        partial void OnSearchWarIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWar")]
        public SW_SearchWar SW_SearchWar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWar> SW_SearchWarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWarPlayer_SW_SearchWar", "SW_SearchWar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarSkill object.
        /// </summary>
        /// <param name="searchWarSkillId">Initial value of the SearchWarSkillId property.</param>
        /// <param name="searchWarSkillSort">Initial value of the SearchWarSkillSort property.</param>
        /// <param name="searchWarSkillAddedDatetime">Initial value of the SearchWarSkillAddedDatetime property.</param>
        /// <param name="searchWarSkillEditDatetime">Initial value of the SearchWarSkillEditDatetime property.</param>
        /// <param name="searchWarSkillAddedUserId">Initial value of the SearchWarSkillAddedUserId property.</param>
        /// <param name="searchWarSkillEditUserId">Initial value of the SearchWarSkillEditUserId property.</param>
        public static SW_SearchWarSkill CreateSW_SearchWarSkill(global::System.Int32 searchWarSkillId, global::System.Int32 searchWarSkillSort, global::System.DateTime searchWarSkillAddedDatetime, global::System.DateTime searchWarSkillEditDatetime, global::System.Guid searchWarSkillAddedUserId, global::System.Guid searchWarSkillEditUserId)
        {
            SW_SearchWarSkill sW_SearchWarSkill = new SW_SearchWarSkill();
            sW_SearchWarSkill.SearchWarSkillId = searchWarSkillId;
            sW_SearchWarSkill.SearchWarSkillSort = searchWarSkillSort;
            sW_SearchWarSkill.SearchWarSkillAddedDatetime = searchWarSkillAddedDatetime;
            sW_SearchWarSkill.SearchWarSkillEditDatetime = searchWarSkillEditDatetime;
            sW_SearchWarSkill.SearchWarSkillAddedUserId = searchWarSkillAddedUserId;
            sW_SearchWarSkill.SearchWarSkillEditUserId = searchWarSkillEditUserId;
            return sW_SearchWarSkill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarSkillId
        {
            get
            {
                return _SearchWarSkillId;
            }
            set
            {
                if (_SearchWarSkillId != value)
                {
                    OnSearchWarSkillIdChanging(value);
                    ReportPropertyChanging("SearchWarSkillId");
                    _SearchWarSkillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarSkillId");
                    OnSearchWarSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarSkillId;
        partial void OnSearchWarSkillIdChanging(global::System.Int32 value);
        partial void OnSearchWarSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarSkillSort
        {
            get
            {
                return _SearchWarSkillSort;
            }
            set
            {
                OnSearchWarSkillSortChanging(value);
                ReportPropertyChanging("SearchWarSkillSort");
                _SearchWarSkillSort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSkillSort");
                OnSearchWarSkillSortChanged();
            }
        }
        private global::System.Int32 _SearchWarSkillSort;
        partial void OnSearchWarSkillSortChanging(global::System.Int32 value);
        partial void OnSearchWarSkillSortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarSkillAddedDatetime
        {
            get
            {
                return _SearchWarSkillAddedDatetime;
            }
            set
            {
                OnSearchWarSkillAddedDatetimeChanging(value);
                ReportPropertyChanging("SearchWarSkillAddedDatetime");
                _SearchWarSkillAddedDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSkillAddedDatetime");
                OnSearchWarSkillAddedDatetimeChanged();
            }
        }
        private global::System.DateTime _SearchWarSkillAddedDatetime;
        partial void OnSearchWarSkillAddedDatetimeChanging(global::System.DateTime value);
        partial void OnSearchWarSkillAddedDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SearchWarSkillEditDatetime
        {
            get
            {
                return _SearchWarSkillEditDatetime;
            }
            set
            {
                OnSearchWarSkillEditDatetimeChanging(value);
                ReportPropertyChanging("SearchWarSkillEditDatetime");
                _SearchWarSkillEditDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSkillEditDatetime");
                OnSearchWarSkillEditDatetimeChanged();
            }
        }
        private global::System.DateTime _SearchWarSkillEditDatetime;
        partial void OnSearchWarSkillEditDatetimeChanging(global::System.DateTime value);
        partial void OnSearchWarSkillEditDatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarSkillAddedUserId
        {
            get
            {
                return _SearchWarSkillAddedUserId;
            }
            set
            {
                OnSearchWarSkillAddedUserIdChanging(value);
                ReportPropertyChanging("SearchWarSkillAddedUserId");
                _SearchWarSkillAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSkillAddedUserId");
                OnSearchWarSkillAddedUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarSkillAddedUserId;
        partial void OnSearchWarSkillAddedUserIdChanging(global::System.Guid value);
        partial void OnSearchWarSkillAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SearchWarSkillEditUserId
        {
            get
            {
                return _SearchWarSkillEditUserId;
            }
            set
            {
                OnSearchWarSkillEditUserIdChanging(value);
                ReportPropertyChanging("SearchWarSkillEditUserId");
                _SearchWarSkillEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchWarSkillEditUserId");
                OnSearchWarSkillEditUserIdChanged();
            }
        }
        private global::System.Guid _SearchWarSkillEditUserId;
        partial void OnSearchWarSkillEditUserIdChanging(global::System.Guid value);
        partial void OnSearchWarSkillEditUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkill_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkill_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SearchWarSkill_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWar")]
        public EntityCollection<SW_SearchWar> SW_SearchWar1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWar>("Searchwar_netModel.FK_SW_SearchWar_SW_SearchWarSkill3", "SW_SearchWar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkillData")]
        public EntityCollection<SW_SearchWarSkillData> SW_SearchWarSkillData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SearchWarSkillData>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkillData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SearchWarSkillData>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkillData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SearchWarSkillData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SearchWarSkillData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SearchWarSkillData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="searchWarSkillId">Initial value of the SearchWarSkillId property.</param>
        /// <param name="searchWarSkillName">Initial value of the SearchWarSkillName property.</param>
        public static SW_SearchWarSkillData CreateSW_SearchWarSkillData(global::System.Int32 langId, global::System.Int32 searchWarSkillId, global::System.String searchWarSkillName)
        {
            SW_SearchWarSkillData sW_SearchWarSkillData = new SW_SearchWarSkillData();
            sW_SearchWarSkillData.LangId = langId;
            sW_SearchWarSkillData.SearchWarSkillId = searchWarSkillId;
            sW_SearchWarSkillData.SearchWarSkillName = searchWarSkillName;
            return sW_SearchWarSkillData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchWarSkillId
        {
            get
            {
                return _SearchWarSkillId;
            }
            set
            {
                if (_SearchWarSkillId != value)
                {
                    OnSearchWarSkillIdChanging(value);
                    ReportPropertyChanging("SearchWarSkillId");
                    _SearchWarSkillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SearchWarSkillId");
                    OnSearchWarSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _SearchWarSkillId;
        partial void OnSearchWarSkillIdChanging(global::System.Int32 value);
        partial void OnSearchWarSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SearchWarSkillName
        {
            get
            {
                return _SearchWarSkillName;
            }
            set
            {
                OnSearchWarSkillNameChanging(value);
                ReportPropertyChanging("SearchWarSkillName");
                _SearchWarSkillName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SearchWarSkillName");
                OnSearchWarSkillNameChanged();
            }
        }
        private global::System.String _SearchWarSkillName;
        partial void OnSearchWarSkillNameChanging(global::System.String value);
        partial void OnSearchWarSkillNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkillData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_Lang", "SW_Lang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkill")]
        public SW_SearchWarSkill SW_SearchWarSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarSkill> SW_SearchWarSkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarSkill>("Searchwar_netModel.FK_SW_SearchWarSkillData_SW_SearchWarSkill", "SW_SearchWarSkill", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_Server")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_Server : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_Server object.
        /// </summary>
        /// <param name="serverID">Initial value of the serverID property.</param>
        /// <param name="serverName">Initial value of the serverName property.</param>
        public static SW_Server CreateSW_Server(global::System.Guid serverID, global::System.String serverName)
        {
            SW_Server sW_Server = new SW_Server();
            sW_Server.serverID = serverID;
            sW_Server.serverName = serverName;
            return sW_Server;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid serverID
        {
            get
            {
                return _serverID;
            }
            set
            {
                if (_serverID != value)
                {
                    OnserverIDChanging(value);
                    ReportPropertyChanging("serverID");
                    _serverID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serverID");
                    OnserverIDChanged();
                }
            }
        }
        private global::System.Guid _serverID;
        partial void OnserverIDChanging(global::System.Guid value);
        partial void OnserverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String serverName
        {
            get
            {
                return _serverName;
            }
            set
            {
                OnserverNameChanging(value);
                ReportPropertyChanging("serverName");
                _serverName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("serverName");
                OnserverNameChanged();
            }
        }
        private global::System.String _serverName;
        partial void OnserverNameChanging(global::System.String value);
        partial void OnserverNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ServerContinents_SW_Server", "SW_ServerContinents")]
        public EntityCollection<SW_ServerContinents> SW_ServerContinents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_ServerContinents>("Searchwar_netModel.FK_SW_ServerContinents_SW_Server", "SW_ServerContinents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_ServerContinents>("Searchwar_netModel.FK_SW_ServerContinents_SW_Server", "SW_ServerContinents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_ServerContinents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_ServerContinents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_ServerContinents object.
        /// </summary>
        /// <param name="serverContinentId">Initial value of the serverContinentId property.</param>
        /// <param name="serverId">Initial value of the serverId property.</param>
        /// <param name="searchwarContinentId">Initial value of the SearchwarContinentId property.</param>
        public static SW_ServerContinents CreateSW_ServerContinents(global::System.Guid serverContinentId, global::System.Guid serverId, global::System.Int32 searchwarContinentId)
        {
            SW_ServerContinents sW_ServerContinents = new SW_ServerContinents();
            sW_ServerContinents.serverContinentId = serverContinentId;
            sW_ServerContinents.serverId = serverId;
            sW_ServerContinents.SearchwarContinentId = searchwarContinentId;
            return sW_ServerContinents;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid serverContinentId
        {
            get
            {
                return _serverContinentId;
            }
            set
            {
                if (_serverContinentId != value)
                {
                    OnserverContinentIdChanging(value);
                    ReportPropertyChanging("serverContinentId");
                    _serverContinentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("serverContinentId");
                    OnserverContinentIdChanged();
                }
            }
        }
        private global::System.Guid _serverContinentId;
        partial void OnserverContinentIdChanging(global::System.Guid value);
        partial void OnserverContinentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid serverId
        {
            get
            {
                return _serverId;
            }
            set
            {
                OnserverIdChanging(value);
                ReportPropertyChanging("serverId");
                _serverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serverId");
                OnserverIdChanged();
            }
        }
        private global::System.Guid _serverId;
        partial void OnserverIdChanging(global::System.Guid value);
        partial void OnserverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchwarContinentId
        {
            get
            {
                return _SearchwarContinentId;
            }
            set
            {
                OnSearchwarContinentIdChanging(value);
                ReportPropertyChanging("SearchwarContinentId");
                _SearchwarContinentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchwarContinentId");
                OnSearchwarContinentIdChanged();
            }
        }
        private global::System.Int32 _SearchwarContinentId;
        partial void OnSearchwarContinentIdChanging(global::System.Int32 value);
        partial void OnSearchwarContinentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ServerContinents_SW_Server", "SW_Server")]
        public SW_Server SW_Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Server>("Searchwar_netModel.FK_SW_ServerContinents_SW_Server", "SW_Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Server>("Searchwar_netModel.FK_SW_ServerContinents_SW_Server", "SW_Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Server> SW_ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Server>("Searchwar_netModel.FK_SW_ServerContinents_SW_Server", "SW_Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Server>("Searchwar_netModel.FK_SW_ServerContinents_SW_Server", "SW_Server", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_ServerContinents_SW_SearchWarContinent", "SW_SearchWarContinent")]
        public SW_SearchWarContinent SW_SearchWarContinent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_ServerContinents_SW_SearchWarContinent", "SW_SearchWarContinent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_ServerContinents_SW_SearchWarContinent", "SW_SearchWarContinent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SearchWarContinent> SW_SearchWarContinentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_ServerContinents_SW_SearchWarContinent", "SW_SearchWarContinent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SearchWarContinent>("Searchwar_netModel.FK_SW_ServerContinents_SW_SearchWarContinent", "SW_SearchWarContinent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SiteMapNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SiteMapNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SiteMapNode object.
        /// </summary>
        /// <param name="siteMapNodeId">Initial value of the SiteMapNodeId property.</param>
        /// <param name="siteMapNodePath">Initial value of the SiteMapNodePath property.</param>
        /// <param name="siteMapNodeAddedUserId">Initial value of the SiteMapNodeAddedUserId property.</param>
        /// <param name="siteMapNodeEditUserId">Initial value of the SiteMapNodeEditUserId property.</param>
        /// <param name="siteMapNodeShow">Initial value of the SiteMapNodeShow property.</param>
        /// <param name="siteMapNodeAddedDate">Initial value of the SiteMapNodeAddedDate property.</param>
        /// <param name="siteMapNodeEditDate">Initial value of the SiteMapNodeEditDate property.</param>
        /// <param name="siteMapNodeSort">Initial value of the SiteMapNodeSort property.</param>
        public static SW_SiteMapNode CreateSW_SiteMapNode(global::System.Int32 siteMapNodeId, global::System.String siteMapNodePath, global::System.Guid siteMapNodeAddedUserId, global::System.Guid siteMapNodeEditUserId, global::System.Boolean siteMapNodeShow, global::System.DateTime siteMapNodeAddedDate, global::System.DateTime siteMapNodeEditDate, global::System.Int32 siteMapNodeSort)
        {
            SW_SiteMapNode sW_SiteMapNode = new SW_SiteMapNode();
            sW_SiteMapNode.SiteMapNodeId = siteMapNodeId;
            sW_SiteMapNode.SiteMapNodePath = siteMapNodePath;
            sW_SiteMapNode.SiteMapNodeAddedUserId = siteMapNodeAddedUserId;
            sW_SiteMapNode.SiteMapNodeEditUserId = siteMapNodeEditUserId;
            sW_SiteMapNode.SiteMapNodeShow = siteMapNodeShow;
            sW_SiteMapNode.SiteMapNodeAddedDate = siteMapNodeAddedDate;
            sW_SiteMapNode.SiteMapNodeEditDate = siteMapNodeEditDate;
            sW_SiteMapNode.SiteMapNodeSort = siteMapNodeSort;
            return sW_SiteMapNode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteMapNodeId
        {
            get
            {
                return _SiteMapNodeId;
            }
            set
            {
                if (_SiteMapNodeId != value)
                {
                    OnSiteMapNodeIdChanging(value);
                    ReportPropertyChanging("SiteMapNodeId");
                    _SiteMapNodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteMapNodeId");
                    OnSiteMapNodeIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteMapNodeId;
        partial void OnSiteMapNodeIdChanging(global::System.Int32 value);
        partial void OnSiteMapNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SiteMapNodePath
        {
            get
            {
                return _SiteMapNodePath;
            }
            set
            {
                OnSiteMapNodePathChanging(value);
                ReportPropertyChanging("SiteMapNodePath");
                _SiteMapNodePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SiteMapNodePath");
                OnSiteMapNodePathChanged();
            }
        }
        private global::System.String _SiteMapNodePath;
        partial void OnSiteMapNodePathChanging(global::System.String value);
        partial void OnSiteMapNodePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SiteMapNodeAddedUserId
        {
            get
            {
                return _SiteMapNodeAddedUserId;
            }
            set
            {
                OnSiteMapNodeAddedUserIdChanging(value);
                ReportPropertyChanging("SiteMapNodeAddedUserId");
                _SiteMapNodeAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeAddedUserId");
                OnSiteMapNodeAddedUserIdChanged();
            }
        }
        private global::System.Guid _SiteMapNodeAddedUserId;
        partial void OnSiteMapNodeAddedUserIdChanging(global::System.Guid value);
        partial void OnSiteMapNodeAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SiteMapNodeEditUserId
        {
            get
            {
                return _SiteMapNodeEditUserId;
            }
            set
            {
                OnSiteMapNodeEditUserIdChanging(value);
                ReportPropertyChanging("SiteMapNodeEditUserId");
                _SiteMapNodeEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeEditUserId");
                OnSiteMapNodeEditUserIdChanged();
            }
        }
        private global::System.Guid _SiteMapNodeEditUserId;
        partial void OnSiteMapNodeEditUserIdChanging(global::System.Guid value);
        partial void OnSiteMapNodeEditUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SiteMapNodeSubId
        {
            get
            {
                return _SiteMapNodeSubId;
            }
            set
            {
                OnSiteMapNodeSubIdChanging(value);
                ReportPropertyChanging("SiteMapNodeSubId");
                _SiteMapNodeSubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeSubId");
                OnSiteMapNodeSubIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SiteMapNodeSubId;
        partial void OnSiteMapNodeSubIdChanging(Nullable<global::System.Int32> value);
        partial void OnSiteMapNodeSubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SiteMapNodeShow
        {
            get
            {
                return _SiteMapNodeShow;
            }
            set
            {
                OnSiteMapNodeShowChanging(value);
                ReportPropertyChanging("SiteMapNodeShow");
                _SiteMapNodeShow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeShow");
                OnSiteMapNodeShowChanged();
            }
        }
        private global::System.Boolean _SiteMapNodeShow;
        partial void OnSiteMapNodeShowChanging(global::System.Boolean value);
        partial void OnSiteMapNodeShowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SiteMapNodeAddedDate
        {
            get
            {
                return _SiteMapNodeAddedDate;
            }
            set
            {
                OnSiteMapNodeAddedDateChanging(value);
                ReportPropertyChanging("SiteMapNodeAddedDate");
                _SiteMapNodeAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeAddedDate");
                OnSiteMapNodeAddedDateChanged();
            }
        }
        private global::System.DateTime _SiteMapNodeAddedDate;
        partial void OnSiteMapNodeAddedDateChanging(global::System.DateTime value);
        partial void OnSiteMapNodeAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SiteMapNodeEditDate
        {
            get
            {
                return _SiteMapNodeEditDate;
            }
            set
            {
                OnSiteMapNodeEditDateChanging(value);
                ReportPropertyChanging("SiteMapNodeEditDate");
                _SiteMapNodeEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeEditDate");
                OnSiteMapNodeEditDateChanged();
            }
        }
        private global::System.DateTime _SiteMapNodeEditDate;
        partial void OnSiteMapNodeEditDateChanging(global::System.DateTime value);
        partial void OnSiteMapNodeEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteMapNodeSort
        {
            get
            {
                return _SiteMapNodeSort;
            }
            set
            {
                OnSiteMapNodeSortChanging(value);
                ReportPropertyChanging("SiteMapNodeSort");
                _SiteMapNodeSort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeSort");
                OnSiteMapNodeSortChanged();
            }
        }
        private global::System.Int32 _SiteMapNodeSort;
        partial void OnSiteMapNodeSortChanging(global::System.Int32 value);
        partial void OnSiteMapNodeSortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteMapNodeRewriteToUrl
        {
            get
            {
                return _SiteMapNodeRewriteToUrl;
            }
            set
            {
                OnSiteMapNodeRewriteToUrlChanging(value);
                ReportPropertyChanging("SiteMapNodeRewriteToUrl");
                _SiteMapNodeRewriteToUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteMapNodeRewriteToUrl");
                OnSiteMapNodeRewriteToUrlChanged();
            }
        }
        private global::System.String _SiteMapNodeRewriteToUrl;
        partial void OnSiteMapNodeRewriteToUrlChanging(global::System.String value);
        partial void OnSiteMapNodeRewriteToUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteMapNodeIconUrl
        {
            get
            {
                return _SiteMapNodeIconUrl;
            }
            set
            {
                OnSiteMapNodeIconUrlChanging(value);
                ReportPropertyChanging("SiteMapNodeIconUrl");
                _SiteMapNodeIconUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteMapNodeIconUrl");
                OnSiteMapNodeIconUrlChanged();
            }
        }
        private global::System.String _SiteMapNodeIconUrl;
        partial void OnSiteMapNodeIconUrlChanging(global::System.String value);
        partial void OnSiteMapNodeIconUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMap_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMap_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMap_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNodeData")]
        public EntityCollection<SW_SiteMapNodeData> SW_SiteMapNodeData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeData>("Searchwar_netModel.FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNodeData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeData>("Searchwar_netModel.FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNodeData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNodeMetaTag")]
        public SW_SiteMapNodeMetaTag SW_SiteMapNodeMetaTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNodeMetaTag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNodeMetaTag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTagsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNodeMetaTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNodeMetaTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNodeRole")]
        public EntityCollection<SW_SiteMapNodeRole> SW_SiteMapNodeRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeRole>("Searchwar_netModel.FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNodeRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeRole>("Searchwar_netModel.FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNodeRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SiteMapNodeData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SiteMapNodeData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SiteMapNodeData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="siteMapNodeId">Initial value of the SiteMapNodeId property.</param>
        public static SW_SiteMapNodeData CreateSW_SiteMapNodeData(global::System.Int32 langId, global::System.Int32 siteMapNodeId)
        {
            SW_SiteMapNodeData sW_SiteMapNodeData = new SW_SiteMapNodeData();
            sW_SiteMapNodeData.LangId = langId;
            sW_SiteMapNodeData.SiteMapNodeId = siteMapNodeId;
            return sW_SiteMapNodeData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteMapNodeId
        {
            get
            {
                return _SiteMapNodeId;
            }
            set
            {
                if (_SiteMapNodeId != value)
                {
                    OnSiteMapNodeIdChanging(value);
                    ReportPropertyChanging("SiteMapNodeId");
                    _SiteMapNodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteMapNodeId");
                    OnSiteMapNodeIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteMapNodeId;
        partial void OnSiteMapNodeIdChanging(global::System.Int32 value);
        partial void OnSiteMapNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteMapNodeTitle
        {
            get
            {
                return _SiteMapNodeTitle;
            }
            set
            {
                OnSiteMapNodeTitleChanging(value);
                ReportPropertyChanging("SiteMapNodeTitle");
                _SiteMapNodeTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteMapNodeTitle");
                OnSiteMapNodeTitleChanged();
            }
        }
        private global::System.String _SiteMapNodeTitle;
        partial void OnSiteMapNodeTitleChanging(global::System.String value);
        partial void OnSiteMapNodeTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteMapNodeRewriteRegex
        {
            get
            {
                return _SiteMapNodeRewriteRegex;
            }
            set
            {
                OnSiteMapNodeRewriteRegexChanging(value);
                ReportPropertyChanging("SiteMapNodeRewriteRegex");
                _SiteMapNodeRewriteRegex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteMapNodeRewriteRegex");
                OnSiteMapNodeRewriteRegexChanged();
            }
        }
        private global::System.String _SiteMapNodeRewriteRegex;
        partial void OnSiteMapNodeRewriteRegexChanging(global::System.String value);
        partial void OnSiteMapNodeRewriteRegexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteMapNodeRewriteUrl
        {
            get
            {
                return _SiteMapNodeRewriteUrl;
            }
            set
            {
                OnSiteMapNodeRewriteUrlChanging(value);
                ReportPropertyChanging("SiteMapNodeRewriteUrl");
                _SiteMapNodeRewriteUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteMapNodeRewriteUrl");
                OnSiteMapNodeRewriteUrlChanged();
            }
        }
        private global::System.String _SiteMapNodeRewriteUrl;
        partial void OnSiteMapNodeRewriteUrlChanging(global::System.String value);
        partial void OnSiteMapNodeRewriteUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapData_SW_Lang", "SW_Lang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNode")]
        public SW_SiteMapNode SW_SiteMapNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SiteMapNode> SW_SiteMapNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapData_SW_SiteMap", "SW_SiteMapNode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SiteMapNodeMetaTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SiteMapNodeMetaTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SiteMapNodeMetaTag object.
        /// </summary>
        /// <param name="metaTagsId">Initial value of the MetaTagsId property.</param>
        /// <param name="metaTagsAddedUserId">Initial value of the MetaTagsAddedUserId property.</param>
        /// <param name="metaTagsEditUserId">Initial value of the MetaTagsEditUserId property.</param>
        /// <param name="metaTagsEditDate">Initial value of the MetaTagsEditDate property.</param>
        /// <param name="metaTagsAddedDate">Initial value of the MetaTagsAddedDate property.</param>
        public static SW_SiteMapNodeMetaTag CreateSW_SiteMapNodeMetaTag(global::System.Int32 metaTagsId, global::System.Guid metaTagsAddedUserId, global::System.Guid metaTagsEditUserId, global::System.DateTime metaTagsEditDate, global::System.DateTime metaTagsAddedDate)
        {
            SW_SiteMapNodeMetaTag sW_SiteMapNodeMetaTag = new SW_SiteMapNodeMetaTag();
            sW_SiteMapNodeMetaTag.MetaTagsId = metaTagsId;
            sW_SiteMapNodeMetaTag.MetaTagsAddedUserId = metaTagsAddedUserId;
            sW_SiteMapNodeMetaTag.MetaTagsEditUserId = metaTagsEditUserId;
            sW_SiteMapNodeMetaTag.MetaTagsEditDate = metaTagsEditDate;
            sW_SiteMapNodeMetaTag.MetaTagsAddedDate = metaTagsAddedDate;
            return sW_SiteMapNodeMetaTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaTagsId
        {
            get
            {
                return _MetaTagsId;
            }
            set
            {
                if (_MetaTagsId != value)
                {
                    OnMetaTagsIdChanging(value);
                    ReportPropertyChanging("MetaTagsId");
                    _MetaTagsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaTagsId");
                    OnMetaTagsIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaTagsId;
        partial void OnMetaTagsIdChanging(global::System.Int32 value);
        partial void OnMetaTagsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MetaTagsAddedUserId
        {
            get
            {
                return _MetaTagsAddedUserId;
            }
            set
            {
                OnMetaTagsAddedUserIdChanging(value);
                ReportPropertyChanging("MetaTagsAddedUserId");
                _MetaTagsAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaTagsAddedUserId");
                OnMetaTagsAddedUserIdChanged();
            }
        }
        private global::System.Guid _MetaTagsAddedUserId;
        partial void OnMetaTagsAddedUserIdChanging(global::System.Guid value);
        partial void OnMetaTagsAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MetaTagsEditUserId
        {
            get
            {
                return _MetaTagsEditUserId;
            }
            set
            {
                OnMetaTagsEditUserIdChanging(value);
                ReportPropertyChanging("MetaTagsEditUserId");
                _MetaTagsEditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaTagsEditUserId");
                OnMetaTagsEditUserIdChanged();
            }
        }
        private global::System.Guid _MetaTagsEditUserId;
        partial void OnMetaTagsEditUserIdChanging(global::System.Guid value);
        partial void OnMetaTagsEditUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MetaTagsEditDate
        {
            get
            {
                return _MetaTagsEditDate;
            }
            set
            {
                OnMetaTagsEditDateChanging(value);
                ReportPropertyChanging("MetaTagsEditDate");
                _MetaTagsEditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaTagsEditDate");
                OnMetaTagsEditDateChanged();
            }
        }
        private global::System.DateTime _MetaTagsEditDate;
        partial void OnMetaTagsEditDateChanging(global::System.DateTime value);
        partial void OnMetaTagsEditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MetaTagsAddedDate
        {
            get
            {
                return _MetaTagsAddedDate;
            }
            set
            {
                OnMetaTagsAddedDateChanging(value);
                ReportPropertyChanging("MetaTagsAddedDate");
                _MetaTagsAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetaTagsAddedDate");
                OnMetaTagsAddedDateChanged();
            }
        }
        private global::System.DateTime _MetaTagsAddedDate;
        partial void OnMetaTagsAddedDateChanging(global::System.DateTime value);
        partial void OnMetaTagsAddedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_aspnet_Users1", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users1", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users1", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users1", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Searchwar_netModel.FK_SW_SiteMapMetaTags_aspnet_Users1", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTagsData")]
        public EntityCollection<SW_SiteMapNodeMetaTagsData> SW_SiteMapNodeMetaTagsData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SW_SiteMapNodeMetaTagsData>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTagsData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SW_SiteMapNodeMetaTagsData>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTagsData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNode")]
        public SW_SiteMapNode SW_SiteMapNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SiteMapNode> SW_SiteMapNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapMetaTags_SW_SiteMap", "SW_SiteMapNode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SiteMapNodeMetaTagsData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SiteMapNodeMetaTagsData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SiteMapNodeMetaTagsData object.
        /// </summary>
        /// <param name="langId">Initial value of the LangId property.</param>
        /// <param name="metaTagsId">Initial value of the MetaTagsId property.</param>
        public static SW_SiteMapNodeMetaTagsData CreateSW_SiteMapNodeMetaTagsData(global::System.Int32 langId, global::System.Int32 metaTagsId)
        {
            SW_SiteMapNodeMetaTagsData sW_SiteMapNodeMetaTagsData = new SW_SiteMapNodeMetaTagsData();
            sW_SiteMapNodeMetaTagsData.LangId = langId;
            sW_SiteMapNodeMetaTagsData.MetaTagsId = metaTagsId;
            return sW_SiteMapNodeMetaTagsData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LangId
        {
            get
            {
                return _LangId;
            }
            set
            {
                if (_LangId != value)
                {
                    OnLangIdChanging(value);
                    ReportPropertyChanging("LangId");
                    _LangId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangId");
                    OnLangIdChanged();
                }
            }
        }
        private global::System.Int32 _LangId;
        partial void OnLangIdChanging(global::System.Int32 value);
        partial void OnLangIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaTagsId
        {
            get
            {
                return _MetaTagsId;
            }
            set
            {
                if (_MetaTagsId != value)
                {
                    OnMetaTagsIdChanging(value);
                    ReportPropertyChanging("MetaTagsId");
                    _MetaTagsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaTagsId");
                    OnMetaTagsIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaTagsId;
        partial void OnMetaTagsIdChanging(global::System.Int32 value);
        partial void OnMetaTagsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsTitle
        {
            get
            {
                return _MetaTagsTitle;
            }
            set
            {
                OnMetaTagsTitleChanging(value);
                ReportPropertyChanging("MetaTagsTitle");
                _MetaTagsTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsTitle");
                OnMetaTagsTitleChanged();
            }
        }
        private global::System.String _MetaTagsTitle;
        partial void OnMetaTagsTitleChanging(global::System.String value);
        partial void OnMetaTagsTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsDescription
        {
            get
            {
                return _MetaTagsDescription;
            }
            set
            {
                OnMetaTagsDescriptionChanging(value);
                ReportPropertyChanging("MetaTagsDescription");
                _MetaTagsDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsDescription");
                OnMetaTagsDescriptionChanged();
            }
        }
        private global::System.String _MetaTagsDescription;
        partial void OnMetaTagsDescriptionChanging(global::System.String value);
        partial void OnMetaTagsDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsKeywords
        {
            get
            {
                return _MetaTagsKeywords;
            }
            set
            {
                OnMetaTagsKeywordsChanging(value);
                ReportPropertyChanging("MetaTagsKeywords");
                _MetaTagsKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsKeywords");
                OnMetaTagsKeywordsChanged();
            }
        }
        private global::System.String _MetaTagsKeywords;
        partial void OnMetaTagsKeywordsChanging(global::System.String value);
        partial void OnMetaTagsKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsLanguage
        {
            get
            {
                return _MetaTagsLanguage;
            }
            set
            {
                OnMetaTagsLanguageChanging(value);
                ReportPropertyChanging("MetaTagsLanguage");
                _MetaTagsLanguage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsLanguage");
                OnMetaTagsLanguageChanged();
            }
        }
        private global::System.String _MetaTagsLanguage;
        partial void OnMetaTagsLanguageChanging(global::System.String value);
        partial void OnMetaTagsLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsAuthor
        {
            get
            {
                return _MetaTagsAuthor;
            }
            set
            {
                OnMetaTagsAuthorChanging(value);
                ReportPropertyChanging("MetaTagsAuthor");
                _MetaTagsAuthor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsAuthor");
                OnMetaTagsAuthorChanged();
            }
        }
        private global::System.String _MetaTagsAuthor;
        partial void OnMetaTagsAuthorChanging(global::System.String value);
        partial void OnMetaTagsAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsPublisher
        {
            get
            {
                return _MetaTagsPublisher;
            }
            set
            {
                OnMetaTagsPublisherChanging(value);
                ReportPropertyChanging("MetaTagsPublisher");
                _MetaTagsPublisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsPublisher");
                OnMetaTagsPublisherChanged();
            }
        }
        private global::System.String _MetaTagsPublisher;
        partial void OnMetaTagsPublisherChanging(global::System.String value);
        partial void OnMetaTagsPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsCopyright
        {
            get
            {
                return _MetaTagsCopyright;
            }
            set
            {
                OnMetaTagsCopyrightChanging(value);
                ReportPropertyChanging("MetaTagsCopyright");
                _MetaTagsCopyright = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsCopyright");
                OnMetaTagsCopyrightChanged();
            }
        }
        private global::System.String _MetaTagsCopyright;
        partial void OnMetaTagsCopyrightChanging(global::System.String value);
        partial void OnMetaTagsCopyrightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsRevisitAfter
        {
            get
            {
                return _MetaTagsRevisitAfter;
            }
            set
            {
                OnMetaTagsRevisitAfterChanging(value);
                ReportPropertyChanging("MetaTagsRevisitAfter");
                _MetaTagsRevisitAfter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsRevisitAfter");
                OnMetaTagsRevisitAfterChanged();
            }
        }
        private global::System.String _MetaTagsRevisitAfter;
        partial void OnMetaTagsRevisitAfterChanging(global::System.String value);
        partial void OnMetaTagsRevisitAfterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsRobots
        {
            get
            {
                return _MetaTagsRobots;
            }
            set
            {
                OnMetaTagsRobotsChanging(value);
                ReportPropertyChanging("MetaTagsRobots");
                _MetaTagsRobots = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsRobots");
                OnMetaTagsRobotsChanged();
            }
        }
        private global::System.String _MetaTagsRobots;
        partial void OnMetaTagsRobotsChanging(global::System.String value);
        partial void OnMetaTagsRobotsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsCache
        {
            get
            {
                return _MetaTagsCache;
            }
            set
            {
                OnMetaTagsCacheChanging(value);
                ReportPropertyChanging("MetaTagsCache");
                _MetaTagsCache = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsCache");
                OnMetaTagsCacheChanged();
            }
        }
        private global::System.String _MetaTagsCache;
        partial void OnMetaTagsCacheChanging(global::System.String value);
        partial void OnMetaTagsCacheChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTagsCacheControl
        {
            get
            {
                return _MetaTagsCacheControl;
            }
            set
            {
                OnMetaTagsCacheControlChanging(value);
                ReportPropertyChanging("MetaTagsCacheControl");
                _MetaTagsCacheControl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTagsCacheControl");
                OnMetaTagsCacheControlChanged();
            }
        }
        private global::System.String _MetaTagsCacheControl;
        partial void OnMetaTagsCacheControlChanging(global::System.String value);
        partial void OnMetaTagsCacheControlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_Lang")]
        public SW_Lang SW_Lang
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_Lang").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_Lang").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_Lang> SW_LangReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_Lang");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_Lang>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_Lang", "SW_Lang", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTags")]
        public SW_SiteMapNodeMetaTag SW_SiteMapNodeMetaTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTagsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SiteMapNodeMetaTag>("Searchwar_netModel.FK_SW_SiteMapMetaTagsData_SW_SiteMapMetaTags", "SW_SiteMapNodeMetaTags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="SW_SiteMapNodeRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SW_SiteMapNodeRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SW_SiteMapNodeRole object.
        /// </summary>
        /// <param name="siteMapNodeRoleId">Initial value of the SiteMapNodeRoleId property.</param>
        /// <param name="siteMapNodeId">Initial value of the SiteMapNodeId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="siteMapNodeRoleAddedUserId">Initial value of the SiteMapNodeRoleAddedUserId property.</param>
        /// <param name="siteMapNodeRoleAddedDate">Initial value of the SiteMapNodeRoleAddedDate property.</param>
        public static SW_SiteMapNodeRole CreateSW_SiteMapNodeRole(global::System.Int32 siteMapNodeRoleId, global::System.Int32 siteMapNodeId, global::System.Guid roleId, global::System.Guid siteMapNodeRoleAddedUserId, global::System.DateTime siteMapNodeRoleAddedDate)
        {
            SW_SiteMapNodeRole sW_SiteMapNodeRole = new SW_SiteMapNodeRole();
            sW_SiteMapNodeRole.SiteMapNodeRoleId = siteMapNodeRoleId;
            sW_SiteMapNodeRole.SiteMapNodeId = siteMapNodeId;
            sW_SiteMapNodeRole.RoleId = roleId;
            sW_SiteMapNodeRole.SiteMapNodeRoleAddedUserId = siteMapNodeRoleAddedUserId;
            sW_SiteMapNodeRole.SiteMapNodeRoleAddedDate = siteMapNodeRoleAddedDate;
            return sW_SiteMapNodeRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteMapNodeRoleId
        {
            get
            {
                return _SiteMapNodeRoleId;
            }
            set
            {
                if (_SiteMapNodeRoleId != value)
                {
                    OnSiteMapNodeRoleIdChanging(value);
                    ReportPropertyChanging("SiteMapNodeRoleId");
                    _SiteMapNodeRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteMapNodeRoleId");
                    OnSiteMapNodeRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteMapNodeRoleId;
        partial void OnSiteMapNodeRoleIdChanging(global::System.Int32 value);
        partial void OnSiteMapNodeRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteMapNodeId
        {
            get
            {
                return _SiteMapNodeId;
            }
            set
            {
                OnSiteMapNodeIdChanging(value);
                ReportPropertyChanging("SiteMapNodeId");
                _SiteMapNodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeId");
                OnSiteMapNodeIdChanged();
            }
        }
        private global::System.Int32 _SiteMapNodeId;
        partial void OnSiteMapNodeIdChanging(global::System.Int32 value);
        partial void OnSiteMapNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SiteMapNodeRoleAddedUserId
        {
            get
            {
                return _SiteMapNodeRoleAddedUserId;
            }
            set
            {
                OnSiteMapNodeRoleAddedUserIdChanging(value);
                ReportPropertyChanging("SiteMapNodeRoleAddedUserId");
                _SiteMapNodeRoleAddedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeRoleAddedUserId");
                OnSiteMapNodeRoleAddedUserIdChanged();
            }
        }
        private global::System.Guid _SiteMapNodeRoleAddedUserId;
        partial void OnSiteMapNodeRoleAddedUserIdChanging(global::System.Guid value);
        partial void OnSiteMapNodeRoleAddedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SiteMapNodeRoleAddedDate
        {
            get
            {
                return _SiteMapNodeRoleAddedDate;
            }
            set
            {
                OnSiteMapNodeRoleAddedDateChanging(value);
                ReportPropertyChanging("SiteMapNodeRoleAddedDate");
                _SiteMapNodeRoleAddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteMapNodeRoleAddedDate");
                OnSiteMapNodeRoleAddedDateChanged();
            }
        }
        private global::System.DateTime _SiteMapNodeRoleAddedDate;
        partial void OnSiteMapNodeRoleAddedDateChanging(global::System.DateTime value);
        partial void OnSiteMapNodeRoleAddedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapRoles_aspnet_Roles", "aspnet_Roles")]
        public aspnet_Role aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Role>("Searchwar_netModel.FK_SW_SiteMapRoles_aspnet_Roles", "aspnet_Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Role>("Searchwar_netModel.FK_SW_SiteMapRoles_aspnet_Roles", "aspnet_Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Role> aspnet_RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Role>("Searchwar_netModel.FK_SW_SiteMapRoles_aspnet_Roles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Role>("Searchwar_netModel.FK_SW_SiteMapRoles_aspnet_Roles", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Searchwar_netModel", "FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNode")]
        public SW_SiteMapNode SW_SiteMapNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SW_SiteMapNode> SW_SiteMapNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SW_SiteMapNode>("Searchwar_netModel.FK_SW_SiteMapRoles_SW_SiteMap", "SW_SiteMapNode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static vw_aspnet_Applications Createvw_aspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            vw_aspnet_Applications vw_aspnet_Applications = new vw_aspnet_Applications();
            vw_aspnet_Applications.ApplicationName = applicationName;
            vw_aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            vw_aspnet_Applications.ApplicationId = applicationId;
            return vw_aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                if (_LoweredApplicationName != value)
                {
                    OnLoweredApplicationNameChanging(value);
                    ReportPropertyChanging("LoweredApplicationName");
                    _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredApplicationName");
                    OnLoweredApplicationNameChanged();
                }
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_MembershipUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_MembershipUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_MembershipUsers object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_MembershipUsers Createvw_aspnet_MembershipUsers(global::System.Guid userId, global::System.Int32 passwordFormat, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart, global::System.Guid applicationId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers = new vw_aspnet_MembershipUsers();
            vw_aspnet_MembershipUsers.UserId = userId;
            vw_aspnet_MembershipUsers.PasswordFormat = passwordFormat;
            vw_aspnet_MembershipUsers.IsApproved = isApproved;
            vw_aspnet_MembershipUsers.IsLockedOut = isLockedOut;
            vw_aspnet_MembershipUsers.CreateDate = createDate;
            vw_aspnet_MembershipUsers.LastLoginDate = lastLoginDate;
            vw_aspnet_MembershipUsers.LastPasswordChangedDate = lastPasswordChangedDate;
            vw_aspnet_MembershipUsers.LastLockoutDate = lastLockoutDate;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            vw_aspnet_MembershipUsers.ApplicationId = applicationId;
            vw_aspnet_MembershipUsers.UserName = userName;
            vw_aspnet_MembershipUsers.IsAnonymous = isAnonymous;
            vw_aspnet_MembershipUsers.LastActivityDate = lastActivityDate;
            return vw_aspnet_MembershipUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                if (_PasswordFormat != value)
                {
                    OnPasswordFormatChanging(value);
                    ReportPropertyChanging("PasswordFormat");
                    _PasswordFormat = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PasswordFormat");
                    OnPasswordFormatChanged();
                }
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                if (_IsApproved != value)
                {
                    OnIsApprovedChanging(value);
                    ReportPropertyChanging("IsApproved");
                    _IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                if (_IsLockedOut != value)
                {
                    OnIsLockedOutChanging(value);
                    ReportPropertyChanging("IsLockedOut");
                    _IsLockedOut = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsLockedOut");
                    OnIsLockedOutChanged();
                }
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                if (_CreateDate != value)
                {
                    OnCreateDateChanging(value);
                    ReportPropertyChanging("CreateDate");
                    _CreateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    ReportPropertyChanging("LastLoginDate");
                    _LastLoginDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                if (_LastPasswordChangedDate != value)
                {
                    OnLastPasswordChangedDateChanging(value);
                    ReportPropertyChanging("LastPasswordChangedDate");
                    _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPasswordChangedDate");
                    OnLastPasswordChangedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                if (_LastLockoutDate != value)
                {
                    OnLastLockoutDateChanging(value);
                    ReportPropertyChanging("LastLockoutDate");
                    _LastLockoutDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLockoutDate");
                    OnLastLockoutDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                if (_FailedPasswordAttemptCount != value)
                {
                    OnFailedPasswordAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptCount");
                    _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptCount");
                    OnFailedPasswordAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAttemptWindowStart != value)
                {
                    OnFailedPasswordAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                    _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                    OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptCount != value)
                {
                    OnFailedPasswordAnswerAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                    _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                    OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptWindowStart != value)
                {
                    OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                    _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                    OnFailedPasswordAnswerAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_Profiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Profiles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Profiles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_Profiles Createvw_aspnet_Profiles(global::System.Guid userId, global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_Profiles vw_aspnet_Profiles = new vw_aspnet_Profiles();
            vw_aspnet_Profiles.UserId = userId;
            vw_aspnet_Profiles.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_Profiles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static vw_aspnet_Roles Createvw_aspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            vw_aspnet_Roles vw_aspnet_Roles = new vw_aspnet_Roles();
            vw_aspnet_Roles.ApplicationId = applicationId;
            vw_aspnet_Roles.RoleId = roleId;
            vw_aspnet_Roles.RoleName = roleName;
            vw_aspnet_Roles.LoweredRoleName = loweredRoleName;
            return vw_aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                if (_LoweredRoleName != value)
                {
                    OnLoweredRoleNameChanging(value);
                    ReportPropertyChanging("LoweredRoleName");
                    _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredRoleName");
                    OnLoweredRoleNameChanged();
                }
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_Users Createvw_aspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_Users vw_aspnet_Users = new vw_aspnet_Users();
            vw_aspnet_Users.ApplicationId = applicationId;
            vw_aspnet_Users.UserId = userId;
            vw_aspnet_Users.UserName = userName;
            vw_aspnet_Users.LoweredUserName = loweredUserName;
            vw_aspnet_Users.IsAnonymous = isAnonymous;
            vw_aspnet_Users.LastActivityDate = lastActivityDate;
            return vw_aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                if (_LoweredUserName != value)
                {
                    OnLoweredUserNameChanging(value);
                    ReportPropertyChanging("LoweredUserName");
                    _LoweredUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredUserName");
                    OnLoweredUserNameChanged();
                }
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_UsersInRoles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static vw_aspnet_UsersInRoles Createvw_aspnet_UsersInRoles(global::System.Guid userId, global::System.Guid roleId)
        {
            vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles = new vw_aspnet_UsersInRoles();
            vw_aspnet_UsersInRoles.UserId = userId;
            vw_aspnet_UsersInRoles.RoleId = roleId;
            return vw_aspnet_UsersInRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_WebPartState_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static vw_aspnet_WebPartState_Paths Createvw_aspnet_WebPartState_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            vw_aspnet_WebPartState_Paths vw_aspnet_WebPartState_Paths = new vw_aspnet_WebPartState_Paths();
            vw_aspnet_WebPartState_Paths.ApplicationId = applicationId;
            vw_aspnet_WebPartState_Paths.PathId = pathId;
            vw_aspnet_WebPartState_Paths.Path = path;
            vw_aspnet_WebPartState_Paths.LoweredPath = loweredPath;
            return vw_aspnet_WebPartState_Paths;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                if (_Path != value)
                {
                    OnPathChanging(value);
                    ReportPropertyChanging("Path");
                    _Path = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Path");
                    OnPathChanged();
                }
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                if (_LoweredPath != value)
                {
                    OnLoweredPathChanging(value);
                    ReportPropertyChanging("LoweredPath");
                    _LoweredPath = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredPath");
                    OnLoweredPathChanged();
                }
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_WebPartState_Shared")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_Shared : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_Shared object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_WebPartState_Shared Createvw_aspnet_WebPartState_Shared(global::System.Guid pathId, global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_WebPartState_Shared vw_aspnet_WebPartState_Shared = new vw_aspnet_WebPartState_Shared();
            vw_aspnet_WebPartState_Shared.PathId = pathId;
            vw_aspnet_WebPartState_Shared.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_WebPartState_Shared;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Searchwar_netModel", Name="vw_aspnet_WebPartState_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_User object.
        /// </summary>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_WebPartState_User Createvw_aspnet_WebPartState_User(global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_WebPartState_User vw_aspnet_WebPartState_User = new vw_aspnet_WebPartState_User();
            vw_aspnet_WebPartState_User.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_WebPartState_User;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
    }

    #endregion
    
}
