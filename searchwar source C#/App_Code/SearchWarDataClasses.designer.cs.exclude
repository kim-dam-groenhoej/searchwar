#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Searchwar_net")]
public partial class Searchwar_netEntities : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertaspnet_Application(aspnet_Application instance);
  partial void Updateaspnet_Application(aspnet_Application instance);
  partial void Deleteaspnet_Application(aspnet_Application instance);
  partial void InsertSW_SiteMapNodeRole(SW_SiteMapNodeRole instance);
  partial void UpdateSW_SiteMapNodeRole(SW_SiteMapNodeRole instance);
  partial void DeleteSW_SiteMapNodeRole(SW_SiteMapNodeRole instance);
  partial void Insertaspnet_Membership(aspnet_Membership instance);
  partial void Updateaspnet_Membership(aspnet_Membership instance);
  partial void Deleteaspnet_Membership(aspnet_Membership instance);
  partial void Insertaspnet_Path(aspnet_Path instance);
  partial void Updateaspnet_Path(aspnet_Path instance);
  partial void Deleteaspnet_Path(aspnet_Path instance);
  partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Insertaspnet_Profile(aspnet_Profile instance);
  partial void Updateaspnet_Profile(aspnet_Profile instance);
  partial void Deleteaspnet_Profile(aspnet_Profile instance);
  partial void Insertaspnet_Role(aspnet_Role instance);
  partial void Updateaspnet_Role(aspnet_Role instance);
  partial void Deleteaspnet_Role(aspnet_Role instance);
  partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void InsertSW_Advertise(SW_Advertise instance);
  partial void UpdateSW_Advertise(SW_Advertise instance);
  partial void DeleteSW_Advertise(SW_Advertise instance);
  partial void InsertSW_AdvertiseCompany(SW_AdvertiseCompany instance);
  partial void UpdateSW_AdvertiseCompany(SW_AdvertiseCompany instance);
  partial void DeleteSW_AdvertiseCompany(SW_AdvertiseCompany instance);
  partial void InsertSW_AdvertisePlace(SW_AdvertisePlace instance);
  partial void UpdateSW_AdvertisePlace(SW_AdvertisePlace instance);
  partial void DeleteSW_AdvertisePlace(SW_AdvertisePlace instance);
  partial void InsertSW_Banlist(SW_Banlist instance);
  partial void UpdateSW_Banlist(SW_Banlist instance);
  partial void DeleteSW_Banlist(SW_Banlist instance);
  partial void InsertSW_Faq(SW_Faq instance);
  partial void UpdateSW_Faq(SW_Faq instance);
  partial void DeleteSW_Faq(SW_Faq instance);
  partial void InsertSW_FaqData(SW_FaqData instance);
  partial void UpdateSW_FaqData(SW_FaqData instance);
  partial void DeleteSW_FaqData(SW_FaqData instance);
  partial void InsertSW_SearchWarContinentData(SW_SearchWarContinentData instance);
  partial void UpdateSW_SearchWarContinentData(SW_SearchWarContinentData instance);
  partial void DeleteSW_SearchWarContinentData(SW_SearchWarContinentData instance);
  partial void InsertSW_SearchWarCountry(SW_SearchWarCountry instance);
  partial void UpdateSW_SearchWarCountry(SW_SearchWarCountry instance);
  partial void DeleteSW_SearchWarCountry(SW_SearchWarCountry instance);
  partial void InsertSW_SearchWarCountryData(SW_SearchWarCountryData instance);
  partial void UpdateSW_SearchWarCountryData(SW_SearchWarCountryData instance);
  partial void DeleteSW_SearchWarCountryData(SW_SearchWarCountryData instance);
  partial void InsertSW_SearchWarGame(SW_SearchWarGame instance);
  partial void UpdateSW_SearchWarGame(SW_SearchWarGame instance);
  partial void DeleteSW_SearchWarGame(SW_SearchWarGame instance);
  partial void InsertSW_SearchWarGameType(SW_SearchWarGameType instance);
  partial void UpdateSW_SearchWarGameType(SW_SearchWarGameType instance);
  partial void DeleteSW_SearchWarGameType(SW_SearchWarGameType instance);
  partial void InsertSW_SearchWarPlayer(SW_SearchWarPlayer instance);
  partial void UpdateSW_SearchWarPlayer(SW_SearchWarPlayer instance);
  partial void DeleteSW_SearchWarPlayer(SW_SearchWarPlayer instance);
  partial void InsertSW_SearchWarSkill(SW_SearchWarSkill instance);
  partial void UpdateSW_SearchWarSkill(SW_SearchWarSkill instance);
  partial void DeleteSW_SearchWarSkill(SW_SearchWarSkill instance);
  partial void InsertSW_SiteMapNodeMetaTag(SW_SiteMapNodeMetaTag instance);
  partial void UpdateSW_SiteMapNodeMetaTag(SW_SiteMapNodeMetaTag instance);
  partial void DeleteSW_SiteMapNodeMetaTag(SW_SiteMapNodeMetaTag instance);
  partial void InsertSW_SiteMapNodeMetaTagsData(SW_SiteMapNodeMetaTagsData instance);
  partial void UpdateSW_SiteMapNodeMetaTagsData(SW_SiteMapNodeMetaTagsData instance);
  partial void DeleteSW_SiteMapNodeMetaTagsData(SW_SiteMapNodeMetaTagsData instance);
  partial void InsertSW_Blog(SW_Blog instance);
  partial void UpdateSW_Blog(SW_Blog instance);
  partial void DeleteSW_Blog(SW_Blog instance);
  partial void InsertSW_BlogData(SW_BlogData instance);
  partial void UpdateSW_BlogData(SW_BlogData instance);
  partial void DeleteSW_BlogData(SW_BlogData instance);
  partial void InsertSW_Lang(SW_Lang instance);
  partial void UpdateSW_Lang(SW_Lang instance);
  partial void DeleteSW_Lang(SW_Lang instance);
  partial void InsertSW_SearchWarSkillData(SW_SearchWarSkillData instance);
  partial void UpdateSW_SearchWarSkillData(SW_SearchWarSkillData instance);
  partial void DeleteSW_SearchWarSkillData(SW_SearchWarSkillData instance);
  partial void InsertSW_ChatPerson(SW_ChatPerson instance);
  partial void UpdateSW_ChatPerson(SW_ChatPerson instance);
  partial void DeleteSW_ChatPerson(SW_ChatPerson instance);
  partial void InsertSW_chat(SW_chat instance);
  partial void UpdateSW_chat(SW_chat instance);
  partial void DeleteSW_chat(SW_chat instance);
  partial void InsertSW_ChatMessage(SW_ChatMessage instance);
  partial void UpdateSW_ChatMessage(SW_ChatMessage instance);
  partial void DeleteSW_ChatMessage(SW_ChatMessage instance);
  partial void InsertSW_ChatBlinking(SW_ChatBlinking instance);
  partial void UpdateSW_ChatBlinking(SW_ChatBlinking instance);
  partial void DeleteSW_ChatBlinking(SW_ChatBlinking instance);
  partial void InsertSW_ServerContinent(SW_ServerContinent instance);
  partial void UpdateSW_ServerContinent(SW_ServerContinent instance);
  partial void DeleteSW_ServerContinent(SW_ServerContinent instance);
  partial void InsertSW_Server(SW_Server instance);
  partial void UpdateSW_Server(SW_Server instance);
  partial void DeleteSW_Server(SW_Server instance);
  partial void InsertSW_SearchWarCountryData1(SW_SearchWarCountryData1 instance);
  partial void UpdateSW_SearchWarCountryData1(SW_SearchWarCountryData1 instance);
  partial void DeleteSW_SearchWarCountryData1(SW_SearchWarCountryData1 instance);
  partial void InsertSW_SearchWarContinent(SW_SearchWarContinent instance);
  partial void UpdateSW_SearchWarContinent(SW_SearchWarContinent instance);
  partial void DeleteSW_SearchWarContinent(SW_SearchWarContinent instance);
  partial void InsertSW_SearchWar(SW_SearchWar instance);
  partial void UpdateSW_SearchWar(SW_SearchWar instance);
  partial void DeleteSW_SearchWar(SW_SearchWar instance);
  partial void InsertSW_SiteMapNodeData(SW_SiteMapNodeData instance);
  partial void UpdateSW_SiteMapNodeData(SW_SiteMapNodeData instance);
  partial void DeleteSW_SiteMapNodeData(SW_SiteMapNodeData instance);
  partial void InsertSW_SiteMapNode(SW_SiteMapNode instance);
  partial void UpdateSW_SiteMapNode(SW_SiteMapNode instance);
  partial void DeleteSW_SiteMapNode(SW_SiteMapNode instance);
  #endregion
	
	public Searchwar_netEntities() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SearchWarConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public Searchwar_netEntities(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Searchwar_netEntities(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Searchwar_netEntities(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Searchwar_netEntities(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
	{
		get
		{
			return this.GetTable<aspnet_Application>();
		}
	}
	
	public System.Data.Linq.Table<SW_SiteMapNodeRole> SW_SiteMapNodeRoles
	{
		get
		{
			return this.GetTable<SW_SiteMapNodeRole>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this.GetTable<aspnet_Membership>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this.GetTable<aspnet_Path>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationAllUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationPerUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
	{
		get
		{
			return this.GetTable<aspnet_Profile>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this.GetTable<aspnet_Role>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
	{
		get
		{
			return this.GetTable<aspnet_SchemaVersion>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this.GetTable<aspnet_UsersInRole>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
	{
		get
		{
			return this.GetTable<aspnet_WebEvent_Event>();
		}
	}
	
	public System.Data.Linq.Table<SW_Advertise> SW_Advertises
	{
		get
		{
			return this.GetTable<SW_Advertise>();
		}
	}
	
	public System.Data.Linq.Table<SW_AdvertiseCompany> SW_AdvertiseCompanies
	{
		get
		{
			return this.GetTable<SW_AdvertiseCompany>();
		}
	}
	
	public System.Data.Linq.Table<SW_AdvertisePlace> SW_AdvertisePlaces
	{
		get
		{
			return this.GetTable<SW_AdvertisePlace>();
		}
	}
	
	public System.Data.Linq.Table<SW_Banlist> SW_Banlists
	{
		get
		{
			return this.GetTable<SW_Banlist>();
		}
	}
	
	public System.Data.Linq.Table<SW_Faq> SW_Faqs
	{
		get
		{
			return this.GetTable<SW_Faq>();
		}
	}
	
	public System.Data.Linq.Table<SW_FaqData> SW_FaqDatas
	{
		get
		{
			return this.GetTable<SW_FaqData>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarContinentData> SW_SearchWarContinentDatas
	{
		get
		{
			return this.GetTable<SW_SearchWarContinentData>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarCountry> SW_SearchWarCountries
	{
		get
		{
			return this.GetTable<SW_SearchWarCountry>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarCountryData> SW_SearchWarCountryDatas
	{
		get
		{
			return this.GetTable<SW_SearchWarCountryData>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarGame> SW_SearchWarGames
	{
		get
		{
			return this.GetTable<SW_SearchWarGame>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarGameType> SW_SearchWarGameTypes
	{
		get
		{
			return this.GetTable<SW_SearchWarGameType>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarPlayer> SW_SearchWarPlayers
	{
		get
		{
			return this.GetTable<SW_SearchWarPlayer>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarSkill> SW_SearchWarSkills
	{
		get
		{
			return this.GetTable<SW_SearchWarSkill>();
		}
	}
	
	public System.Data.Linq.Table<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTags
	{
		get
		{
			return this.GetTable<SW_SiteMapNodeMetaTag>();
		}
	}
	
	public System.Data.Linq.Table<SW_SiteMapNodeMetaTagsData> SW_SiteMapNodeMetaTagsDatas
	{
		get
		{
			return this.GetTable<SW_SiteMapNodeMetaTagsData>();
		}
	}
	
	public System.Data.Linq.Table<SW_Blog> SW_Blogs
	{
		get
		{
			return this.GetTable<SW_Blog>();
		}
	}
	
	public System.Data.Linq.Table<SW_BlogData> SW_BlogDatas
	{
		get
		{
			return this.GetTable<SW_BlogData>();
		}
	}
	
	public System.Data.Linq.Table<SW_Lang> SW_Langs
	{
		get
		{
			return this.GetTable<SW_Lang>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarSkillData> SW_SearchWarSkillDatas
	{
		get
		{
			return this.GetTable<SW_SearchWarSkillData>();
		}
	}
	
	public System.Data.Linq.Table<SW_ChatPerson> SW_ChatPersons
	{
		get
		{
			return this.GetTable<SW_ChatPerson>();
		}
	}
	
	public System.Data.Linq.Table<SW_chat> SW_chats
	{
		get
		{
			return this.GetTable<SW_chat>();
		}
	}
	
	public System.Data.Linq.Table<SW_ChatMessage> SW_ChatMessages
	{
		get
		{
			return this.GetTable<SW_ChatMessage>();
		}
	}
	
	public System.Data.Linq.Table<SW_ChatBlinking> SW_ChatBlinkings
	{
		get
		{
			return this.GetTable<SW_ChatBlinking>();
		}
	}
	
	public System.Data.Linq.Table<SW_ServerContinent> SW_ServerContinents
	{
		get
		{
			return this.GetTable<SW_ServerContinent>();
		}
	}
	
	public System.Data.Linq.Table<SW_Server> SW_Servers
	{
		get
		{
			return this.GetTable<SW_Server>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarCountryData1> SW_SearchWarCountryData1s
	{
		get
		{
			return this.GetTable<SW_SearchWarCountryData1>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWarContinent> SW_SearchWarContinents
	{
		get
		{
			return this.GetTable<SW_SearchWarContinent>();
		}
	}
	
	public System.Data.Linq.Table<SW_SearchWar> SW_SearchWars
	{
		get
		{
			return this.GetTable<SW_SearchWar>();
		}
	}
	
	public System.Data.Linq.Table<SW_SiteMapNodeData> SW_SiteMapNodeDatas
	{
		get
		{
			return this.GetTable<SW_SiteMapNodeData>();
		}
	}
	
	public System.Data.Linq.Table<SW_SiteMapNode> SW_SiteMapNodes
	{
		get
		{
			return this.GetTable<SW_SiteMapNode>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ApplicationName;
	
	private string _LoweredApplicationName;
	
	private System.Guid _ApplicationId;
	
	private string _Description;
	
	private EntitySet<aspnet_Membership> _aspnet_Memberships;
	
	private EntitySet<aspnet_Path> _aspnet_Paths;
	
	private EntitySet<aspnet_Role> _aspnet_Roles;
	
	private EntitySet<aspnet_User> _aspnet_Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Application()
	{
		this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
		this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
		this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
		this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string ApplicationName
	{
		get
		{
			return this._ApplicationName;
		}
		set
		{
			if ((this._ApplicationName != value))
			{
				this.OnApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._ApplicationName = value;
				this.SendPropertyChanged("ApplicationName");
				this.OnApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredApplicationName
	{
		get
		{
			return this._LoweredApplicationName;
		}
		set
		{
			if ((this._LoweredApplicationName != value))
			{
				this.OnLoweredApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredApplicationName = value;
				this.SendPropertyChanged("LoweredApplicationName");
				this.OnLoweredApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this._aspnet_Memberships;
		}
		set
		{
			this._aspnet_Memberships.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this._aspnet_Paths;
		}
		set
		{
			this._aspnet_Paths.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this._aspnet_Roles;
		}
		set
		{
			this._aspnet_Roles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_User> aspnet_Users
	{
		get
		{
			return this._aspnet_Users;
		}
		set
		{
			this._aspnet_Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SiteMapNodeRoles")]
public partial class SW_SiteMapNodeRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SiteMapNodeRoleId;
	
	private int _SiteMapNodeId;
	
	private System.Guid _RoleId;
	
	private System.Guid _SiteMapNodeRoleAddedUserId;
	
	private System.DateTime _SiteMapNodeRoleAddedDate;
	
	private EntityRef<aspnet_Role> _aspnet_Role;
	
	private EntityRef<SW_SiteMapNode> _SW_SiteMapNode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteMapNodeRoleIdChanging(int value);
    partial void OnSiteMapNodeRoleIdChanged();
    partial void OnSiteMapNodeIdChanging(int value);
    partial void OnSiteMapNodeIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnSiteMapNodeRoleAddedUserIdChanging(System.Guid value);
    partial void OnSiteMapNodeRoleAddedUserIdChanged();
    partial void OnSiteMapNodeRoleAddedDateChanging(System.DateTime value);
    partial void OnSiteMapNodeRoleAddedDateChanged();
    #endregion
	
	public SW_SiteMapNodeRole()
	{
		this._aspnet_Role = default(EntityRef<aspnet_Role>);
		this._SW_SiteMapNode = default(EntityRef<SW_SiteMapNode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SiteMapNodeRoleId
	{
		get
		{
			return this._SiteMapNodeRoleId;
		}
		set
		{
			if ((this._SiteMapNodeRoleId != value))
			{
				this.OnSiteMapNodeRoleIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeRoleId = value;
				this.SendPropertyChanged("SiteMapNodeRoleId");
				this.OnSiteMapNodeRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeId", DbType="Int NOT NULL")]
	public int SiteMapNodeId
	{
		get
		{
			return this._SiteMapNodeId;
		}
		set
		{
			if ((this._SiteMapNodeId != value))
			{
				if (this._SW_SiteMapNode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSiteMapNodeIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeId = value;
				this.SendPropertyChanged("SiteMapNodeId");
				this.OnSiteMapNodeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._aspnet_Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeRoleAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SiteMapNodeRoleAddedUserId
	{
		get
		{
			return this._SiteMapNodeRoleAddedUserId;
		}
		set
		{
			if ((this._SiteMapNodeRoleAddedUserId != value))
			{
				this.OnSiteMapNodeRoleAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeRoleAddedUserId = value;
				this.SendPropertyChanged("SiteMapNodeRoleAddedUserId");
				this.OnSiteMapNodeRoleAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeRoleAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SiteMapNodeRoleAddedDate
	{
		get
		{
			return this._SiteMapNodeRoleAddedDate;
		}
		set
		{
			if ((this._SiteMapNodeRoleAddedDate != value))
			{
				this.OnSiteMapNodeRoleAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeRoleAddedDate = value;
				this.SendPropertyChanged("SiteMapNodeRoleAddedDate");
				this.OnSiteMapNodeRoleAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_SW_SiteMapNodeRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public aspnet_Role aspnet_Role
	{
		get
		{
			return this._aspnet_Role.Entity;
		}
		set
		{
			aspnet_Role previousValue = this._aspnet_Role.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Role.Entity = null;
					previousValue.SW_SiteMapNodeRoles.Remove(this);
				}
				this._aspnet_Role.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeRoles.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNode_SW_SiteMapNodeRole", Storage="_SW_SiteMapNode", ThisKey="SiteMapNodeId", OtherKey="SiteMapNodeId", IsForeignKey=true)]
	public SW_SiteMapNode SW_SiteMapNode
	{
		get
		{
			return this._SW_SiteMapNode.Entity;
		}
		set
		{
			SW_SiteMapNode previousValue = this._SW_SiteMapNode.Entity;
			if (((previousValue != value) 
						|| (this._SW_SiteMapNode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SiteMapNode.Entity = null;
					previousValue.SW_SiteMapNodeRoles.Remove(this);
				}
				this._SW_SiteMapNode.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeRoles.Add(this);
					this._SiteMapNodeId = value.SiteMapNodeId;
				}
				else
				{
					this._SiteMapNodeId = default(int);
				}
				this.SendPropertyChanged("SW_SiteMapNode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _Password;
	
	private int _PasswordFormat;
	
	private string _PasswordSalt;
	
	private string _MobilePIN;
	
	private string _Email;
	
	private string _LoweredEmail;
	
	private string _PasswordQuestion;
	
	private string _PasswordAnswer;
	
	private bool _IsApproved;
	
	private bool _IsLockedOut;
	
	private System.DateTime _CreateDate;
	
	private System.DateTime _LastLoginDate;
	
	private System.DateTime _LastPasswordChangedDate;
	
	private System.DateTime _LastLockoutDate;
	
	private int _FailedPasswordAttemptCount;
	
	private System.DateTime _FailedPasswordAttemptWindowStart;
	
	private int _FailedPasswordAnswerAttemptCount;
	
	private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
	
	private string _Comment;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public aspnet_Membership()
	{
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
	public int PasswordFormat
	{
		get
		{
			return this._PasswordFormat;
		}
		set
		{
			if ((this._PasswordFormat != value))
			{
				this.OnPasswordFormatChanging(value);
				this.SendPropertyChanging();
				this._PasswordFormat = value;
				this.SendPropertyChanged("PasswordFormat");
				this.OnPasswordFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
	public string MobilePIN
	{
		get
		{
			return this._MobilePIN;
		}
		set
		{
			if ((this._MobilePIN != value))
			{
				this.OnMobilePINChanging(value);
				this.SendPropertyChanging();
				this._MobilePIN = value;
				this.SendPropertyChanged("MobilePIN");
				this.OnMobilePINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
	public string LoweredEmail
	{
		get
		{
			return this._LoweredEmail;
		}
		set
		{
			if ((this._LoweredEmail != value))
			{
				this.OnLoweredEmailChanging(value);
				this.SendPropertyChanging();
				this._LoweredEmail = value;
				this.SendPropertyChanged("LoweredEmail");
				this.OnLoweredEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
	public string PasswordQuestion
	{
		get
		{
			return this._PasswordQuestion;
		}
		set
		{
			if ((this._PasswordQuestion != value))
			{
				this.OnPasswordQuestionChanging(value);
				this.SendPropertyChanging();
				this._PasswordQuestion = value;
				this.SendPropertyChanged("PasswordQuestion");
				this.OnPasswordQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
	public string PasswordAnswer
	{
		get
		{
			return this._PasswordAnswer;
		}
		set
		{
			if ((this._PasswordAnswer != value))
			{
				this.OnPasswordAnswerChanging(value);
				this.SendPropertyChanging();
				this._PasswordAnswer = value;
				this.SendPropertyChanged("PasswordAnswer");
				this.OnPasswordAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
	public bool IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
	public bool IsLockedOut
	{
		get
		{
			return this._IsLockedOut;
		}
		set
		{
			if ((this._IsLockedOut != value))
			{
				this.OnIsLockedOutChanging(value);
				this.SendPropertyChanging();
				this._IsLockedOut = value;
				this.SendPropertyChanged("IsLockedOut");
				this.OnIsLockedOutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLoginDate
	{
		get
		{
			return this._LastLoginDate;
		}
		set
		{
			if ((this._LastLoginDate != value))
			{
				this.OnLastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDate = value;
				this.SendPropertyChanged("LastLoginDate");
				this.OnLastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastPasswordChangedDate
	{
		get
		{
			return this._LastPasswordChangedDate;
		}
		set
		{
			if ((this._LastPasswordChangedDate != value))
			{
				this.OnLastPasswordChangedDateChanging(value);
				this.SendPropertyChanging();
				this._LastPasswordChangedDate = value;
				this.SendPropertyChanged("LastPasswordChangedDate");
				this.OnLastPasswordChangedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLockoutDate
	{
		get
		{
			return this._LastLockoutDate;
		}
		set
		{
			if ((this._LastLockoutDate != value))
			{
				this.OnLastLockoutDateChanging(value);
				this.SendPropertyChanging();
				this._LastLockoutDate = value;
				this.SendPropertyChanged("LastLockoutDate");
				this.OnLastLockoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAttemptCount
	{
		get
		{
			return this._FailedPasswordAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAttemptCount != value))
			{
				this.OnFailedPasswordAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAttemptCount");
				this.OnFailedPasswordAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAttemptWindowStart != value))
			{
				this.OnFailedPasswordAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
				this.OnFailedPasswordAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAnswerAttemptCount
	{
		get
		{
			return this._FailedPasswordAnswerAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptCount != value))
			{
				this.OnFailedPasswordAnswerAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
				this.OnFailedPasswordAnswerAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAnswerAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAnswerAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptWindowStart != value))
			{
				this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
				this.OnFailedPasswordAnswerAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Memberships.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Memberships.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Membership = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Membership = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _PathId;
	
	private string _Path;
	
	private string _LoweredPath;
	
	private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
	
	public aspnet_Path()
	{
		this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredPath
	{
		get
		{
			return this._LoweredPath;
		}
		set
		{
			if ((this._LoweredPath != value))
			{
				this.OnLoweredPathChanging(value);
				this.SendPropertyChanging();
				this._LoweredPath = value;
				this.SendPropertyChanged("LoweredPath");
				this.OnLoweredPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
	public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
	{
		get
		{
			return this._aspnet_PersonalizationAllUser.Entity;
		}
		set
		{
			aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_PersonalizationAllUser.Entity = null;
					previousValue.aspnet_Path = null;
				}
				this._aspnet_PersonalizationAllUser.Entity = value;
				if ((value != null))
				{
					value.aspnet_Path = this;
				}
				this.SendPropertyChanged("aspnet_PersonalizationAllUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Paths.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Paths.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _PathId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationAllUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationAllUser = null;
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationAllUser = this;
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Nullable<System.Guid> _PathId;
	
	private System.Nullable<System.Guid> _UserId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationPerUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private string _PropertyNames;
	
	private string _PropertyValuesString;
	
	private System.Data.Linq.Binary _PropertyValuesBinary;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_Profile()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyNames
	{
		get
		{
			return this._PropertyNames;
		}
		set
		{
			if ((this._PropertyNames != value))
			{
				this.OnPropertyNamesChanging(value);
				this.SendPropertyChanging();
				this._PropertyNames = value;
				this.SendPropertyChanged("PropertyNames");
				this.OnPropertyNamesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyValuesString
	{
		get
		{
			return this._PropertyValuesString;
		}
		set
		{
			if ((this._PropertyValuesString != value))
			{
				this.OnPropertyValuesStringChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesString = value;
				this.SendPropertyChanged("PropertyValuesString");
				this.OnPropertyValuesStringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PropertyValuesBinary
	{
		get
		{
			return this._PropertyValuesBinary;
		}
		set
		{
			if ((this._PropertyValuesBinary != value))
			{
				this.OnPropertyValuesBinaryChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesBinary = value;
				this.SendPropertyChanged("PropertyValuesBinary");
				this.OnPropertyValuesBinaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Profile = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Profile = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _RoleId;
	
	private string _RoleName;
	
	private string _LoweredRoleName;
	
	private string _Description;
	
	private EntitySet<SW_SiteMapNodeRole> _SW_SiteMapNodeRoles;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Role()
	{
		this._SW_SiteMapNodeRoles = new EntitySet<SW_SiteMapNodeRole>(new Action<SW_SiteMapNodeRole>(this.attach_SW_SiteMapNodeRoles), new Action<SW_SiteMapNodeRole>(this.detach_SW_SiteMapNodeRoles));
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredRoleName
	{
		get
		{
			return this._LoweredRoleName;
		}
		set
		{
			if ((this._LoweredRoleName != value))
			{
				this.OnLoweredRoleNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredRoleName = value;
				this.SendPropertyChanged("LoweredRoleName");
				this.OnLoweredRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_SW_SiteMapNodeRole", Storage="_SW_SiteMapNodeRoles", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<SW_SiteMapNodeRole> SW_SiteMapNodeRoles
	{
		get
		{
			return this._SW_SiteMapNodeRoles;
		}
		set
		{
			this._SW_SiteMapNodeRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Roles.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Roles.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SiteMapNodeRoles(SW_SiteMapNodeRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = this;
	}
	
	private void detach_SW_SiteMapNodeRoles(SW_SiteMapNodeRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = null;
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Feature;
	
	private string _CompatibleSchemaVersion;
	
	private bool _IsCurrentVersion;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
	
	public aspnet_SchemaVersion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CompatibleSchemaVersion
	{
		get
		{
			return this._CompatibleSchemaVersion;
		}
		set
		{
			if ((this._CompatibleSchemaVersion != value))
			{
				this.OnCompatibleSchemaVersionChanging(value);
				this.SendPropertyChanging();
				this._CompatibleSchemaVersion = value;
				this.SendPropertyChanged("CompatibleSchemaVersion");
				this.OnCompatibleSchemaVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
	public bool IsCurrentVersion
	{
		get
		{
			return this._IsCurrentVersion;
		}
		set
		{
			if ((this._IsCurrentVersion != value))
			{
				this.OnIsCurrentVersionChanging(value);
				this.SendPropertyChanging();
				this._IsCurrentVersion = value;
				this.SendPropertyChanged("IsCurrentVersion");
				this.OnIsCurrentVersionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Profile> _aspnet_Profile;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntitySet<SW_Faq> _SW_Faqs;
	
	private EntitySet<SW_Faq> _SW_Faqs1;
	
	private EntitySet<SW_SearchWarCountry> _SW_SearchWarCountries;
	
	private EntitySet<SW_SearchWarCountry> _SW_SearchWarCountries1;
	
	private EntitySet<SW_SearchWarGame> _SW_SearchWarGames;
	
	private EntitySet<SW_SearchWarGame> _SW_SearchWarGames1;
	
	private EntitySet<SW_SearchWarGameType> _SW_SearchWarGameTypes;
	
	private EntitySet<SW_SearchWarGameType> _SW_SearchWarGameTypes1;
	
	private EntitySet<SW_SearchWarSkill> _SW_SearchWarSkills;
	
	private EntitySet<SW_SearchWarSkill> _SW_SearchWarSkills1;
	
	private EntitySet<SW_SiteMapNodeMetaTag> _SW_SiteMapNodeMetaTags;
	
	private EntitySet<SW_SiteMapNodeMetaTag> _SW_SiteMapNodeMetaTags1;
	
	private EntitySet<SW_Blog> _SW_Blogs;
	
	private EntitySet<SW_Blog> _SW_Blogs1;
	
	private EntitySet<SW_SearchWarContinent> _SW_SearchWarContinents;
	
	private EntitySet<SW_SearchWarContinent> _SW_SearchWarContinents1;
	
	private EntitySet<SW_SiteMapNode> _SW_SiteMapNodes;
	
	private EntitySet<SW_SiteMapNode> _SW_SiteMapNodes1;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._SW_Faqs = new EntitySet<SW_Faq>(new Action<SW_Faq>(this.attach_SW_Faqs), new Action<SW_Faq>(this.detach_SW_Faqs));
		this._SW_Faqs1 = new EntitySet<SW_Faq>(new Action<SW_Faq>(this.attach_SW_Faqs1), new Action<SW_Faq>(this.detach_SW_Faqs1));
		this._SW_SearchWarCountries = new EntitySet<SW_SearchWarCountry>(new Action<SW_SearchWarCountry>(this.attach_SW_SearchWarCountries), new Action<SW_SearchWarCountry>(this.detach_SW_SearchWarCountries));
		this._SW_SearchWarCountries1 = new EntitySet<SW_SearchWarCountry>(new Action<SW_SearchWarCountry>(this.attach_SW_SearchWarCountries1), new Action<SW_SearchWarCountry>(this.detach_SW_SearchWarCountries1));
		this._SW_SearchWarGames = new EntitySet<SW_SearchWarGame>(new Action<SW_SearchWarGame>(this.attach_SW_SearchWarGames), new Action<SW_SearchWarGame>(this.detach_SW_SearchWarGames));
		this._SW_SearchWarGames1 = new EntitySet<SW_SearchWarGame>(new Action<SW_SearchWarGame>(this.attach_SW_SearchWarGames1), new Action<SW_SearchWarGame>(this.detach_SW_SearchWarGames1));
		this._SW_SearchWarGameTypes = new EntitySet<SW_SearchWarGameType>(new Action<SW_SearchWarGameType>(this.attach_SW_SearchWarGameTypes), new Action<SW_SearchWarGameType>(this.detach_SW_SearchWarGameTypes));
		this._SW_SearchWarGameTypes1 = new EntitySet<SW_SearchWarGameType>(new Action<SW_SearchWarGameType>(this.attach_SW_SearchWarGameTypes1), new Action<SW_SearchWarGameType>(this.detach_SW_SearchWarGameTypes1));
		this._SW_SearchWarSkills = new EntitySet<SW_SearchWarSkill>(new Action<SW_SearchWarSkill>(this.attach_SW_SearchWarSkills), new Action<SW_SearchWarSkill>(this.detach_SW_SearchWarSkills));
		this._SW_SearchWarSkills1 = new EntitySet<SW_SearchWarSkill>(new Action<SW_SearchWarSkill>(this.attach_SW_SearchWarSkills1), new Action<SW_SearchWarSkill>(this.detach_SW_SearchWarSkills1));
		this._SW_SiteMapNodeMetaTags = new EntitySet<SW_SiteMapNodeMetaTag>(new Action<SW_SiteMapNodeMetaTag>(this.attach_SW_SiteMapNodeMetaTags), new Action<SW_SiteMapNodeMetaTag>(this.detach_SW_SiteMapNodeMetaTags));
		this._SW_SiteMapNodeMetaTags1 = new EntitySet<SW_SiteMapNodeMetaTag>(new Action<SW_SiteMapNodeMetaTag>(this.attach_SW_SiteMapNodeMetaTags1), new Action<SW_SiteMapNodeMetaTag>(this.detach_SW_SiteMapNodeMetaTags1));
		this._SW_Blogs = new EntitySet<SW_Blog>(new Action<SW_Blog>(this.attach_SW_Blogs), new Action<SW_Blog>(this.detach_SW_Blogs));
		this._SW_Blogs1 = new EntitySet<SW_Blog>(new Action<SW_Blog>(this.attach_SW_Blogs1), new Action<SW_Blog>(this.detach_SW_Blogs1));
		this._SW_SearchWarContinents = new EntitySet<SW_SearchWarContinent>(new Action<SW_SearchWarContinent>(this.attach_SW_SearchWarContinents), new Action<SW_SearchWarContinent>(this.detach_SW_SearchWarContinents));
		this._SW_SearchWarContinents1 = new EntitySet<SW_SearchWarContinent>(new Action<SW_SearchWarContinent>(this.attach_SW_SearchWarContinents1), new Action<SW_SearchWarContinent>(this.detach_SW_SearchWarContinents1));
		this._SW_SiteMapNodes = new EntitySet<SW_SiteMapNode>(new Action<SW_SiteMapNode>(this.attach_SW_SiteMapNodes), new Action<SW_SiteMapNode>(this.detach_SW_SiteMapNodes));
		this._SW_SiteMapNodes1 = new EntitySet<SW_SiteMapNode>(new Action<SW_SiteMapNode>(this.attach_SW_SiteMapNodes1), new Action<SW_SiteMapNode>(this.detach_SW_SiteMapNodes1));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Profile aspnet_Profile
	{
		get
		{
			return this._aspnet_Profile.Entity;
		}
		set
		{
			aspnet_Profile previousValue = this._aspnet_Profile.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Profile.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Profile.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Profile");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Faq", Storage="_SW_Faqs", ThisKey="UserId", OtherKey="FAQAddedByUserId")]
	public EntitySet<SW_Faq> SW_Faqs
	{
		get
		{
			return this._SW_Faqs;
		}
		set
		{
			this._SW_Faqs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Faq1", Storage="_SW_Faqs1", ThisKey="UserId", OtherKey="FAQEditByUserId")]
	public EntitySet<SW_Faq> SW_Faqs1
	{
		get
		{
			return this._SW_Faqs1;
		}
		set
		{
			this._SW_Faqs1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarCountry", Storage="_SW_SearchWarCountries", ThisKey="UserId", OtherKey="SearchWarCountryAddedUserId")]
	public EntitySet<SW_SearchWarCountry> SW_SearchWarCountries
	{
		get
		{
			return this._SW_SearchWarCountries;
		}
		set
		{
			this._SW_SearchWarCountries.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarCountry1", Storage="_SW_SearchWarCountries1", ThisKey="UserId", OtherKey="SearchWarCountryEditUserId")]
	public EntitySet<SW_SearchWarCountry> SW_SearchWarCountries1
	{
		get
		{
			return this._SW_SearchWarCountries1;
		}
		set
		{
			this._SW_SearchWarCountries1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGame", Storage="_SW_SearchWarGames", ThisKey="UserId", OtherKey="SearchWarGameAddedUserId")]
	public EntitySet<SW_SearchWarGame> SW_SearchWarGames
	{
		get
		{
			return this._SW_SearchWarGames;
		}
		set
		{
			this._SW_SearchWarGames.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGame1", Storage="_SW_SearchWarGames1", ThisKey="UserId", OtherKey="SearchWarGameEditUserId")]
	public EntitySet<SW_SearchWarGame> SW_SearchWarGames1
	{
		get
		{
			return this._SW_SearchWarGames1;
		}
		set
		{
			this._SW_SearchWarGames1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGameType", Storage="_SW_SearchWarGameTypes", ThisKey="UserId", OtherKey="SearchWarGameTypeAddedUserId")]
	public EntitySet<SW_SearchWarGameType> SW_SearchWarGameTypes
	{
		get
		{
			return this._SW_SearchWarGameTypes;
		}
		set
		{
			this._SW_SearchWarGameTypes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGameType1", Storage="_SW_SearchWarGameTypes1", ThisKey="UserId", OtherKey="SearchWarGameTypeEditUserId")]
	public EntitySet<SW_SearchWarGameType> SW_SearchWarGameTypes1
	{
		get
		{
			return this._SW_SearchWarGameTypes1;
		}
		set
		{
			this._SW_SearchWarGameTypes1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarSkill", Storage="_SW_SearchWarSkills", ThisKey="UserId", OtherKey="SearchWarSkillAddedUserId")]
	public EntitySet<SW_SearchWarSkill> SW_SearchWarSkills
	{
		get
		{
			return this._SW_SearchWarSkills;
		}
		set
		{
			this._SW_SearchWarSkills.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarSkill1", Storage="_SW_SearchWarSkills1", ThisKey="UserId", OtherKey="SearchWarSkillEditUserId")]
	public EntitySet<SW_SearchWarSkill> SW_SearchWarSkills1
	{
		get
		{
			return this._SW_SearchWarSkills1;
		}
		set
		{
			this._SW_SearchWarSkills1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNodeMetaTag", Storage="_SW_SiteMapNodeMetaTags", ThisKey="UserId", OtherKey="MetaTagsAddedUserId")]
	public EntitySet<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTags
	{
		get
		{
			return this._SW_SiteMapNodeMetaTags;
		}
		set
		{
			this._SW_SiteMapNodeMetaTags.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNodeMetaTag1", Storage="_SW_SiteMapNodeMetaTags1", ThisKey="UserId", OtherKey="MetaTagsEditUserId")]
	public EntitySet<SW_SiteMapNodeMetaTag> SW_SiteMapNodeMetaTags1
	{
		get
		{
			return this._SW_SiteMapNodeMetaTags1;
		}
		set
		{
			this._SW_SiteMapNodeMetaTags1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Blog", Storage="_SW_Blogs", ThisKey="UserId", OtherKey="BlogAddedByUserId")]
	public EntitySet<SW_Blog> SW_Blogs
	{
		get
		{
			return this._SW_Blogs;
		}
		set
		{
			this._SW_Blogs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Blog1", Storage="_SW_Blogs1", ThisKey="UserId", OtherKey="BlogEditByUserId")]
	public EntitySet<SW_Blog> SW_Blogs1
	{
		get
		{
			return this._SW_Blogs1;
		}
		set
		{
			this._SW_Blogs1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarContinent", Storage="_SW_SearchWarContinents", ThisKey="UserId", OtherKey="SearchWarContinentAddedUserId")]
	public EntitySet<SW_SearchWarContinent> SW_SearchWarContinents
	{
		get
		{
			return this._SW_SearchWarContinents;
		}
		set
		{
			this._SW_SearchWarContinents.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarContinent1", Storage="_SW_SearchWarContinents1", ThisKey="UserId", OtherKey="SearchWarContinentEditUserId")]
	public EntitySet<SW_SearchWarContinent> SW_SearchWarContinents1
	{
		get
		{
			return this._SW_SearchWarContinents1;
		}
		set
		{
			this._SW_SearchWarContinents1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNode", Storage="_SW_SiteMapNodes", ThisKey="UserId", OtherKey="SiteMapNodeAddedUserId")]
	public EntitySet<SW_SiteMapNode> SW_SiteMapNodes
	{
		get
		{
			return this._SW_SiteMapNodes;
		}
		set
		{
			this._SW_SiteMapNodes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNode1", Storage="_SW_SiteMapNodes1", ThisKey="UserId", OtherKey="SiteMapNodeEditUserId")]
	public EntitySet<SW_SiteMapNode> SW_SiteMapNodes1
	{
		get
		{
			return this._SW_SiteMapNodes1;
		}
		set
		{
			this._SW_SiteMapNodes1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Users.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Users.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_Faqs(SW_Faq entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_Faqs(SW_Faq entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_Faqs1(SW_Faq entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_Faqs1(SW_Faq entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SearchWarCountries(SW_SearchWarCountry entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SearchWarCountries(SW_SearchWarCountry entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SearchWarCountries1(SW_SearchWarCountry entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SearchWarCountries1(SW_SearchWarCountry entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SearchWarGames(SW_SearchWarGame entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SearchWarGames(SW_SearchWarGame entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SearchWarGames1(SW_SearchWarGame entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SearchWarGames1(SW_SearchWarGame entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SearchWarGameTypes(SW_SearchWarGameType entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SearchWarGameTypes(SW_SearchWarGameType entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SearchWarGameTypes1(SW_SearchWarGameType entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SearchWarGameTypes1(SW_SearchWarGameType entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SearchWarSkills(SW_SearchWarSkill entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SearchWarSkills(SW_SearchWarSkill entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SearchWarSkills1(SW_SearchWarSkill entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SearchWarSkills1(SW_SearchWarSkill entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SiteMapNodeMetaTags(SW_SiteMapNodeMetaTag entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SiteMapNodeMetaTags(SW_SiteMapNodeMetaTag entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SiteMapNodeMetaTags1(SW_SiteMapNodeMetaTag entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SiteMapNodeMetaTags1(SW_SiteMapNodeMetaTag entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_Blogs(SW_Blog entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_Blogs(SW_Blog entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_Blogs1(SW_Blog entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_Blogs1(SW_Blog entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SearchWarContinents(SW_SearchWarContinent entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SearchWarContinents(SW_SearchWarContinent entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SearchWarContinents1(SW_SearchWarContinent entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SearchWarContinents1(SW_SearchWarContinent entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
	
	private void attach_SW_SiteMapNodes(SW_SiteMapNode entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_SW_SiteMapNodes(SW_SiteMapNode entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_SW_SiteMapNodes1(SW_SiteMapNode entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_SW_SiteMapNodes1(SW_SiteMapNode entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private System.Guid _RoleId;
	
	private EntityRef<aspnet_Role> _aspnet_Role;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
	
	public aspnet_UsersInRole()
	{
		this._aspnet_Role = default(EntityRef<aspnet_Role>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._aspnet_Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public aspnet_Role aspnet_Role
	{
		get
		{
			return this._aspnet_Role.Entity;
		}
		set
		{
			aspnet_Role previousValue = this._aspnet_Role.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Role.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_Role.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EventId;
	
	private System.DateTime _EventTimeUtc;
	
	private System.DateTime _EventTime;
	
	private string _EventType;
	
	private decimal _EventSequence;
	
	private decimal _EventOccurrence;
	
	private int _EventCode;
	
	private int _EventDetailCode;
	
	private string _Message;
	
	private string _ApplicationPath;
	
	private string _ApplicationVirtualPath;
	
	private string _MachineName;
	
	private string _RequestUrl;
	
	private string _ExceptionType;
	
	private string _Details;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
	
	public aspnet_WebEvent_Event()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
	public System.DateTime EventTimeUtc
	{
		get
		{
			return this._EventTimeUtc;
		}
		set
		{
			if ((this._EventTimeUtc != value))
			{
				this.OnEventTimeUtcChanging(value);
				this.SendPropertyChanging();
				this._EventTimeUtc = value;
				this.SendPropertyChanged("EventTimeUtc");
				this.OnEventTimeUtcChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
	public System.DateTime EventTime
	{
		get
		{
			return this._EventTime;
		}
		set
		{
			if ((this._EventTime != value))
			{
				this.OnEventTimeChanging(value);
				this.SendPropertyChanging();
				this._EventTime = value;
				this.SendPropertyChanged("EventTime");
				this.OnEventTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string EventType
	{
		get
		{
			return this._EventType;
		}
		set
		{
			if ((this._EventType != value))
			{
				this.OnEventTypeChanging(value);
				this.SendPropertyChanging();
				this._EventType = value;
				this.SendPropertyChanged("EventType");
				this.OnEventTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventSequence
	{
		get
		{
			return this._EventSequence;
		}
		set
		{
			if ((this._EventSequence != value))
			{
				this.OnEventSequenceChanging(value);
				this.SendPropertyChanging();
				this._EventSequence = value;
				this.SendPropertyChanged("EventSequence");
				this.OnEventSequenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventOccurrence
	{
		get
		{
			return this._EventOccurrence;
		}
		set
		{
			if ((this._EventOccurrence != value))
			{
				this.OnEventOccurrenceChanging(value);
				this.SendPropertyChanging();
				this._EventOccurrence = value;
				this.SendPropertyChanged("EventOccurrence");
				this.OnEventOccurrenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
	public int EventCode
	{
		get
		{
			return this._EventCode;
		}
		set
		{
			if ((this._EventCode != value))
			{
				this.OnEventCodeChanging(value);
				this.SendPropertyChanging();
				this._EventCode = value;
				this.SendPropertyChanged("EventCode");
				this.OnEventCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
	public int EventDetailCode
	{
		get
		{
			return this._EventDetailCode;
		}
		set
		{
			if ((this._EventDetailCode != value))
			{
				this.OnEventDetailCodeChanging(value);
				this.SendPropertyChanging();
				this._EventDetailCode = value;
				this.SendPropertyChanged("EventDetailCode");
				this.OnEventDetailCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
	public string ApplicationPath
	{
		get
		{
			return this._ApplicationPath;
		}
		set
		{
			if ((this._ApplicationPath != value))
			{
				this.OnApplicationPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationPath = value;
				this.SendPropertyChanged("ApplicationPath");
				this.OnApplicationPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
	public string ApplicationVirtualPath
	{
		get
		{
			return this._ApplicationVirtualPath;
		}
		set
		{
			if ((this._ApplicationVirtualPath != value))
			{
				this.OnApplicationVirtualPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationVirtualPath = value;
				this.SendPropertyChanged("ApplicationVirtualPath");
				this.OnApplicationVirtualPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string MachineName
	{
		get
		{
			return this._MachineName;
		}
		set
		{
			if ((this._MachineName != value))
			{
				this.OnMachineNameChanging(value);
				this.SendPropertyChanging();
				this._MachineName = value;
				this.SendPropertyChanged("MachineName");
				this.OnMachineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
	public string RequestUrl
	{
		get
		{
			return this._RequestUrl;
		}
		set
		{
			if ((this._RequestUrl != value))
			{
				this.OnRequestUrlChanging(value);
				this.SendPropertyChanging();
				this._RequestUrl = value;
				this.SendPropertyChanged("RequestUrl");
				this.OnRequestUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
	public string ExceptionType
	{
		get
		{
			return this._ExceptionType;
		}
		set
		{
			if ((this._ExceptionType != value))
			{
				this.OnExceptionTypeChanging(value);
				this.SendPropertyChanging();
				this._ExceptionType = value;
				this.SendPropertyChanged("ExceptionType");
				this.OnExceptionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_Advertise")]
public partial class SW_Advertise : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdvertiseId;
	
	private string _AdvertiseCode;
	
	private int _AdvertisePlaceId;
	
	private int _AdvertiseCompanyId;
	
	private string _AdvertiseName;
	
	private System.DateTime _AdvertiseAddedDate;
	
	private System.Nullable<System.DateTime> _AdvertiseEditDate;
	
	private System.DateTime _AdvertiseShowFromDate;
	
	private System.DateTime _AdvertiseShowToDate;
	
	private System.DateTime _AdvertiseAddedUserId;
	
	private System.DateTime _AdvertiseEditUserId;
	
	private EntityRef<SW_AdvertiseCompany> _SW_AdvertiseCompany;
	
	private EntityRef<SW_AdvertisePlace> _SW_AdvertisePlace;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvertiseIdChanging(int value);
    partial void OnAdvertiseIdChanged();
    partial void OnAdvertiseCodeChanging(string value);
    partial void OnAdvertiseCodeChanged();
    partial void OnAdvertisePlaceIdChanging(int value);
    partial void OnAdvertisePlaceIdChanged();
    partial void OnAdvertiseCompanyIdChanging(int value);
    partial void OnAdvertiseCompanyIdChanged();
    partial void OnAdvertiseNameChanging(string value);
    partial void OnAdvertiseNameChanged();
    partial void OnAdvertiseAddedDateChanging(System.DateTime value);
    partial void OnAdvertiseAddedDateChanged();
    partial void OnAdvertiseEditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdvertiseEditDateChanged();
    partial void OnAdvertiseShowFromDateChanging(System.DateTime value);
    partial void OnAdvertiseShowFromDateChanged();
    partial void OnAdvertiseShowToDateChanging(System.DateTime value);
    partial void OnAdvertiseShowToDateChanged();
    partial void OnAdvertiseAddedUserIdChanging(System.DateTime value);
    partial void OnAdvertiseAddedUserIdChanged();
    partial void OnAdvertiseEditUserIdChanging(System.DateTime value);
    partial void OnAdvertiseEditUserIdChanged();
    #endregion
	
	public SW_Advertise()
	{
		this._SW_AdvertiseCompany = default(EntityRef<SW_AdvertiseCompany>);
		this._SW_AdvertisePlace = default(EntityRef<SW_AdvertisePlace>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdvertiseId
	{
		get
		{
			return this._AdvertiseId;
		}
		set
		{
			if ((this._AdvertiseId != value))
			{
				this.OnAdvertiseIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseId = value;
				this.SendPropertyChanged("AdvertiseId");
				this.OnAdvertiseIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCode", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string AdvertiseCode
	{
		get
		{
			return this._AdvertiseCode;
		}
		set
		{
			if ((this._AdvertiseCode != value))
			{
				this.OnAdvertiseCodeChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCode = value;
				this.SendPropertyChanged("AdvertiseCode");
				this.OnAdvertiseCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceId", DbType="Int NOT NULL")]
	public int AdvertisePlaceId
	{
		get
		{
			return this._AdvertisePlaceId;
		}
		set
		{
			if ((this._AdvertisePlaceId != value))
			{
				if (this._SW_AdvertisePlace.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdvertisePlaceIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceId = value;
				this.SendPropertyChanged("AdvertisePlaceId");
				this.OnAdvertisePlaceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyId", DbType="Int NOT NULL")]
	public int AdvertiseCompanyId
	{
		get
		{
			return this._AdvertiseCompanyId;
		}
		set
		{
			if ((this._AdvertiseCompanyId != value))
			{
				if (this._SW_AdvertiseCompany.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdvertiseCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyId = value;
				this.SendPropertyChanged("AdvertiseCompanyId");
				this.OnAdvertiseCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
	public string AdvertiseName
	{
		get
		{
			return this._AdvertiseName;
		}
		set
		{
			if ((this._AdvertiseName != value))
			{
				this.OnAdvertiseNameChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseName = value;
				this.SendPropertyChanged("AdvertiseName");
				this.OnAdvertiseNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseAddedDate
	{
		get
		{
			return this._AdvertiseAddedDate;
		}
		set
		{
			if ((this._AdvertiseAddedDate != value))
			{
				this.OnAdvertiseAddedDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseAddedDate = value;
				this.SendPropertyChanged("AdvertiseAddedDate");
				this.OnAdvertiseAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseEditDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> AdvertiseEditDate
	{
		get
		{
			return this._AdvertiseEditDate;
		}
		set
		{
			if ((this._AdvertiseEditDate != value))
			{
				this.OnAdvertiseEditDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseEditDate = value;
				this.SendPropertyChanged("AdvertiseEditDate");
				this.OnAdvertiseEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseShowFromDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseShowFromDate
	{
		get
		{
			return this._AdvertiseShowFromDate;
		}
		set
		{
			if ((this._AdvertiseShowFromDate != value))
			{
				this.OnAdvertiseShowFromDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseShowFromDate = value;
				this.SendPropertyChanged("AdvertiseShowFromDate");
				this.OnAdvertiseShowFromDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseShowToDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseShowToDate
	{
		get
		{
			return this._AdvertiseShowToDate;
		}
		set
		{
			if ((this._AdvertiseShowToDate != value))
			{
				this.OnAdvertiseShowToDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseShowToDate = value;
				this.SendPropertyChanged("AdvertiseShowToDate");
				this.OnAdvertiseShowToDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseAddedUserId", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseAddedUserId
	{
		get
		{
			return this._AdvertiseAddedUserId;
		}
		set
		{
			if ((this._AdvertiseAddedUserId != value))
			{
				this.OnAdvertiseAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseAddedUserId = value;
				this.SendPropertyChanged("AdvertiseAddedUserId");
				this.OnAdvertiseAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseEditUserId", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseEditUserId
	{
		get
		{
			return this._AdvertiseEditUserId;
		}
		set
		{
			if ((this._AdvertiseEditUserId != value))
			{
				this.OnAdvertiseEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseEditUserId = value;
				this.SendPropertyChanged("AdvertiseEditUserId");
				this.OnAdvertiseEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_AdvertiseCompany_SW_Advertise", Storage="_SW_AdvertiseCompany", ThisKey="AdvertiseCompanyId", OtherKey="AdvertiseCompanyId", IsForeignKey=true)]
	public SW_AdvertiseCompany SW_AdvertiseCompany
	{
		get
		{
			return this._SW_AdvertiseCompany.Entity;
		}
		set
		{
			SW_AdvertiseCompany previousValue = this._SW_AdvertiseCompany.Entity;
			if (((previousValue != value) 
						|| (this._SW_AdvertiseCompany.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_AdvertiseCompany.Entity = null;
					previousValue.SW_Advertises.Remove(this);
				}
				this._SW_AdvertiseCompany.Entity = value;
				if ((value != null))
				{
					value.SW_Advertises.Add(this);
					this._AdvertiseCompanyId = value.AdvertiseCompanyId;
				}
				else
				{
					this._AdvertiseCompanyId = default(int);
				}
				this.SendPropertyChanged("SW_AdvertiseCompany");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_AdvertisePlace_SW_Advertise", Storage="_SW_AdvertisePlace", ThisKey="AdvertisePlaceId", OtherKey="AdvertisePlaceId", IsForeignKey=true)]
	public SW_AdvertisePlace SW_AdvertisePlace
	{
		get
		{
			return this._SW_AdvertisePlace.Entity;
		}
		set
		{
			SW_AdvertisePlace previousValue = this._SW_AdvertisePlace.Entity;
			if (((previousValue != value) 
						|| (this._SW_AdvertisePlace.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_AdvertisePlace.Entity = null;
					previousValue.SW_Advertises.Remove(this);
				}
				this._SW_AdvertisePlace.Entity = value;
				if ((value != null))
				{
					value.SW_Advertises.Add(this);
					this._AdvertisePlaceId = value.AdvertisePlaceId;
				}
				else
				{
					this._AdvertisePlaceId = default(int);
				}
				this.SendPropertyChanged("SW_AdvertisePlace");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_AdvertiseCompany")]
public partial class SW_AdvertiseCompany : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdvertiseCompanyId;
	
	private string _AdvertiseCompanyName;
	
	private string _AdvertiseCompanyDesc;
	
	private System.DateTime _AdvertiseCompanyAddedDate;
	
	private System.DateTime _AdvertiseCompanyEditDate;
	
	private System.Guid _AdvertiseCompanyAddedUserId;
	
	private System.Guid _AdvertiseCompanyEditUserId;
	
	private EntitySet<SW_Advertise> _SW_Advertises;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvertiseCompanyIdChanging(int value);
    partial void OnAdvertiseCompanyIdChanged();
    partial void OnAdvertiseCompanyNameChanging(string value);
    partial void OnAdvertiseCompanyNameChanged();
    partial void OnAdvertiseCompanyDescChanging(string value);
    partial void OnAdvertiseCompanyDescChanged();
    partial void OnAdvertiseCompanyAddedDateChanging(System.DateTime value);
    partial void OnAdvertiseCompanyAddedDateChanged();
    partial void OnAdvertiseCompanyEditDateChanging(System.DateTime value);
    partial void OnAdvertiseCompanyEditDateChanged();
    partial void OnAdvertiseCompanyAddedUserIdChanging(System.Guid value);
    partial void OnAdvertiseCompanyAddedUserIdChanged();
    partial void OnAdvertiseCompanyEditUserIdChanging(System.Guid value);
    partial void OnAdvertiseCompanyEditUserIdChanged();
    #endregion
	
	public SW_AdvertiseCompany()
	{
		this._SW_Advertises = new EntitySet<SW_Advertise>(new Action<SW_Advertise>(this.attach_SW_Advertises), new Action<SW_Advertise>(this.detach_SW_Advertises));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdvertiseCompanyId
	{
		get
		{
			return this._AdvertiseCompanyId;
		}
		set
		{
			if ((this._AdvertiseCompanyId != value))
			{
				this.OnAdvertiseCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyId = value;
				this.SendPropertyChanged("AdvertiseCompanyId");
				this.OnAdvertiseCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
	public string AdvertiseCompanyName
	{
		get
		{
			return this._AdvertiseCompanyName;
		}
		set
		{
			if ((this._AdvertiseCompanyName != value))
			{
				this.OnAdvertiseCompanyNameChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyName = value;
				this.SendPropertyChanged("AdvertiseCompanyName");
				this.OnAdvertiseCompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyDesc", DbType="VarChar(800)")]
	public string AdvertiseCompanyDesc
	{
		get
		{
			return this._AdvertiseCompanyDesc;
		}
		set
		{
			if ((this._AdvertiseCompanyDesc != value))
			{
				this.OnAdvertiseCompanyDescChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyDesc = value;
				this.SendPropertyChanged("AdvertiseCompanyDesc");
				this.OnAdvertiseCompanyDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseCompanyAddedDate
	{
		get
		{
			return this._AdvertiseCompanyAddedDate;
		}
		set
		{
			if ((this._AdvertiseCompanyAddedDate != value))
			{
				this.OnAdvertiseCompanyAddedDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyAddedDate = value;
				this.SendPropertyChanged("AdvertiseCompanyAddedDate");
				this.OnAdvertiseCompanyAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertiseCompanyEditDate
	{
		get
		{
			return this._AdvertiseCompanyEditDate;
		}
		set
		{
			if ((this._AdvertiseCompanyEditDate != value))
			{
				this.OnAdvertiseCompanyEditDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyEditDate = value;
				this.SendPropertyChanged("AdvertiseCompanyEditDate");
				this.OnAdvertiseCompanyEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AdvertiseCompanyAddedUserId
	{
		get
		{
			return this._AdvertiseCompanyAddedUserId;
		}
		set
		{
			if ((this._AdvertiseCompanyAddedUserId != value))
			{
				this.OnAdvertiseCompanyAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyAddedUserId = value;
				this.SendPropertyChanged("AdvertiseCompanyAddedUserId");
				this.OnAdvertiseCompanyAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiseCompanyEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AdvertiseCompanyEditUserId
	{
		get
		{
			return this._AdvertiseCompanyEditUserId;
		}
		set
		{
			if ((this._AdvertiseCompanyEditUserId != value))
			{
				this.OnAdvertiseCompanyEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertiseCompanyEditUserId = value;
				this.SendPropertyChanged("AdvertiseCompanyEditUserId");
				this.OnAdvertiseCompanyEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_AdvertiseCompany_SW_Advertise", Storage="_SW_Advertises", ThisKey="AdvertiseCompanyId", OtherKey="AdvertiseCompanyId")]
	public EntitySet<SW_Advertise> SW_Advertises
	{
		get
		{
			return this._SW_Advertises;
		}
		set
		{
			this._SW_Advertises.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_Advertises(SW_Advertise entity)
	{
		this.SendPropertyChanging();
		entity.SW_AdvertiseCompany = this;
	}
	
	private void detach_SW_Advertises(SW_Advertise entity)
	{
		this.SendPropertyChanging();
		entity.SW_AdvertiseCompany = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_AdvertisePlace")]
public partial class SW_AdvertisePlace : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdvertisePlaceId;
	
	private string _AdvertisePlaceDesc;
	
	private System.DateTime _AdvertisePlaceAddedDate;
	
	private System.DateTime _AdvertisePlaceEditDate;
	
	private System.Guid _AdvertisePlaceAddedUserId;
	
	private System.Guid _AdvertisePlaceEditUserId;
	
	private EntitySet<SW_Advertise> _SW_Advertises;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvertisePlaceIdChanging(int value);
    partial void OnAdvertisePlaceIdChanged();
    partial void OnAdvertisePlaceDescChanging(string value);
    partial void OnAdvertisePlaceDescChanged();
    partial void OnAdvertisePlaceAddedDateChanging(System.DateTime value);
    partial void OnAdvertisePlaceAddedDateChanged();
    partial void OnAdvertisePlaceEditDateChanging(System.DateTime value);
    partial void OnAdvertisePlaceEditDateChanged();
    partial void OnAdvertisePlaceAddedUserIdChanging(System.Guid value);
    partial void OnAdvertisePlaceAddedUserIdChanged();
    partial void OnAdvertisePlaceEditUserIdChanging(System.Guid value);
    partial void OnAdvertisePlaceEditUserIdChanged();
    #endregion
	
	public SW_AdvertisePlace()
	{
		this._SW_Advertises = new EntitySet<SW_Advertise>(new Action<SW_Advertise>(this.attach_SW_Advertises), new Action<SW_Advertise>(this.detach_SW_Advertises));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdvertisePlaceId
	{
		get
		{
			return this._AdvertisePlaceId;
		}
		set
		{
			if ((this._AdvertisePlaceId != value))
			{
				this.OnAdvertisePlaceIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceId = value;
				this.SendPropertyChanged("AdvertisePlaceId");
				this.OnAdvertisePlaceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceDesc", DbType="VarChar(100)")]
	public string AdvertisePlaceDesc
	{
		get
		{
			return this._AdvertisePlaceDesc;
		}
		set
		{
			if ((this._AdvertisePlaceDesc != value))
			{
				this.OnAdvertisePlaceDescChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceDesc = value;
				this.SendPropertyChanged("AdvertisePlaceDesc");
				this.OnAdvertisePlaceDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertisePlaceAddedDate
	{
		get
		{
			return this._AdvertisePlaceAddedDate;
		}
		set
		{
			if ((this._AdvertisePlaceAddedDate != value))
			{
				this.OnAdvertisePlaceAddedDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceAddedDate = value;
				this.SendPropertyChanged("AdvertisePlaceAddedDate");
				this.OnAdvertisePlaceAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime AdvertisePlaceEditDate
	{
		get
		{
			return this._AdvertisePlaceEditDate;
		}
		set
		{
			if ((this._AdvertisePlaceEditDate != value))
			{
				this.OnAdvertisePlaceEditDateChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceEditDate = value;
				this.SendPropertyChanged("AdvertisePlaceEditDate");
				this.OnAdvertisePlaceEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AdvertisePlaceAddedUserId
	{
		get
		{
			return this._AdvertisePlaceAddedUserId;
		}
		set
		{
			if ((this._AdvertisePlaceAddedUserId != value))
			{
				this.OnAdvertisePlaceAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceAddedUserId = value;
				this.SendPropertyChanged("AdvertisePlaceAddedUserId");
				this.OnAdvertisePlaceAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisePlaceEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AdvertisePlaceEditUserId
	{
		get
		{
			return this._AdvertisePlaceEditUserId;
		}
		set
		{
			if ((this._AdvertisePlaceEditUserId != value))
			{
				this.OnAdvertisePlaceEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._AdvertisePlaceEditUserId = value;
				this.SendPropertyChanged("AdvertisePlaceEditUserId");
				this.OnAdvertisePlaceEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_AdvertisePlace_SW_Advertise", Storage="_SW_Advertises", ThisKey="AdvertisePlaceId", OtherKey="AdvertisePlaceId")]
	public EntitySet<SW_Advertise> SW_Advertises
	{
		get
		{
			return this._SW_Advertises;
		}
		set
		{
			this._SW_Advertises.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_Advertises(SW_Advertise entity)
	{
		this.SendPropertyChanging();
		entity.SW_AdvertisePlace = this;
	}
	
	private void detach_SW_Advertises(SW_Advertise entity)
	{
		this.SendPropertyChanging();
		entity.SW_AdvertisePlace = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_Banlist")]
public partial class SW_Banlist : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BanId;
	
	private string _BanIpAddress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBanIdChanging(int value);
    partial void OnBanIdChanged();
    partial void OnBanIpAddressChanging(string value);
    partial void OnBanIpAddressChanged();
    #endregion
	
	public SW_Banlist()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BanId
	{
		get
		{
			return this._BanId;
		}
		set
		{
			if ((this._BanId != value))
			{
				this.OnBanIdChanging(value);
				this.SendPropertyChanging();
				this._BanId = value;
				this.SendPropertyChanged("BanId");
				this.OnBanIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanIpAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string BanIpAddress
	{
		get
		{
			return this._BanIpAddress;
		}
		set
		{
			if ((this._BanIpAddress != value))
			{
				this.OnBanIpAddressChanging(value);
				this.SendPropertyChanging();
				this._BanIpAddress = value;
				this.SendPropertyChanged("BanIpAddress");
				this.OnBanIpAddressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_Faq")]
public partial class SW_Faq : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FAQId;
	
	private System.Guid _FAQAddedByUserId;
	
	private System.Guid _FAQEditByUserId;
	
	private System.DateTime _FAQAddedDate;
	
	private System.DateTime _FAQEditDate;
	
	private EntitySet<SW_FaqData> _SW_FaqDatas;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFAQIdChanging(int value);
    partial void OnFAQIdChanged();
    partial void OnFAQAddedByUserIdChanging(System.Guid value);
    partial void OnFAQAddedByUserIdChanged();
    partial void OnFAQEditByUserIdChanging(System.Guid value);
    partial void OnFAQEditByUserIdChanged();
    partial void OnFAQAddedDateChanging(System.DateTime value);
    partial void OnFAQAddedDateChanged();
    partial void OnFAQEditDateChanging(System.DateTime value);
    partial void OnFAQEditDateChanged();
    #endregion
	
	public SW_Faq()
	{
		this._SW_FaqDatas = new EntitySet<SW_FaqData>(new Action<SW_FaqData>(this.attach_SW_FaqDatas), new Action<SW_FaqData>(this.detach_SW_FaqDatas));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int FAQId
	{
		get
		{
			return this._FAQId;
		}
		set
		{
			if ((this._FAQId != value))
			{
				this.OnFAQIdChanging(value);
				this.SendPropertyChanging();
				this._FAQId = value;
				this.SendPropertyChanged("FAQId");
				this.OnFAQIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQAddedByUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid FAQAddedByUserId
	{
		get
		{
			return this._FAQAddedByUserId;
		}
		set
		{
			if ((this._FAQAddedByUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFAQAddedByUserIdChanging(value);
				this.SendPropertyChanging();
				this._FAQAddedByUserId = value;
				this.SendPropertyChanged("FAQAddedByUserId");
				this.OnFAQAddedByUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQEditByUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid FAQEditByUserId
	{
		get
		{
			return this._FAQEditByUserId;
		}
		set
		{
			if ((this._FAQEditByUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFAQEditByUserIdChanging(value);
				this.SendPropertyChanging();
				this._FAQEditByUserId = value;
				this.SendPropertyChanged("FAQEditByUserId");
				this.OnFAQEditByUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime FAQAddedDate
	{
		get
		{
			return this._FAQAddedDate;
		}
		set
		{
			if ((this._FAQAddedDate != value))
			{
				this.OnFAQAddedDateChanging(value);
				this.SendPropertyChanging();
				this._FAQAddedDate = value;
				this.SendPropertyChanged("FAQAddedDate");
				this.OnFAQAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime FAQEditDate
	{
		get
		{
			return this._FAQEditDate;
		}
		set
		{
			if ((this._FAQEditDate != value))
			{
				this.OnFAQEditDateChanging(value);
				this.SendPropertyChanging();
				this._FAQEditDate = value;
				this.SendPropertyChanged("FAQEditDate");
				this.OnFAQEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Faq_SW_FaqData", Storage="_SW_FaqDatas", ThisKey="FAQId", OtherKey="FAQId")]
	public EntitySet<SW_FaqData> SW_FaqDatas
	{
		get
		{
			return this._SW_FaqDatas;
		}
		set
		{
			this._SW_FaqDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Faq", Storage="_aspnet_User", ThisKey="FAQAddedByUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_Faqs.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_Faqs.Add(this);
					this._FAQAddedByUserId = value.UserId;
				}
				else
				{
					this._FAQAddedByUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Faq1", Storage="_aspnet_User1", ThisKey="FAQEditByUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_Faqs1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_Faqs1.Add(this);
					this._FAQEditByUserId = value.UserId;
				}
				else
				{
					this._FAQEditByUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_FaqDatas(SW_FaqData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Faq = this;
	}
	
	private void detach_SW_FaqDatas(SW_FaqData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Faq = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_FaqData")]
public partial class SW_FaqData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _FAQId;
	
	private string _FAQQuestion;
	
	private string _FAQAnswer;
	
	private EntityRef<SW_Faq> _SW_Faq;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnFAQIdChanging(int value);
    partial void OnFAQIdChanged();
    partial void OnFAQQuestionChanging(string value);
    partial void OnFAQQuestionChanged();
    partial void OnFAQAnswerChanging(string value);
    partial void OnFAQAnswerChanged();
    #endregion
	
	public SW_FaqData()
	{
		this._SW_Faq = default(EntityRef<SW_Faq>);
		this._SW_Lang = default(EntityRef<SW_Lang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int FAQId
	{
		get
		{
			return this._FAQId;
		}
		set
		{
			if ((this._FAQId != value))
			{
				if (this._SW_Faq.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFAQIdChanging(value);
				this.SendPropertyChanging();
				this._FAQId = value;
				this.SendPropertyChanged("FAQId");
				this.OnFAQIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQQuestion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string FAQQuestion
	{
		get
		{
			return this._FAQQuestion;
		}
		set
		{
			if ((this._FAQQuestion != value))
			{
				this.OnFAQQuestionChanging(value);
				this.SendPropertyChanging();
				this._FAQQuestion = value;
				this.SendPropertyChanged("FAQQuestion");
				this.OnFAQQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQAnswer", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string FAQAnswer
	{
		get
		{
			return this._FAQAnswer;
		}
		set
		{
			if ((this._FAQAnswer != value))
			{
				this.OnFAQAnswerChanging(value);
				this.SendPropertyChanging();
				this._FAQAnswer = value;
				this.SendPropertyChanged("FAQAnswer");
				this.OnFAQAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Faq_SW_FaqData", Storage="_SW_Faq", ThisKey="FAQId", OtherKey="FAQId", IsForeignKey=true)]
	public SW_Faq SW_Faq
	{
		get
		{
			return this._SW_Faq.Entity;
		}
		set
		{
			SW_Faq previousValue = this._SW_Faq.Entity;
			if (((previousValue != value) 
						|| (this._SW_Faq.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Faq.Entity = null;
					previousValue.SW_FaqDatas.Remove(this);
				}
				this._SW_Faq.Entity = value;
				if ((value != null))
				{
					value.SW_FaqDatas.Add(this);
					this._FAQId = value.FAQId;
				}
				else
				{
					this._FAQId = default(int);
				}
				this.SendPropertyChanged("SW_Faq");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_FaqData", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_FaqDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_FaqDatas.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarContinentData")]
public partial class SW_SearchWarContinentData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _SearchWarContinentId;
	
	private string _SearchWarContinentName;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
	private EntityRef<SW_SearchWarContinent> _SW_SearchWarContinent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnSearchWarContinentIdChanging(int value);
    partial void OnSearchWarContinentIdChanged();
    partial void OnSearchWarContinentNameChanging(string value);
    partial void OnSearchWarContinentNameChanged();
    #endregion
	
	public SW_SearchWarContinentData()
	{
		this._SW_Lang = default(EntityRef<SW_Lang>);
		this._SW_SearchWarContinent = default(EntityRef<SW_SearchWarContinent>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SearchWarContinentId
	{
		get
		{
			return this._SearchWarContinentId;
		}
		set
		{
			if ((this._SearchWarContinentId != value))
			{
				if (this._SW_SearchWarContinent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarContinentIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentId = value;
				this.SendPropertyChanged("SearchWarContinentId");
				this.OnSearchWarContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentName", DbType="VarChar(80)")]
	public string SearchWarContinentName
	{
		get
		{
			return this._SearchWarContinentName;
		}
		set
		{
			if ((this._SearchWarContinentName != value))
			{
				this.OnSearchWarContinentNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentName = value;
				this.SendPropertyChanged("SearchWarContinentName");
				this.OnSearchWarContinentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarContinentData", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_SearchWarContinentDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarContinentDatas.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWarContinentData", Storage="_SW_SearchWarContinent", ThisKey="SearchWarContinentId", OtherKey="SearchWarContinentId", IsForeignKey=true)]
	public SW_SearchWarContinent SW_SearchWarContinent
	{
		get
		{
			return this._SW_SearchWarContinent.Entity;
		}
		set
		{
			SW_SearchWarContinent previousValue = this._SW_SearchWarContinent.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarContinent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarContinent.Entity = null;
					previousValue.SW_SearchWarContinentDatas.Remove(this);
				}
				this._SW_SearchWarContinent.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarContinentDatas.Add(this);
					this._SearchWarContinentId = value.SearchWarContinentId;
				}
				else
				{
					this._SearchWarContinentId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarContinent");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarCountry")]
public partial class SW_SearchWarCountry : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SearchWarCountryId;
	
	private System.DateTime _SearchWarCountryAddedDate;
	
	private System.DateTime _SearchWarCountryEditDate;
	
	private System.Guid _SearchWarCountryAddedUserId;
	
	private System.Guid _SearchWarCountryEditUserId;
	
	private int _SearchWarContinentId;
	
	private EntitySet<SW_SearchWarCountryData> _SW_SearchWarCountryDatas;
	
	private EntitySet<SW_SearchWarCountryData1> _SW_SearchWarCountryData1s;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars1;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
	private EntityRef<SW_SearchWarContinent> _SW_SearchWarContinent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarCountryIdChanging(int value);
    partial void OnSearchWarCountryIdChanged();
    partial void OnSearchWarCountryAddedDateChanging(System.DateTime value);
    partial void OnSearchWarCountryAddedDateChanged();
    partial void OnSearchWarCountryEditDateChanging(System.DateTime value);
    partial void OnSearchWarCountryEditDateChanged();
    partial void OnSearchWarCountryAddedUserIdChanging(System.Guid value);
    partial void OnSearchWarCountryAddedUserIdChanged();
    partial void OnSearchWarCountryEditUserIdChanging(System.Guid value);
    partial void OnSearchWarCountryEditUserIdChanged();
    partial void OnSearchWarContinentIdChanging(int value);
    partial void OnSearchWarContinentIdChanged();
    #endregion
	
	public SW_SearchWarCountry()
	{
		this._SW_SearchWarCountryDatas = new EntitySet<SW_SearchWarCountryData>(new Action<SW_SearchWarCountryData>(this.attach_SW_SearchWarCountryDatas), new Action<SW_SearchWarCountryData>(this.detach_SW_SearchWarCountryDatas));
		this._SW_SearchWarCountryData1s = new EntitySet<SW_SearchWarCountryData1>(new Action<SW_SearchWarCountryData1>(this.attach_SW_SearchWarCountryData1s), new Action<SW_SearchWarCountryData1>(this.detach_SW_SearchWarCountryData1s));
		this._SW_SearchWars = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars), new Action<SW_SearchWar>(this.detach_SW_SearchWars));
		this._SW_SearchWars1 = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars1), new Action<SW_SearchWar>(this.detach_SW_SearchWars1));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		this._SW_SearchWarContinent = default(EntityRef<SW_SearchWarContinent>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SearchWarCountryId
	{
		get
		{
			return this._SearchWarCountryId;
		}
		set
		{
			if ((this._SearchWarCountryId != value))
			{
				this.OnSearchWarCountryIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryId = value;
				this.SendPropertyChanged("SearchWarCountryId");
				this.OnSearchWarCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarCountryAddedDate
	{
		get
		{
			return this._SearchWarCountryAddedDate;
		}
		set
		{
			if ((this._SearchWarCountryAddedDate != value))
			{
				this.OnSearchWarCountryAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryAddedDate = value;
				this.SendPropertyChanged("SearchWarCountryAddedDate");
				this.OnSearchWarCountryAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarCountryEditDate
	{
		get
		{
			return this._SearchWarCountryEditDate;
		}
		set
		{
			if ((this._SearchWarCountryEditDate != value))
			{
				this.OnSearchWarCountryEditDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryEditDate = value;
				this.SendPropertyChanged("SearchWarCountryEditDate");
				this.OnSearchWarCountryEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarCountryAddedUserId
	{
		get
		{
			return this._SearchWarCountryAddedUserId;
		}
		set
		{
			if ((this._SearchWarCountryAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarCountryAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryAddedUserId = value;
				this.SendPropertyChanged("SearchWarCountryAddedUserId");
				this.OnSearchWarCountryAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarCountryEditUserId
	{
		get
		{
			return this._SearchWarCountryEditUserId;
		}
		set
		{
			if ((this._SearchWarCountryEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarCountryEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryEditUserId = value;
				this.SendPropertyChanged("SearchWarCountryEditUserId");
				this.OnSearchWarCountryEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentId", DbType="Int NOT NULL")]
	public int SearchWarContinentId
	{
		get
		{
			return this._SearchWarContinentId;
		}
		set
		{
			if ((this._SearchWarContinentId != value))
			{
				if (this._SW_SearchWarContinent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarContinentIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentId = value;
				this.SendPropertyChanged("SearchWarContinentId");
				this.OnSearchWarContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWarCountryData", Storage="_SW_SearchWarCountryDatas", ThisKey="SearchWarCountryId", OtherKey="SearchWarCountrytId")]
	public EntitySet<SW_SearchWarCountryData> SW_SearchWarCountryDatas
	{
		get
		{
			return this._SW_SearchWarCountryDatas;
		}
		set
		{
			this._SW_SearchWarCountryDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWarCountryData1", Storage="_SW_SearchWarCountryData1s", ThisKey="SearchWarCountryId", OtherKey="SearchWarCountrytId")]
	public EntitySet<SW_SearchWarCountryData1> SW_SearchWarCountryData1s
	{
		get
		{
			return this._SW_SearchWarCountryData1s;
		}
		set
		{
			this._SW_SearchWarCountryData1s.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWar", Storage="_SW_SearchWars", ThisKey="SearchWarCountryId", OtherKey="SearchWarSearchCountryId")]
	public EntitySet<SW_SearchWar> SW_SearchWars
	{
		get
		{
			return this._SW_SearchWars;
		}
		set
		{
			this._SW_SearchWars.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWar1", Storage="_SW_SearchWars1", ThisKey="SearchWarCountryId", OtherKey="SearchWarClanCountryId")]
	public EntitySet<SW_SearchWar> SW_SearchWars1
	{
		get
		{
			return this._SW_SearchWars1;
		}
		set
		{
			this._SW_SearchWars1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarCountry", Storage="_aspnet_User", ThisKey="SearchWarCountryAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SearchWarCountries.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountries.Add(this);
					this._SearchWarCountryAddedUserId = value.UserId;
				}
				else
				{
					this._SearchWarCountryAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarCountry1", Storage="_aspnet_User1", ThisKey="SearchWarCountryEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SearchWarCountries1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountries1.Add(this);
					this._SearchWarCountryEditUserId = value.UserId;
				}
				else
				{
					this._SearchWarCountryEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWarCountry", Storage="_SW_SearchWarContinent", ThisKey="SearchWarContinentId", OtherKey="SearchWarContinentId", IsForeignKey=true)]
	public SW_SearchWarContinent SW_SearchWarContinent
	{
		get
		{
			return this._SW_SearchWarContinent.Entity;
		}
		set
		{
			SW_SearchWarContinent previousValue = this._SW_SearchWarContinent.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarContinent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarContinent.Entity = null;
					previousValue.SW_SearchWarCountries.Remove(this);
				}
				this._SW_SearchWarContinent.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountries.Add(this);
					this._SearchWarContinentId = value.SearchWarContinentId;
				}
				else
				{
					this._SearchWarContinentId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarContinent");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SearchWarCountryDatas(SW_SearchWarCountryData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry = this;
	}
	
	private void detach_SW_SearchWarCountryDatas(SW_SearchWarCountryData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry = null;
	}
	
	private void attach_SW_SearchWarCountryData1s(SW_SearchWarCountryData1 entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry = this;
	}
	
	private void detach_SW_SearchWarCountryData1s(SW_SearchWarCountryData1 entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry = null;
	}
	
	private void attach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry = this;
	}
	
	private void detach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry = null;
	}
	
	private void attach_SW_SearchWars1(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry1 = this;
	}
	
	private void detach_SW_SearchWars1(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarCountry1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarCountryData")]
public partial class SW_SearchWarCountryData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _SearchWarCountrytId;
	
	private string _SearchWarCountryName;
	
	private string _SearchWarCountryTLD;
	
	private EntityRef<SW_SearchWarCountry> _SW_SearchWarCountry;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnSearchWarCountrytIdChanging(int value);
    partial void OnSearchWarCountrytIdChanged();
    partial void OnSearchWarCountryNameChanging(string value);
    partial void OnSearchWarCountryNameChanged();
    partial void OnSearchWarCountryTLDChanging(string value);
    partial void OnSearchWarCountryTLDChanged();
    #endregion
	
	public SW_SearchWarCountryData()
	{
		this._SW_SearchWarCountry = default(EntityRef<SW_SearchWarCountry>);
		this._SW_Lang = default(EntityRef<SW_Lang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountrytId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SearchWarCountrytId
	{
		get
		{
			return this._SearchWarCountrytId;
		}
		set
		{
			if ((this._SearchWarCountrytId != value))
			{
				if (this._SW_SearchWarCountry.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarCountrytIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountrytId = value;
				this.SendPropertyChanged("SearchWarCountrytId");
				this.OnSearchWarCountrytIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryName", DbType="VarChar(140) NOT NULL", CanBeNull=false)]
	public string SearchWarCountryName
	{
		get
		{
			return this._SearchWarCountryName;
		}
		set
		{
			if ((this._SearchWarCountryName != value))
			{
				this.OnSearchWarCountryNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryName = value;
				this.SendPropertyChanged("SearchWarCountryName");
				this.OnSearchWarCountryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryTLD", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string SearchWarCountryTLD
	{
		get
		{
			return this._SearchWarCountryTLD;
		}
		set
		{
			if ((this._SearchWarCountryTLD != value))
			{
				this.OnSearchWarCountryTLDChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryTLD = value;
				this.SendPropertyChanged("SearchWarCountryTLD");
				this.OnSearchWarCountryTLDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWarCountryData", Storage="_SW_SearchWarCountry", ThisKey="SearchWarCountrytId", OtherKey="SearchWarCountryId", IsForeignKey=true)]
	public SW_SearchWarCountry SW_SearchWarCountry
	{
		get
		{
			return this._SW_SearchWarCountry.Entity;
		}
		set
		{
			SW_SearchWarCountry previousValue = this._SW_SearchWarCountry.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarCountry.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarCountry.Entity = null;
					previousValue.SW_SearchWarCountryDatas.Remove(this);
				}
				this._SW_SearchWarCountry.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountryDatas.Add(this);
					this._SearchWarCountrytId = value.SearchWarCountryId;
				}
				else
				{
					this._SearchWarCountrytId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarCountry");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarCountryData", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_SearchWarCountryDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountryDatas.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarGame")]
public partial class SW_SearchWarGame : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SearchWarGameId;
	
	private string _SearchWarGameName;
	
	private System.DateTime _SearchWarGameAddedDate;
	
	private System.DateTime _SearchWarGameEditDate;
	
	private System.Guid _SearchWarGameAddedUserId;
	
	private System.Guid _SearchWarGameEditUserId;
	
	private EntitySet<SW_SearchWarGameType> _SW_SearchWarGameTypes;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarGameIdChanging(int value);
    partial void OnSearchWarGameIdChanged();
    partial void OnSearchWarGameNameChanging(string value);
    partial void OnSearchWarGameNameChanged();
    partial void OnSearchWarGameAddedDateChanging(System.DateTime value);
    partial void OnSearchWarGameAddedDateChanged();
    partial void OnSearchWarGameEditDateChanging(System.DateTime value);
    partial void OnSearchWarGameEditDateChanged();
    partial void OnSearchWarGameAddedUserIdChanging(System.Guid value);
    partial void OnSearchWarGameAddedUserIdChanged();
    partial void OnSearchWarGameEditUserIdChanging(System.Guid value);
    partial void OnSearchWarGameEditUserIdChanged();
    #endregion
	
	public SW_SearchWarGame()
	{
		this._SW_SearchWarGameTypes = new EntitySet<SW_SearchWarGameType>(new Action<SW_SearchWarGameType>(this.attach_SW_SearchWarGameTypes), new Action<SW_SearchWarGameType>(this.detach_SW_SearchWarGameTypes));
		this._SW_SearchWars = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars), new Action<SW_SearchWar>(this.detach_SW_SearchWars));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SearchWarGameId
	{
		get
		{
			return this._SearchWarGameId;
		}
		set
		{
			if ((this._SearchWarGameId != value))
			{
				this.OnSearchWarGameIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameId = value;
				this.SendPropertyChanged("SearchWarGameId");
				this.OnSearchWarGameIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string SearchWarGameName
	{
		get
		{
			return this._SearchWarGameName;
		}
		set
		{
			if ((this._SearchWarGameName != value))
			{
				this.OnSearchWarGameNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameName = value;
				this.SendPropertyChanged("SearchWarGameName");
				this.OnSearchWarGameNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarGameAddedDate
	{
		get
		{
			return this._SearchWarGameAddedDate;
		}
		set
		{
			if ((this._SearchWarGameAddedDate != value))
			{
				this.OnSearchWarGameAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameAddedDate = value;
				this.SendPropertyChanged("SearchWarGameAddedDate");
				this.OnSearchWarGameAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarGameEditDate
	{
		get
		{
			return this._SearchWarGameEditDate;
		}
		set
		{
			if ((this._SearchWarGameEditDate != value))
			{
				this.OnSearchWarGameEditDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameEditDate = value;
				this.SendPropertyChanged("SearchWarGameEditDate");
				this.OnSearchWarGameEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarGameAddedUserId
	{
		get
		{
			return this._SearchWarGameAddedUserId;
		}
		set
		{
			if ((this._SearchWarGameAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarGameAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameAddedUserId = value;
				this.SendPropertyChanged("SearchWarGameAddedUserId");
				this.OnSearchWarGameAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarGameEditUserId
	{
		get
		{
			return this._SearchWarGameEditUserId;
		}
		set
		{
			if ((this._SearchWarGameEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarGameEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameEditUserId = value;
				this.SendPropertyChanged("SearchWarGameEditUserId");
				this.OnSearchWarGameEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarGame_SW_SearchWarGameType", Storage="_SW_SearchWarGameTypes", ThisKey="SearchWarGameId", OtherKey="SearchWarGameId")]
	public EntitySet<SW_SearchWarGameType> SW_SearchWarGameTypes
	{
		get
		{
			return this._SW_SearchWarGameTypes;
		}
		set
		{
			this._SW_SearchWarGameTypes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarGame_SW_SearchWar", Storage="_SW_SearchWars", ThisKey="SearchWarGameId", OtherKey="SearchWarSearchGameId")]
	public EntitySet<SW_SearchWar> SW_SearchWars
	{
		get
		{
			return this._SW_SearchWars;
		}
		set
		{
			this._SW_SearchWars.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGame", Storage="_aspnet_User", ThisKey="SearchWarGameAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SearchWarGames.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarGames.Add(this);
					this._SearchWarGameAddedUserId = value.UserId;
				}
				else
				{
					this._SearchWarGameAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGame1", Storage="_aspnet_User1", ThisKey="SearchWarGameEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SearchWarGames1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarGames1.Add(this);
					this._SearchWarGameEditUserId = value.UserId;
				}
				else
				{
					this._SearchWarGameEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SearchWarGameTypes(SW_SearchWarGameType entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarGame = this;
	}
	
	private void detach_SW_SearchWarGameTypes(SW_SearchWarGameType entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarGame = null;
	}
	
	private void attach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarGame = this;
	}
	
	private void detach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarGame = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarGameType")]
public partial class SW_SearchWarGameType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SearchWarGameTypeId;
	
	private int _SearchWarGameId;
	
	private string _SearchWarGameTypeName;
	
	private System.DateTime _SearchWarGameTypeAddedDate;
	
	private System.DateTime _SearchWarGameTypeEditDate;
	
	private System.Guid _SearchWarGameTypeAddedUserId;
	
	private System.Guid _SearchWarGameTypeEditUserId;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
	private EntityRef<SW_SearchWarGame> _SW_SearchWarGame;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarGameTypeIdChanging(int value);
    partial void OnSearchWarGameTypeIdChanged();
    partial void OnSearchWarGameIdChanging(int value);
    partial void OnSearchWarGameIdChanged();
    partial void OnSearchWarGameTypeNameChanging(string value);
    partial void OnSearchWarGameTypeNameChanged();
    partial void OnSearchWarGameTypeAddedDateChanging(System.DateTime value);
    partial void OnSearchWarGameTypeAddedDateChanged();
    partial void OnSearchWarGameTypeEditDateChanging(System.DateTime value);
    partial void OnSearchWarGameTypeEditDateChanged();
    partial void OnSearchWarGameTypeAddedUserIdChanging(System.Guid value);
    partial void OnSearchWarGameTypeAddedUserIdChanged();
    partial void OnSearchWarGameTypeEditUserIdChanging(System.Guid value);
    partial void OnSearchWarGameTypeEditUserIdChanged();
    #endregion
	
	public SW_SearchWarGameType()
	{
		this._SW_SearchWars = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars), new Action<SW_SearchWar>(this.detach_SW_SearchWars));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		this._SW_SearchWarGame = default(EntityRef<SW_SearchWarGame>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SearchWarGameTypeId
	{
		get
		{
			return this._SearchWarGameTypeId;
		}
		set
		{
			if ((this._SearchWarGameTypeId != value))
			{
				this.OnSearchWarGameTypeIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameTypeId = value;
				this.SendPropertyChanged("SearchWarGameTypeId");
				this.OnSearchWarGameTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameId", DbType="Int NOT NULL")]
	public int SearchWarGameId
	{
		get
		{
			return this._SearchWarGameId;
		}
		set
		{
			if ((this._SearchWarGameId != value))
			{
				if (this._SW_SearchWarGame.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarGameIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameId = value;
				this.SendPropertyChanged("SearchWarGameId");
				this.OnSearchWarGameIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameTypeName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
	public string SearchWarGameTypeName
	{
		get
		{
			return this._SearchWarGameTypeName;
		}
		set
		{
			if ((this._SearchWarGameTypeName != value))
			{
				this.OnSearchWarGameTypeNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameTypeName = value;
				this.SendPropertyChanged("SearchWarGameTypeName");
				this.OnSearchWarGameTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameTypeAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarGameTypeAddedDate
	{
		get
		{
			return this._SearchWarGameTypeAddedDate;
		}
		set
		{
			if ((this._SearchWarGameTypeAddedDate != value))
			{
				this.OnSearchWarGameTypeAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameTypeAddedDate = value;
				this.SendPropertyChanged("SearchWarGameTypeAddedDate");
				this.OnSearchWarGameTypeAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameTypeEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarGameTypeEditDate
	{
		get
		{
			return this._SearchWarGameTypeEditDate;
		}
		set
		{
			if ((this._SearchWarGameTypeEditDate != value))
			{
				this.OnSearchWarGameTypeEditDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameTypeEditDate = value;
				this.SendPropertyChanged("SearchWarGameTypeEditDate");
				this.OnSearchWarGameTypeEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameTypeAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarGameTypeAddedUserId
	{
		get
		{
			return this._SearchWarGameTypeAddedUserId;
		}
		set
		{
			if ((this._SearchWarGameTypeAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarGameTypeAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameTypeAddedUserId = value;
				this.SendPropertyChanged("SearchWarGameTypeAddedUserId");
				this.OnSearchWarGameTypeAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarGameTypeEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarGameTypeEditUserId
	{
		get
		{
			return this._SearchWarGameTypeEditUserId;
		}
		set
		{
			if ((this._SearchWarGameTypeEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarGameTypeEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarGameTypeEditUserId = value;
				this.SendPropertyChanged("SearchWarGameTypeEditUserId");
				this.OnSearchWarGameTypeEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarGameType_SW_SearchWar", Storage="_SW_SearchWars", ThisKey="SearchWarGameTypeId", OtherKey="SearchWarSearchGameTypeId")]
	public EntitySet<SW_SearchWar> SW_SearchWars
	{
		get
		{
			return this._SW_SearchWars;
		}
		set
		{
			this._SW_SearchWars.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGameType", Storage="_aspnet_User", ThisKey="SearchWarGameTypeAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SearchWarGameTypes.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarGameTypes.Add(this);
					this._SearchWarGameTypeAddedUserId = value.UserId;
				}
				else
				{
					this._SearchWarGameTypeAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarGameType1", Storage="_aspnet_User1", ThisKey="SearchWarGameTypeEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SearchWarGameTypes1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarGameTypes1.Add(this);
					this._SearchWarGameTypeEditUserId = value.UserId;
				}
				else
				{
					this._SearchWarGameTypeEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarGame_SW_SearchWarGameType", Storage="_SW_SearchWarGame", ThisKey="SearchWarGameId", OtherKey="SearchWarGameId", IsForeignKey=true)]
	public SW_SearchWarGame SW_SearchWarGame
	{
		get
		{
			return this._SW_SearchWarGame.Entity;
		}
		set
		{
			SW_SearchWarGame previousValue = this._SW_SearchWarGame.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarGame.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarGame.Entity = null;
					previousValue.SW_SearchWarGameTypes.Remove(this);
				}
				this._SW_SearchWarGame.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarGameTypes.Add(this);
					this._SearchWarGameId = value.SearchWarGameId;
				}
				else
				{
					this._SearchWarGameId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarGame");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarGameType = this;
	}
	
	private void detach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarGameType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarPlayer")]
public partial class SW_SearchWarPlayer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SearchWarPlayerId;
	
	private string _SearchWarNick;
	
	private string _SearchWarName;
	
	private System.Guid _SearchWarId;
	
	private EntityRef<SW_SearchWar> _SW_SearchWar;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarPlayerIdChanging(int value);
    partial void OnSearchWarPlayerIdChanged();
    partial void OnSearchWarNickChanging(string value);
    partial void OnSearchWarNickChanged();
    partial void OnSearchWarNameChanging(string value);
    partial void OnSearchWarNameChanged();
    partial void OnSearchWarIdChanging(System.Guid value);
    partial void OnSearchWarIdChanged();
    #endregion
	
	public SW_SearchWarPlayer()
	{
		this._SW_SearchWar = default(EntityRef<SW_SearchWar>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarPlayerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SearchWarPlayerId
	{
		get
		{
			return this._SearchWarPlayerId;
		}
		set
		{
			if ((this._SearchWarPlayerId != value))
			{
				this.OnSearchWarPlayerIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarPlayerId = value;
				this.SendPropertyChanged("SearchWarPlayerId");
				this.OnSearchWarPlayerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarNick", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string SearchWarNick
	{
		get
		{
			return this._SearchWarNick;
		}
		set
		{
			if ((this._SearchWarNick != value))
			{
				this.OnSearchWarNickChanging(value);
				this.SendPropertyChanging();
				this._SearchWarNick = value;
				this.SendPropertyChanged("SearchWarNick");
				this.OnSearchWarNickChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarName", DbType="VarChar(150)")]
	public string SearchWarName
	{
		get
		{
			return this._SearchWarName;
		}
		set
		{
			if ((this._SearchWarName != value))
			{
				this.OnSearchWarNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarName = value;
				this.SendPropertyChanged("SearchWarName");
				this.OnSearchWarNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarId
	{
		get
		{
			return this._SearchWarId;
		}
		set
		{
			if ((this._SearchWarId != value))
			{
				if (this._SW_SearchWar.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarId = value;
				this.SendPropertyChanged("SearchWarId");
				this.OnSearchWarIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWar_SW_SearchWarPlayer", Storage="_SW_SearchWar", ThisKey="SearchWarId", OtherKey="SearchWarId", IsForeignKey=true)]
	public SW_SearchWar SW_SearchWar
	{
		get
		{
			return this._SW_SearchWar.Entity;
		}
		set
		{
			SW_SearchWar previousValue = this._SW_SearchWar.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWar.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWar.Entity = null;
					previousValue.SW_SearchWarPlayers.Remove(this);
				}
				this._SW_SearchWar.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarPlayers.Add(this);
					this._SearchWarId = value.SearchWarId;
				}
				else
				{
					this._SearchWarId = default(System.Guid);
				}
				this.SendPropertyChanged("SW_SearchWar");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarSkill")]
public partial class SW_SearchWarSkill : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SearchWarSkillId;
	
	private int _SearchWarSkillSort;
	
	private System.DateTime _SearchWarSkillAddedDatetime;
	
	private System.DateTime _SearchWarSkillEditDatetime;
	
	private System.Guid _SearchWarSkillAddedUserId;
	
	private System.Guid _SearchWarSkillEditUserId;
	
	private EntitySet<SW_SearchWarSkillData> _SW_SearchWarSkillDatas;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars1;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarSkillIdChanging(int value);
    partial void OnSearchWarSkillIdChanged();
    partial void OnSearchWarSkillSortChanging(int value);
    partial void OnSearchWarSkillSortChanged();
    partial void OnSearchWarSkillAddedDatetimeChanging(System.DateTime value);
    partial void OnSearchWarSkillAddedDatetimeChanged();
    partial void OnSearchWarSkillEditDatetimeChanging(System.DateTime value);
    partial void OnSearchWarSkillEditDatetimeChanged();
    partial void OnSearchWarSkillAddedUserIdChanging(System.Guid value);
    partial void OnSearchWarSkillAddedUserIdChanged();
    partial void OnSearchWarSkillEditUserIdChanging(System.Guid value);
    partial void OnSearchWarSkillEditUserIdChanged();
    #endregion
	
	public SW_SearchWarSkill()
	{
		this._SW_SearchWarSkillDatas = new EntitySet<SW_SearchWarSkillData>(new Action<SW_SearchWarSkillData>(this.attach_SW_SearchWarSkillDatas), new Action<SW_SearchWarSkillData>(this.detach_SW_SearchWarSkillDatas));
		this._SW_SearchWars = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars), new Action<SW_SearchWar>(this.detach_SW_SearchWars));
		this._SW_SearchWars1 = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars1), new Action<SW_SearchWar>(this.detach_SW_SearchWars1));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SearchWarSkillId
	{
		get
		{
			return this._SearchWarSkillId;
		}
		set
		{
			if ((this._SearchWarSkillId != value))
			{
				this.OnSearchWarSkillIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillId = value;
				this.SendPropertyChanged("SearchWarSkillId");
				this.OnSearchWarSkillIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillSort", DbType="Int NOT NULL")]
	public int SearchWarSkillSort
	{
		get
		{
			return this._SearchWarSkillSort;
		}
		set
		{
			if ((this._SearchWarSkillSort != value))
			{
				this.OnSearchWarSkillSortChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillSort = value;
				this.SendPropertyChanged("SearchWarSkillSort");
				this.OnSearchWarSkillSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillAddedDatetime", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarSkillAddedDatetime
	{
		get
		{
			return this._SearchWarSkillAddedDatetime;
		}
		set
		{
			if ((this._SearchWarSkillAddedDatetime != value))
			{
				this.OnSearchWarSkillAddedDatetimeChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillAddedDatetime = value;
				this.SendPropertyChanged("SearchWarSkillAddedDatetime");
				this.OnSearchWarSkillAddedDatetimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillEditDatetime", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarSkillEditDatetime
	{
		get
		{
			return this._SearchWarSkillEditDatetime;
		}
		set
		{
			if ((this._SearchWarSkillEditDatetime != value))
			{
				this.OnSearchWarSkillEditDatetimeChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillEditDatetime = value;
				this.SendPropertyChanged("SearchWarSkillEditDatetime");
				this.OnSearchWarSkillEditDatetimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarSkillAddedUserId
	{
		get
		{
			return this._SearchWarSkillAddedUserId;
		}
		set
		{
			if ((this._SearchWarSkillAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSkillAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillAddedUserId = value;
				this.SendPropertyChanged("SearchWarSkillAddedUserId");
				this.OnSearchWarSkillAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarSkillEditUserId
	{
		get
		{
			return this._SearchWarSkillEditUserId;
		}
		set
		{
			if ((this._SearchWarSkillEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSkillEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillEditUserId = value;
				this.SendPropertyChanged("SearchWarSkillEditUserId");
				this.OnSearchWarSkillEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarSkill_SW_SearchWarSkillData", Storage="_SW_SearchWarSkillDatas", ThisKey="SearchWarSkillId", OtherKey="SearchWarSkillId")]
	public EntitySet<SW_SearchWarSkillData> SW_SearchWarSkillDatas
	{
		get
		{
			return this._SW_SearchWarSkillDatas;
		}
		set
		{
			this._SW_SearchWarSkillDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarSkill_SW_SearchWar", Storage="_SW_SearchWars", ThisKey="SearchWarSkillId", OtherKey="SearchWarSearchSkillId")]
	public EntitySet<SW_SearchWar> SW_SearchWars
	{
		get
		{
			return this._SW_SearchWars;
		}
		set
		{
			this._SW_SearchWars.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarSkill_SW_SearchWar1", Storage="_SW_SearchWars1", ThisKey="SearchWarSkillId", OtherKey="SearchWarClanSkillId")]
	public EntitySet<SW_SearchWar> SW_SearchWars1
	{
		get
		{
			return this._SW_SearchWars1;
		}
		set
		{
			this._SW_SearchWars1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarSkill", Storage="_aspnet_User", ThisKey="SearchWarSkillAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SearchWarSkills.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarSkills.Add(this);
					this._SearchWarSkillAddedUserId = value.UserId;
				}
				else
				{
					this._SearchWarSkillAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarSkill1", Storage="_aspnet_User1", ThisKey="SearchWarSkillEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SearchWarSkills1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarSkills1.Add(this);
					this._SearchWarSkillEditUserId = value.UserId;
				}
				else
				{
					this._SearchWarSkillEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SearchWarSkillDatas(SW_SearchWarSkillData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarSkill = this;
	}
	
	private void detach_SW_SearchWarSkillDatas(SW_SearchWarSkillData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarSkill = null;
	}
	
	private void attach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarSkill = this;
	}
	
	private void detach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarSkill = null;
	}
	
	private void attach_SW_SearchWars1(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarSkill1 = this;
	}
	
	private void detach_SW_SearchWars1(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarSkill1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SiteMapNodeMetaTags")]
public partial class SW_SiteMapNodeMetaTag : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MetaTagsId;
	
	private System.Guid _MetaTagsAddedUserId;
	
	private System.Guid _MetaTagsEditUserId;
	
	private System.DateTime _MetaTagsEditDate;
	
	private System.DateTime _MetaTagsAddedDate;
	
	private EntitySet<SW_SiteMapNodeMetaTagsData> _SW_SiteMapNodeMetaTagsDatas;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
	private EntityRef<SW_SiteMapNode> _SW_SiteMapNode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMetaTagsIdChanging(int value);
    partial void OnMetaTagsIdChanged();
    partial void OnMetaTagsAddedUserIdChanging(System.Guid value);
    partial void OnMetaTagsAddedUserIdChanged();
    partial void OnMetaTagsEditUserIdChanging(System.Guid value);
    partial void OnMetaTagsEditUserIdChanged();
    partial void OnMetaTagsEditDateChanging(System.DateTime value);
    partial void OnMetaTagsEditDateChanged();
    partial void OnMetaTagsAddedDateChanging(System.DateTime value);
    partial void OnMetaTagsAddedDateChanged();
    #endregion
	
	public SW_SiteMapNodeMetaTag()
	{
		this._SW_SiteMapNodeMetaTagsDatas = new EntitySet<SW_SiteMapNodeMetaTagsData>(new Action<SW_SiteMapNodeMetaTagsData>(this.attach_SW_SiteMapNodeMetaTagsDatas), new Action<SW_SiteMapNodeMetaTagsData>(this.detach_SW_SiteMapNodeMetaTagsDatas));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		this._SW_SiteMapNode = default(EntityRef<SW_SiteMapNode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MetaTagsId
	{
		get
		{
			return this._MetaTagsId;
		}
		set
		{
			if ((this._MetaTagsId != value))
			{
				if (this._SW_SiteMapNode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMetaTagsIdChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsId = value;
				this.SendPropertyChanged("MetaTagsId");
				this.OnMetaTagsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MetaTagsAddedUserId
	{
		get
		{
			return this._MetaTagsAddedUserId;
		}
		set
		{
			if ((this._MetaTagsAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMetaTagsAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsAddedUserId = value;
				this.SendPropertyChanged("MetaTagsAddedUserId");
				this.OnMetaTagsAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MetaTagsEditUserId
	{
		get
		{
			return this._MetaTagsEditUserId;
		}
		set
		{
			if ((this._MetaTagsEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMetaTagsEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsEditUserId = value;
				this.SendPropertyChanged("MetaTagsEditUserId");
				this.OnMetaTagsEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime MetaTagsEditDate
	{
		get
		{
			return this._MetaTagsEditDate;
		}
		set
		{
			if ((this._MetaTagsEditDate != value))
			{
				this.OnMetaTagsEditDateChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsEditDate = value;
				this.SendPropertyChanged("MetaTagsEditDate");
				this.OnMetaTagsEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime MetaTagsAddedDate
	{
		get
		{
			return this._MetaTagsAddedDate;
		}
		set
		{
			if ((this._MetaTagsAddedDate != value))
			{
				this.OnMetaTagsAddedDateChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsAddedDate = value;
				this.SendPropertyChanged("MetaTagsAddedDate");
				this.OnMetaTagsAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNodeMetaTag_SW_SiteMapNodeMetaTagsData", Storage="_SW_SiteMapNodeMetaTagsDatas", ThisKey="MetaTagsId", OtherKey="MetaTagsId")]
	public EntitySet<SW_SiteMapNodeMetaTagsData> SW_SiteMapNodeMetaTagsDatas
	{
		get
		{
			return this._SW_SiteMapNodeMetaTagsDatas;
		}
		set
		{
			this._SW_SiteMapNodeMetaTagsDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNodeMetaTag", Storage="_aspnet_User", ThisKey="MetaTagsAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SiteMapNodeMetaTags.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeMetaTags.Add(this);
					this._MetaTagsAddedUserId = value.UserId;
				}
				else
				{
					this._MetaTagsAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNodeMetaTag1", Storage="_aspnet_User1", ThisKey="MetaTagsEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SiteMapNodeMetaTags1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeMetaTags1.Add(this);
					this._MetaTagsEditUserId = value.UserId;
				}
				else
				{
					this._MetaTagsEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNode_SW_SiteMapNodeMetaTag", Storage="_SW_SiteMapNode", ThisKey="MetaTagsId", OtherKey="SiteMapNodeId", IsForeignKey=true)]
	public SW_SiteMapNode SW_SiteMapNode
	{
		get
		{
			return this._SW_SiteMapNode.Entity;
		}
		set
		{
			SW_SiteMapNode previousValue = this._SW_SiteMapNode.Entity;
			if (((previousValue != value) 
						|| (this._SW_SiteMapNode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SiteMapNode.Entity = null;
					previousValue.SW_SiteMapNodeMetaTag = null;
				}
				this._SW_SiteMapNode.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeMetaTag = this;
					this._MetaTagsId = value.SiteMapNodeId;
				}
				else
				{
					this._MetaTagsId = default(int);
				}
				this.SendPropertyChanged("SW_SiteMapNode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SiteMapNodeMetaTagsDatas(SW_SiteMapNodeMetaTagsData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SiteMapNodeMetaTag = this;
	}
	
	private void detach_SW_SiteMapNodeMetaTagsDatas(SW_SiteMapNodeMetaTagsData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SiteMapNodeMetaTag = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SiteMapNodeMetaTagsData")]
public partial class SW_SiteMapNodeMetaTagsData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _MetaTagsId;
	
	private string _MetaTagsTitle;
	
	private string _MetaTagsDescription;
	
	private string _MetaTagsKeywords;
	
	private string _MetaTagsLanguage;
	
	private string _MetaTagsAuthor;
	
	private string _MetaTagsPublisher;
	
	private string _MetaTagsCopyright;
	
	private string _MetaTagsRevisitAfter;
	
	private string _MetaTagsRobots;
	
	private string _MetaTagsCache;
	
	private string _MetaTagsCacheControl;
	
	private EntityRef<SW_SiteMapNodeMetaTag> _SW_SiteMapNodeMetaTag;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnMetaTagsIdChanging(int value);
    partial void OnMetaTagsIdChanged();
    partial void OnMetaTagsTitleChanging(string value);
    partial void OnMetaTagsTitleChanged();
    partial void OnMetaTagsDescriptionChanging(string value);
    partial void OnMetaTagsDescriptionChanged();
    partial void OnMetaTagsKeywordsChanging(string value);
    partial void OnMetaTagsKeywordsChanged();
    partial void OnMetaTagsLanguageChanging(string value);
    partial void OnMetaTagsLanguageChanged();
    partial void OnMetaTagsAuthorChanging(string value);
    partial void OnMetaTagsAuthorChanged();
    partial void OnMetaTagsPublisherChanging(string value);
    partial void OnMetaTagsPublisherChanged();
    partial void OnMetaTagsCopyrightChanging(string value);
    partial void OnMetaTagsCopyrightChanged();
    partial void OnMetaTagsRevisitAfterChanging(string value);
    partial void OnMetaTagsRevisitAfterChanged();
    partial void OnMetaTagsRobotsChanging(string value);
    partial void OnMetaTagsRobotsChanged();
    partial void OnMetaTagsCacheChanging(string value);
    partial void OnMetaTagsCacheChanged();
    partial void OnMetaTagsCacheControlChanging(string value);
    partial void OnMetaTagsCacheControlChanged();
    #endregion
	
	public SW_SiteMapNodeMetaTagsData()
	{
		this._SW_SiteMapNodeMetaTag = default(EntityRef<SW_SiteMapNodeMetaTag>);
		this._SW_Lang = default(EntityRef<SW_Lang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MetaTagsId
	{
		get
		{
			return this._MetaTagsId;
		}
		set
		{
			if ((this._MetaTagsId != value))
			{
				if (this._SW_SiteMapNodeMetaTag.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMetaTagsIdChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsId = value;
				this.SendPropertyChanged("MetaTagsId");
				this.OnMetaTagsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsTitle", DbType="VarChar(100)")]
	public string MetaTagsTitle
	{
		get
		{
			return this._MetaTagsTitle;
		}
		set
		{
			if ((this._MetaTagsTitle != value))
			{
				this.OnMetaTagsTitleChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsTitle = value;
				this.SendPropertyChanged("MetaTagsTitle");
				this.OnMetaTagsTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsDescription", DbType="VarChar(500)")]
	public string MetaTagsDescription
	{
		get
		{
			return this._MetaTagsDescription;
		}
		set
		{
			if ((this._MetaTagsDescription != value))
			{
				this.OnMetaTagsDescriptionChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsDescription = value;
				this.SendPropertyChanged("MetaTagsDescription");
				this.OnMetaTagsDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsKeywords", DbType="VarChar(250)")]
	public string MetaTagsKeywords
	{
		get
		{
			return this._MetaTagsKeywords;
		}
		set
		{
			if ((this._MetaTagsKeywords != value))
			{
				this.OnMetaTagsKeywordsChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsKeywords = value;
				this.SendPropertyChanged("MetaTagsKeywords");
				this.OnMetaTagsKeywordsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsLanguage", DbType="VarChar(6)")]
	public string MetaTagsLanguage
	{
		get
		{
			return this._MetaTagsLanguage;
		}
		set
		{
			if ((this._MetaTagsLanguage != value))
			{
				this.OnMetaTagsLanguageChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsLanguage = value;
				this.SendPropertyChanged("MetaTagsLanguage");
				this.OnMetaTagsLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsAuthor", DbType="VarChar(100)")]
	public string MetaTagsAuthor
	{
		get
		{
			return this._MetaTagsAuthor;
		}
		set
		{
			if ((this._MetaTagsAuthor != value))
			{
				this.OnMetaTagsAuthorChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsAuthor = value;
				this.SendPropertyChanged("MetaTagsAuthor");
				this.OnMetaTagsAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsPublisher", DbType="VarChar(100)")]
	public string MetaTagsPublisher
	{
		get
		{
			return this._MetaTagsPublisher;
		}
		set
		{
			if ((this._MetaTagsPublisher != value))
			{
				this.OnMetaTagsPublisherChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsPublisher = value;
				this.SendPropertyChanged("MetaTagsPublisher");
				this.OnMetaTagsPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsCopyright", DbType="VarChar(100)")]
	public string MetaTagsCopyright
	{
		get
		{
			return this._MetaTagsCopyright;
		}
		set
		{
			if ((this._MetaTagsCopyright != value))
			{
				this.OnMetaTagsCopyrightChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsCopyright = value;
				this.SendPropertyChanged("MetaTagsCopyright");
				this.OnMetaTagsCopyrightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsRevisitAfter", DbType="VarChar(50)")]
	public string MetaTagsRevisitAfter
	{
		get
		{
			return this._MetaTagsRevisitAfter;
		}
		set
		{
			if ((this._MetaTagsRevisitAfter != value))
			{
				this.OnMetaTagsRevisitAfterChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsRevisitAfter = value;
				this.SendPropertyChanged("MetaTagsRevisitAfter");
				this.OnMetaTagsRevisitAfterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsRobots", DbType="VarChar(80)")]
	public string MetaTagsRobots
	{
		get
		{
			return this._MetaTagsRobots;
		}
		set
		{
			if ((this._MetaTagsRobots != value))
			{
				this.OnMetaTagsRobotsChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsRobots = value;
				this.SendPropertyChanged("MetaTagsRobots");
				this.OnMetaTagsRobotsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsCache", DbType="VarChar(50)")]
	public string MetaTagsCache
	{
		get
		{
			return this._MetaTagsCache;
		}
		set
		{
			if ((this._MetaTagsCache != value))
			{
				this.OnMetaTagsCacheChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsCache = value;
				this.SendPropertyChanged("MetaTagsCache");
				this.OnMetaTagsCacheChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTagsCacheControl", DbType="VarChar(50)")]
	public string MetaTagsCacheControl
	{
		get
		{
			return this._MetaTagsCacheControl;
		}
		set
		{
			if ((this._MetaTagsCacheControl != value))
			{
				this.OnMetaTagsCacheControlChanging(value);
				this.SendPropertyChanging();
				this._MetaTagsCacheControl = value;
				this.SendPropertyChanged("MetaTagsCacheControl");
				this.OnMetaTagsCacheControlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNodeMetaTag_SW_SiteMapNodeMetaTagsData", Storage="_SW_SiteMapNodeMetaTag", ThisKey="MetaTagsId", OtherKey="MetaTagsId", IsForeignKey=true)]
	public SW_SiteMapNodeMetaTag SW_SiteMapNodeMetaTag
	{
		get
		{
			return this._SW_SiteMapNodeMetaTag.Entity;
		}
		set
		{
			SW_SiteMapNodeMetaTag previousValue = this._SW_SiteMapNodeMetaTag.Entity;
			if (((previousValue != value) 
						|| (this._SW_SiteMapNodeMetaTag.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SiteMapNodeMetaTag.Entity = null;
					previousValue.SW_SiteMapNodeMetaTagsDatas.Remove(this);
				}
				this._SW_SiteMapNodeMetaTag.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeMetaTagsDatas.Add(this);
					this._MetaTagsId = value.MetaTagsId;
				}
				else
				{
					this._MetaTagsId = default(int);
				}
				this.SendPropertyChanged("SW_SiteMapNodeMetaTag");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SiteMapNodeMetaTagsData", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_SiteMapNodeMetaTagsDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeMetaTagsDatas.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_Blog")]
public partial class SW_Blog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BlogId;
	
	private System.Guid _BlogAddedByUserId;
	
	private System.Guid _BlogEditByUserId;
	
	private System.DateTime _BlogAddedDate;
	
	private System.DateTime _BlogEditDate;
	
	private EntitySet<SW_BlogData> _SW_BlogDatas;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIdChanging(int value);
    partial void OnBlogIdChanged();
    partial void OnBlogAddedByUserIdChanging(System.Guid value);
    partial void OnBlogAddedByUserIdChanged();
    partial void OnBlogEditByUserIdChanging(System.Guid value);
    partial void OnBlogEditByUserIdChanged();
    partial void OnBlogAddedDateChanging(System.DateTime value);
    partial void OnBlogAddedDateChanged();
    partial void OnBlogEditDateChanging(System.DateTime value);
    partial void OnBlogEditDateChanged();
    #endregion
	
	public SW_Blog()
	{
		this._SW_BlogDatas = new EntitySet<SW_BlogData>(new Action<SW_BlogData>(this.attach_SW_BlogDatas), new Action<SW_BlogData>(this.detach_SW_BlogDatas));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BlogId
	{
		get
		{
			return this._BlogId;
		}
		set
		{
			if ((this._BlogId != value))
			{
				this.OnBlogIdChanging(value);
				this.SendPropertyChanging();
				this._BlogId = value;
				this.SendPropertyChanged("BlogId");
				this.OnBlogIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogAddedByUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid BlogAddedByUserId
	{
		get
		{
			return this._BlogAddedByUserId;
		}
		set
		{
			if ((this._BlogAddedByUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBlogAddedByUserIdChanging(value);
				this.SendPropertyChanging();
				this._BlogAddedByUserId = value;
				this.SendPropertyChanged("BlogAddedByUserId");
				this.OnBlogAddedByUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEditByUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid BlogEditByUserId
	{
		get
		{
			return this._BlogEditByUserId;
		}
		set
		{
			if ((this._BlogEditByUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBlogEditByUserIdChanging(value);
				this.SendPropertyChanging();
				this._BlogEditByUserId = value;
				this.SendPropertyChanged("BlogEditByUserId");
				this.OnBlogEditByUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime BlogAddedDate
	{
		get
		{
			return this._BlogAddedDate;
		}
		set
		{
			if ((this._BlogAddedDate != value))
			{
				this.OnBlogAddedDateChanging(value);
				this.SendPropertyChanging();
				this._BlogAddedDate = value;
				this.SendPropertyChanged("BlogAddedDate");
				this.OnBlogAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime BlogEditDate
	{
		get
		{
			return this._BlogEditDate;
		}
		set
		{
			if ((this._BlogEditDate != value))
			{
				this.OnBlogEditDateChanging(value);
				this.SendPropertyChanging();
				this._BlogEditDate = value;
				this.SendPropertyChanged("BlogEditDate");
				this.OnBlogEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Blog_SW_BlogData", Storage="_SW_BlogDatas", ThisKey="BlogId", OtherKey="BlogId")]
	public EntitySet<SW_BlogData> SW_BlogDatas
	{
		get
		{
			return this._SW_BlogDatas;
		}
		set
		{
			this._SW_BlogDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Blog", Storage="_aspnet_User", ThisKey="BlogAddedByUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_Blogs.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_Blogs.Add(this);
					this._BlogAddedByUserId = value.UserId;
				}
				else
				{
					this._BlogAddedByUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_Blog1", Storage="_aspnet_User1", ThisKey="BlogEditByUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_Blogs1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_Blogs1.Add(this);
					this._BlogEditByUserId = value.UserId;
				}
				else
				{
					this._BlogEditByUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_BlogDatas(SW_BlogData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Blog = this;
	}
	
	private void detach_SW_BlogDatas(SW_BlogData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Blog = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_BlogData")]
public partial class SW_BlogData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _BlogId;
	
	private string _BlogTitle;
	
	private string _BlogText;
	
	private EntityRef<SW_Blog> _SW_Blog;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnBlogIdChanging(int value);
    partial void OnBlogIdChanged();
    partial void OnBlogTitleChanging(string value);
    partial void OnBlogTitleChanged();
    partial void OnBlogTextChanging(string value);
    partial void OnBlogTextChanged();
    #endregion
	
	public SW_BlogData()
	{
		this._SW_Blog = default(EntityRef<SW_Blog>);
		this._SW_Lang = default(EntityRef<SW_Lang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int BlogId
	{
		get
		{
			return this._BlogId;
		}
		set
		{
			if ((this._BlogId != value))
			{
				if ((this._SW_Blog.HasLoadedOrAssignedValue || this._SW_Lang.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBlogIdChanging(value);
				this.SendPropertyChanging();
				this._BlogId = value;
				this.SendPropertyChanged("BlogId");
				this.OnBlogIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogTitle", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
	public string BlogTitle
	{
		get
		{
			return this._BlogTitle;
		}
		set
		{
			if ((this._BlogTitle != value))
			{
				this.OnBlogTitleChanging(value);
				this.SendPropertyChanging();
				this._BlogTitle = value;
				this.SendPropertyChanged("BlogTitle");
				this.OnBlogTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string BlogText
	{
		get
		{
			return this._BlogText;
		}
		set
		{
			if ((this._BlogText != value))
			{
				this.OnBlogTextChanging(value);
				this.SendPropertyChanging();
				this._BlogText = value;
				this.SendPropertyChanged("BlogText");
				this.OnBlogTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Blog_SW_BlogData", Storage="_SW_Blog", ThisKey="BlogId", OtherKey="BlogId", IsForeignKey=true)]
	public SW_Blog SW_Blog
	{
		get
		{
			return this._SW_Blog.Entity;
		}
		set
		{
			SW_Blog previousValue = this._SW_Blog.Entity;
			if (((previousValue != value) 
						|| (this._SW_Blog.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Blog.Entity = null;
					previousValue.SW_BlogDatas.Remove(this);
				}
				this._SW_Blog.Entity = value;
				if ((value != null))
				{
					value.SW_BlogDatas.Add(this);
					this._BlogId = value.BlogId;
				}
				else
				{
					this._BlogId = default(int);
				}
				this.SendPropertyChanged("SW_Blog");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_BlogData", Storage="_SW_Lang", ThisKey="BlogId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_BlogDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_BlogDatas.Add(this);
					this._BlogId = value.LangId;
				}
				else
				{
					this._BlogId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_Lang")]
public partial class SW_Lang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private string _LangName;
	
	private string _LangShortname;
	
	private EntitySet<SW_FaqData> _SW_FaqDatas;
	
	private EntitySet<SW_SearchWarContinentData> _SW_SearchWarContinentDatas;
	
	private EntitySet<SW_SearchWarCountryData> _SW_SearchWarCountryDatas;
	
	private EntitySet<SW_SiteMapNodeMetaTagsData> _SW_SiteMapNodeMetaTagsDatas;
	
	private EntitySet<SW_BlogData> _SW_BlogDatas;
	
	private EntitySet<SW_SearchWarSkillData> _SW_SearchWarSkillDatas;
	
	private EntitySet<SW_SearchWarCountryData1> _SW_SearchWarCountryData1s;
	
	private EntitySet<SW_SiteMapNodeData> _SW_SiteMapNodeDatas;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnLangNameChanging(string value);
    partial void OnLangNameChanged();
    partial void OnLangShortnameChanging(string value);
    partial void OnLangShortnameChanged();
    #endregion
	
	public SW_Lang()
	{
		this._SW_FaqDatas = new EntitySet<SW_FaqData>(new Action<SW_FaqData>(this.attach_SW_FaqDatas), new Action<SW_FaqData>(this.detach_SW_FaqDatas));
		this._SW_SearchWarContinentDatas = new EntitySet<SW_SearchWarContinentData>(new Action<SW_SearchWarContinentData>(this.attach_SW_SearchWarContinentDatas), new Action<SW_SearchWarContinentData>(this.detach_SW_SearchWarContinentDatas));
		this._SW_SearchWarCountryDatas = new EntitySet<SW_SearchWarCountryData>(new Action<SW_SearchWarCountryData>(this.attach_SW_SearchWarCountryDatas), new Action<SW_SearchWarCountryData>(this.detach_SW_SearchWarCountryDatas));
		this._SW_SiteMapNodeMetaTagsDatas = new EntitySet<SW_SiteMapNodeMetaTagsData>(new Action<SW_SiteMapNodeMetaTagsData>(this.attach_SW_SiteMapNodeMetaTagsDatas), new Action<SW_SiteMapNodeMetaTagsData>(this.detach_SW_SiteMapNodeMetaTagsDatas));
		this._SW_BlogDatas = new EntitySet<SW_BlogData>(new Action<SW_BlogData>(this.attach_SW_BlogDatas), new Action<SW_BlogData>(this.detach_SW_BlogDatas));
		this._SW_SearchWarSkillDatas = new EntitySet<SW_SearchWarSkillData>(new Action<SW_SearchWarSkillData>(this.attach_SW_SearchWarSkillDatas), new Action<SW_SearchWarSkillData>(this.detach_SW_SearchWarSkillDatas));
		this._SW_SearchWarCountryData1s = new EntitySet<SW_SearchWarCountryData1>(new Action<SW_SearchWarCountryData1>(this.attach_SW_SearchWarCountryData1s), new Action<SW_SearchWarCountryData1>(this.detach_SW_SearchWarCountryData1s));
		this._SW_SiteMapNodeDatas = new EntitySet<SW_SiteMapNodeData>(new Action<SW_SiteMapNodeData>(this.attach_SW_SiteMapNodeDatas), new Action<SW_SiteMapNodeData>(this.detach_SW_SiteMapNodeDatas));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
	public string LangName
	{
		get
		{
			return this._LangName;
		}
		set
		{
			if ((this._LangName != value))
			{
				this.OnLangNameChanging(value);
				this.SendPropertyChanging();
				this._LangName = value;
				this.SendPropertyChanged("LangName");
				this.OnLangNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangShortname", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string LangShortname
	{
		get
		{
			return this._LangShortname;
		}
		set
		{
			if ((this._LangShortname != value))
			{
				this.OnLangShortnameChanging(value);
				this.SendPropertyChanging();
				this._LangShortname = value;
				this.SendPropertyChanged("LangShortname");
				this.OnLangShortnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_FaqData", Storage="_SW_FaqDatas", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_FaqData> SW_FaqDatas
	{
		get
		{
			return this._SW_FaqDatas;
		}
		set
		{
			this._SW_FaqDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarContinentData", Storage="_SW_SearchWarContinentDatas", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_SearchWarContinentData> SW_SearchWarContinentDatas
	{
		get
		{
			return this._SW_SearchWarContinentDatas;
		}
		set
		{
			this._SW_SearchWarContinentDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarCountryData", Storage="_SW_SearchWarCountryDatas", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_SearchWarCountryData> SW_SearchWarCountryDatas
	{
		get
		{
			return this._SW_SearchWarCountryDatas;
		}
		set
		{
			this._SW_SearchWarCountryDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SiteMapNodeMetaTagsData", Storage="_SW_SiteMapNodeMetaTagsDatas", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_SiteMapNodeMetaTagsData> SW_SiteMapNodeMetaTagsDatas
	{
		get
		{
			return this._SW_SiteMapNodeMetaTagsDatas;
		}
		set
		{
			this._SW_SiteMapNodeMetaTagsDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_BlogData", Storage="_SW_BlogDatas", ThisKey="LangId", OtherKey="BlogId")]
	public EntitySet<SW_BlogData> SW_BlogDatas
	{
		get
		{
			return this._SW_BlogDatas;
		}
		set
		{
			this._SW_BlogDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarSkillData", Storage="_SW_SearchWarSkillDatas", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_SearchWarSkillData> SW_SearchWarSkillDatas
	{
		get
		{
			return this._SW_SearchWarSkillDatas;
		}
		set
		{
			this._SW_SearchWarSkillDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarCountryData1", Storage="_SW_SearchWarCountryData1s", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_SearchWarCountryData1> SW_SearchWarCountryData1s
	{
		get
		{
			return this._SW_SearchWarCountryData1s;
		}
		set
		{
			this._SW_SearchWarCountryData1s.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SiteMapNodeData", Storage="_SW_SiteMapNodeDatas", ThisKey="LangId", OtherKey="LangId")]
	public EntitySet<SW_SiteMapNodeData> SW_SiteMapNodeDatas
	{
		get
		{
			return this._SW_SiteMapNodeDatas;
		}
		set
		{
			this._SW_SiteMapNodeDatas.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_FaqDatas(SW_FaqData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_FaqDatas(SW_FaqData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_SearchWarContinentDatas(SW_SearchWarContinentData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_SearchWarContinentDatas(SW_SearchWarContinentData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_SearchWarCountryDatas(SW_SearchWarCountryData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_SearchWarCountryDatas(SW_SearchWarCountryData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_SiteMapNodeMetaTagsDatas(SW_SiteMapNodeMetaTagsData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_SiteMapNodeMetaTagsDatas(SW_SiteMapNodeMetaTagsData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_BlogDatas(SW_BlogData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_BlogDatas(SW_BlogData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_SearchWarSkillDatas(SW_SearchWarSkillData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_SearchWarSkillDatas(SW_SearchWarSkillData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_SearchWarCountryData1s(SW_SearchWarCountryData1 entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_SearchWarCountryData1s(SW_SearchWarCountryData1 entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
	
	private void attach_SW_SiteMapNodeDatas(SW_SiteMapNodeData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = this;
	}
	
	private void detach_SW_SiteMapNodeDatas(SW_SiteMapNodeData entity)
	{
		this.SendPropertyChanging();
		entity.SW_Lang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarSkillData")]
public partial class SW_SearchWarSkillData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _SearchWarSkillId;
	
	private string _SearchWarSkillName;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
	private EntityRef<SW_SearchWarSkill> _SW_SearchWarSkill;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnSearchWarSkillIdChanging(int value);
    partial void OnSearchWarSkillIdChanged();
    partial void OnSearchWarSkillNameChanging(string value);
    partial void OnSearchWarSkillNameChanged();
    #endregion
	
	public SW_SearchWarSkillData()
	{
		this._SW_Lang = default(EntityRef<SW_Lang>);
		this._SW_SearchWarSkill = default(EntityRef<SW_SearchWarSkill>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SearchWarSkillId
	{
		get
		{
			return this._SearchWarSkillId;
		}
		set
		{
			if ((this._SearchWarSkillId != value))
			{
				if (this._SW_SearchWarSkill.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSkillIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillId = value;
				this.SendPropertyChanged("SearchWarSkillId");
				this.OnSearchWarSkillIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSkillName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
	public string SearchWarSkillName
	{
		get
		{
			return this._SearchWarSkillName;
		}
		set
		{
			if ((this._SearchWarSkillName != value))
			{
				this.OnSearchWarSkillNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSkillName = value;
				this.SendPropertyChanged("SearchWarSkillName");
				this.OnSearchWarSkillNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarSkillData", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_SearchWarSkillDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarSkillDatas.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarSkill_SW_SearchWarSkillData", Storage="_SW_SearchWarSkill", ThisKey="SearchWarSkillId", OtherKey="SearchWarSkillId", IsForeignKey=true)]
	public SW_SearchWarSkill SW_SearchWarSkill
	{
		get
		{
			return this._SW_SearchWarSkill.Entity;
		}
		set
		{
			SW_SearchWarSkill previousValue = this._SW_SearchWarSkill.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarSkill.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarSkill.Entity = null;
					previousValue.SW_SearchWarSkillDatas.Remove(this);
				}
				this._SW_SearchWarSkill.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarSkillDatas.Add(this);
					this._SearchWarSkillId = value.SearchWarSkillId;
				}
				else
				{
					this._SearchWarSkillId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarSkill");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_ChatPersons")]
public partial class SW_ChatPerson : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ChatPersonId;
	
	private string _ChatPersonName;
	
	private System.DateTime _ChatPersonDateAdded;
	
	private System.DateTime _ChatPersonDateEdit;
	
	private EntitySet<SW_ChatMessage> _SW_ChatMessages;
	
	private EntitySet<SW_ChatBlinking> _SW_ChatBlinkings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatPersonIdChanging(System.Guid value);
    partial void OnChatPersonIdChanged();
    partial void OnChatPersonNameChanging(string value);
    partial void OnChatPersonNameChanged();
    partial void OnChatPersonDateAddedChanging(System.DateTime value);
    partial void OnChatPersonDateAddedChanged();
    partial void OnChatPersonDateEditChanging(System.DateTime value);
    partial void OnChatPersonDateEditChanged();
    #endregion
	
	public SW_ChatPerson()
	{
		this._SW_ChatMessages = new EntitySet<SW_ChatMessage>(new Action<SW_ChatMessage>(this.attach_SW_ChatMessages), new Action<SW_ChatMessage>(this.detach_SW_ChatMessages));
		this._SW_ChatBlinkings = new EntitySet<SW_ChatBlinking>(new Action<SW_ChatBlinking>(this.attach_SW_ChatBlinkings), new Action<SW_ChatBlinking>(this.detach_SW_ChatBlinkings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPersonId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ChatPersonId
	{
		get
		{
			return this._ChatPersonId;
		}
		set
		{
			if ((this._ChatPersonId != value))
			{
				this.OnChatPersonIdChanging(value);
				this.SendPropertyChanging();
				this._ChatPersonId = value;
				this.SendPropertyChanged("ChatPersonId");
				this.OnChatPersonIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPersonName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string ChatPersonName
	{
		get
		{
			return this._ChatPersonName;
		}
		set
		{
			if ((this._ChatPersonName != value))
			{
				this.OnChatPersonNameChanging(value);
				this.SendPropertyChanging();
				this._ChatPersonName = value;
				this.SendPropertyChanged("ChatPersonName");
				this.OnChatPersonNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPersonDateAdded", DbType="DateTime NOT NULL")]
	public System.DateTime ChatPersonDateAdded
	{
		get
		{
			return this._ChatPersonDateAdded;
		}
		set
		{
			if ((this._ChatPersonDateAdded != value))
			{
				this.OnChatPersonDateAddedChanging(value);
				this.SendPropertyChanging();
				this._ChatPersonDateAdded = value;
				this.SendPropertyChanged("ChatPersonDateAdded");
				this.OnChatPersonDateAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPersonDateEdit", DbType="DateTime NOT NULL")]
	public System.DateTime ChatPersonDateEdit
	{
		get
		{
			return this._ChatPersonDateEdit;
		}
		set
		{
			if ((this._ChatPersonDateEdit != value))
			{
				this.OnChatPersonDateEditChanging(value);
				this.SendPropertyChanging();
				this._ChatPersonDateEdit = value;
				this.SendPropertyChanged("ChatPersonDateEdit");
				this.OnChatPersonDateEditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_ChatPerson_SW_ChatMessage", Storage="_SW_ChatMessages", ThisKey="ChatPersonId", OtherKey="ChatPersonId")]
	public EntitySet<SW_ChatMessage> SW_ChatMessages
	{
		get
		{
			return this._SW_ChatMessages;
		}
		set
		{
			this._SW_ChatMessages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_ChatPerson_SW_ChatBlinking", Storage="_SW_ChatBlinkings", ThisKey="ChatPersonId", OtherKey="ChatPersonId")]
	public EntitySet<SW_ChatBlinking> SW_ChatBlinkings
	{
		get
		{
			return this._SW_ChatBlinkings;
		}
		set
		{
			this._SW_ChatBlinkings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_ChatMessages(SW_ChatMessage entity)
	{
		this.SendPropertyChanging();
		entity.SW_ChatPerson = this;
	}
	
	private void detach_SW_ChatMessages(SW_ChatMessage entity)
	{
		this.SendPropertyChanging();
		entity.SW_ChatPerson = null;
	}
	
	private void attach_SW_ChatBlinkings(SW_ChatBlinking entity)
	{
		this.SendPropertyChanging();
		entity.SW_ChatPerson = this;
	}
	
	private void detach_SW_ChatBlinkings(SW_ChatBlinking entity)
	{
		this.SendPropertyChanging();
		entity.SW_ChatPerson = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_chat")]
public partial class SW_chat : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ChatId;
	
	private System.DateTime _ChatDateAdded;
	
	private System.DateTime _ChatDateEdit;
	
	private bool _ChatIsClosed;
	
	private EntitySet<SW_ChatMessage> _SW_ChatMessages;
	
	private EntitySet<SW_ChatBlinking> _SW_ChatBlinkings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatIdChanging(System.Guid value);
    partial void OnChatIdChanged();
    partial void OnChatDateAddedChanging(System.DateTime value);
    partial void OnChatDateAddedChanged();
    partial void OnChatDateEditChanging(System.DateTime value);
    partial void OnChatDateEditChanged();
    partial void OnChatIsClosedChanging(bool value);
    partial void OnChatIsClosedChanged();
    #endregion
	
	public SW_chat()
	{
		this._SW_ChatMessages = new EntitySet<SW_ChatMessage>(new Action<SW_ChatMessage>(this.attach_SW_ChatMessages), new Action<SW_ChatMessage>(this.detach_SW_ChatMessages));
		this._SW_ChatBlinkings = new EntitySet<SW_ChatBlinking>(new Action<SW_ChatBlinking>(this.attach_SW_ChatBlinkings), new Action<SW_ChatBlinking>(this.detach_SW_ChatBlinkings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ChatId
	{
		get
		{
			return this._ChatId;
		}
		set
		{
			if ((this._ChatId != value))
			{
				this.OnChatIdChanging(value);
				this.SendPropertyChanging();
				this._ChatId = value;
				this.SendPropertyChanged("ChatId");
				this.OnChatIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatDateAdded", DbType="DateTime NOT NULL")]
	public System.DateTime ChatDateAdded
	{
		get
		{
			return this._ChatDateAdded;
		}
		set
		{
			if ((this._ChatDateAdded != value))
			{
				this.OnChatDateAddedChanging(value);
				this.SendPropertyChanging();
				this._ChatDateAdded = value;
				this.SendPropertyChanged("ChatDateAdded");
				this.OnChatDateAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatDateEdit", DbType="DateTime NOT NULL")]
	public System.DateTime ChatDateEdit
	{
		get
		{
			return this._ChatDateEdit;
		}
		set
		{
			if ((this._ChatDateEdit != value))
			{
				this.OnChatDateEditChanging(value);
				this.SendPropertyChanging();
				this._ChatDateEdit = value;
				this.SendPropertyChanged("ChatDateEdit");
				this.OnChatDateEditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatIsClosed", DbType="Bit NOT NULL")]
	public bool ChatIsClosed
	{
		get
		{
			return this._ChatIsClosed;
		}
		set
		{
			if ((this._ChatIsClosed != value))
			{
				this.OnChatIsClosedChanging(value);
				this.SendPropertyChanging();
				this._ChatIsClosed = value;
				this.SendPropertyChanged("ChatIsClosed");
				this.OnChatIsClosedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_chat_SW_ChatMessage", Storage="_SW_ChatMessages", ThisKey="ChatId", OtherKey="ChatId")]
	public EntitySet<SW_ChatMessage> SW_ChatMessages
	{
		get
		{
			return this._SW_ChatMessages;
		}
		set
		{
			this._SW_ChatMessages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_chat_SW_ChatBlinking", Storage="_SW_ChatBlinkings", ThisKey="ChatId", OtherKey="ChatId")]
	public EntitySet<SW_ChatBlinking> SW_ChatBlinkings
	{
		get
		{
			return this._SW_ChatBlinkings;
		}
		set
		{
			this._SW_ChatBlinkings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_ChatMessages(SW_ChatMessage entity)
	{
		this.SendPropertyChanging();
		entity.SW_chat = this;
	}
	
	private void detach_SW_ChatMessages(SW_ChatMessage entity)
	{
		this.SendPropertyChanging();
		entity.SW_chat = null;
	}
	
	private void attach_SW_ChatBlinkings(SW_ChatBlinking entity)
	{
		this.SendPropertyChanging();
		entity.SW_chat = this;
	}
	
	private void detach_SW_ChatBlinkings(SW_ChatBlinking entity)
	{
		this.SendPropertyChanging();
		entity.SW_chat = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_ChatMessages")]
public partial class SW_ChatMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ChatMsgId;
	
	private string _ChatMsgText;
	
	private System.DateTime _ChatMsgDateAdded;
	
	private System.Guid _ChatPersonId;
	
	private System.Guid _ChatId;
	
	private EntityRef<SW_chat> _SW_chat;
	
	private EntityRef<SW_ChatPerson> _SW_ChatPerson;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatMsgIdChanging(System.Guid value);
    partial void OnChatMsgIdChanged();
    partial void OnChatMsgTextChanging(string value);
    partial void OnChatMsgTextChanged();
    partial void OnChatMsgDateAddedChanging(System.DateTime value);
    partial void OnChatMsgDateAddedChanged();
    partial void OnChatPersonIdChanging(System.Guid value);
    partial void OnChatPersonIdChanged();
    partial void OnChatIdChanging(System.Guid value);
    partial void OnChatIdChanged();
    #endregion
	
	public SW_ChatMessage()
	{
		this._SW_chat = default(EntityRef<SW_chat>);
		this._SW_ChatPerson = default(EntityRef<SW_ChatPerson>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMsgId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ChatMsgId
	{
		get
		{
			return this._ChatMsgId;
		}
		set
		{
			if ((this._ChatMsgId != value))
			{
				this.OnChatMsgIdChanging(value);
				this.SendPropertyChanging();
				this._ChatMsgId = value;
				this.SendPropertyChanged("ChatMsgId");
				this.OnChatMsgIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMsgText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ChatMsgText
	{
		get
		{
			return this._ChatMsgText;
		}
		set
		{
			if ((this._ChatMsgText != value))
			{
				this.OnChatMsgTextChanging(value);
				this.SendPropertyChanging();
				this._ChatMsgText = value;
				this.SendPropertyChanged("ChatMsgText");
				this.OnChatMsgTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMsgDateAdded", DbType="DateTime NOT NULL")]
	public System.DateTime ChatMsgDateAdded
	{
		get
		{
			return this._ChatMsgDateAdded;
		}
		set
		{
			if ((this._ChatMsgDateAdded != value))
			{
				this.OnChatMsgDateAddedChanging(value);
				this.SendPropertyChanging();
				this._ChatMsgDateAdded = value;
				this.SendPropertyChanged("ChatMsgDateAdded");
				this.OnChatMsgDateAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPersonId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ChatPersonId
	{
		get
		{
			return this._ChatPersonId;
		}
		set
		{
			if ((this._ChatPersonId != value))
			{
				if (this._SW_ChatPerson.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnChatPersonIdChanging(value);
				this.SendPropertyChanging();
				this._ChatPersonId = value;
				this.SendPropertyChanged("ChatPersonId");
				this.OnChatPersonIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ChatId
	{
		get
		{
			return this._ChatId;
		}
		set
		{
			if ((this._ChatId != value))
			{
				if (this._SW_chat.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnChatIdChanging(value);
				this.SendPropertyChanging();
				this._ChatId = value;
				this.SendPropertyChanged("ChatId");
				this.OnChatIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_chat_SW_ChatMessage", Storage="_SW_chat", ThisKey="ChatId", OtherKey="ChatId", IsForeignKey=true)]
	public SW_chat SW_chat
	{
		get
		{
			return this._SW_chat.Entity;
		}
		set
		{
			SW_chat previousValue = this._SW_chat.Entity;
			if (((previousValue != value) 
						|| (this._SW_chat.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_chat.Entity = null;
					previousValue.SW_ChatMessages.Remove(this);
				}
				this._SW_chat.Entity = value;
				if ((value != null))
				{
					value.SW_ChatMessages.Add(this);
					this._ChatId = value.ChatId;
				}
				else
				{
					this._ChatId = default(System.Guid);
				}
				this.SendPropertyChanged("SW_chat");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_ChatPerson_SW_ChatMessage", Storage="_SW_ChatPerson", ThisKey="ChatPersonId", OtherKey="ChatPersonId", IsForeignKey=true)]
	public SW_ChatPerson SW_ChatPerson
	{
		get
		{
			return this._SW_ChatPerson.Entity;
		}
		set
		{
			SW_ChatPerson previousValue = this._SW_ChatPerson.Entity;
			if (((previousValue != value) 
						|| (this._SW_ChatPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_ChatPerson.Entity = null;
					previousValue.SW_ChatMessages.Remove(this);
				}
				this._SW_ChatPerson.Entity = value;
				if ((value != null))
				{
					value.SW_ChatMessages.Add(this);
					this._ChatPersonId = value.ChatPersonId;
				}
				else
				{
					this._ChatPersonId = default(System.Guid);
				}
				this.SendPropertyChanged("SW_ChatPerson");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SW_ChatBlinking")]
public partial class SW_ChatBlinking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ChatBlinkingId;
	
	private bool _ChatStartBlinking;
	
	private System.Guid _ChatPersonId;
	
	private System.Guid _ChatId;
	
	private EntityRef<SW_chat> _SW_chat;
	
	private EntityRef<SW_ChatPerson> _SW_ChatPerson;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatBlinkingIdChanging(System.Guid value);
    partial void OnChatBlinkingIdChanged();
    partial void OnChatStartBlinkingChanging(bool value);
    partial void OnChatStartBlinkingChanged();
    partial void OnChatPersonIdChanging(System.Guid value);
    partial void OnChatPersonIdChanged();
    partial void OnChatIdChanging(System.Guid value);
    partial void OnChatIdChanged();
    #endregion
	
	public SW_ChatBlinking()
	{
		this._SW_chat = default(EntityRef<SW_chat>);
		this._SW_ChatPerson = default(EntityRef<SW_ChatPerson>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatBlinkingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ChatBlinkingId
	{
		get
		{
			return this._ChatBlinkingId;
		}
		set
		{
			if ((this._ChatBlinkingId != value))
			{
				this.OnChatBlinkingIdChanging(value);
				this.SendPropertyChanging();
				this._ChatBlinkingId = value;
				this.SendPropertyChanged("ChatBlinkingId");
				this.OnChatBlinkingIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatStartBlinking", DbType="Bit NOT NULL")]
	public bool ChatStartBlinking
	{
		get
		{
			return this._ChatStartBlinking;
		}
		set
		{
			if ((this._ChatStartBlinking != value))
			{
				this.OnChatStartBlinkingChanging(value);
				this.SendPropertyChanging();
				this._ChatStartBlinking = value;
				this.SendPropertyChanged("ChatStartBlinking");
				this.OnChatStartBlinkingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPersonId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ChatPersonId
	{
		get
		{
			return this._ChatPersonId;
		}
		set
		{
			if ((this._ChatPersonId != value))
			{
				if (this._SW_ChatPerson.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnChatPersonIdChanging(value);
				this.SendPropertyChanging();
				this._ChatPersonId = value;
				this.SendPropertyChanged("ChatPersonId");
				this.OnChatPersonIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ChatId
	{
		get
		{
			return this._ChatId;
		}
		set
		{
			if ((this._ChatId != value))
			{
				if (this._SW_chat.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnChatIdChanging(value);
				this.SendPropertyChanging();
				this._ChatId = value;
				this.SendPropertyChanged("ChatId");
				this.OnChatIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_chat_SW_ChatBlinking", Storage="_SW_chat", ThisKey="ChatId", OtherKey="ChatId", IsForeignKey=true)]
	public SW_chat SW_chat
	{
		get
		{
			return this._SW_chat.Entity;
		}
		set
		{
			SW_chat previousValue = this._SW_chat.Entity;
			if (((previousValue != value) 
						|| (this._SW_chat.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_chat.Entity = null;
					previousValue.SW_ChatBlinkings.Remove(this);
				}
				this._SW_chat.Entity = value;
				if ((value != null))
				{
					value.SW_ChatBlinkings.Add(this);
					this._ChatId = value.ChatId;
				}
				else
				{
					this._ChatId = default(System.Guid);
				}
				this.SendPropertyChanged("SW_chat");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_ChatPerson_SW_ChatBlinking", Storage="_SW_ChatPerson", ThisKey="ChatPersonId", OtherKey="ChatPersonId", IsForeignKey=true)]
	public SW_ChatPerson SW_ChatPerson
	{
		get
		{
			return this._SW_ChatPerson.Entity;
		}
		set
		{
			SW_ChatPerson previousValue = this._SW_ChatPerson.Entity;
			if (((previousValue != value) 
						|| (this._SW_ChatPerson.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_ChatPerson.Entity = null;
					previousValue.SW_ChatBlinkings.Remove(this);
				}
				this._SW_ChatPerson.Entity = value;
				if ((value != null))
				{
					value.SW_ChatBlinkings.Add(this);
					this._ChatPersonId = value.ChatPersonId;
				}
				else
				{
					this._ChatPersonId = default(System.Guid);
				}
				this.SendPropertyChanged("SW_ChatPerson");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SW_ServerContinents")]
public partial class SW_ServerContinent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _serverContinentId;
	
	private System.Guid _serverId;
	
	private int _SearchwarContinentId;
	
	private EntityRef<SW_Server> _SW_Server;
	
	private EntityRef<SW_SearchWarContinent> _SW_SearchWarContinent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserverContinentIdChanging(System.Guid value);
    partial void OnserverContinentIdChanged();
    partial void OnserverIdChanging(System.Guid value);
    partial void OnserverIdChanged();
    partial void OnSearchwarContinentIdChanging(int value);
    partial void OnSearchwarContinentIdChanged();
    #endregion
	
	public SW_ServerContinent()
	{
		this._SW_Server = default(EntityRef<SW_Server>);
		this._SW_SearchWarContinent = default(EntityRef<SW_SearchWarContinent>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serverContinentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid serverContinentId
	{
		get
		{
			return this._serverContinentId;
		}
		set
		{
			if ((this._serverContinentId != value))
			{
				this.OnserverContinentIdChanging(value);
				this.SendPropertyChanging();
				this._serverContinentId = value;
				this.SendPropertyChanged("serverContinentId");
				this.OnserverContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serverId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid serverId
	{
		get
		{
			return this._serverId;
		}
		set
		{
			if ((this._serverId != value))
			{
				if (this._SW_Server.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnserverIdChanging(value);
				this.SendPropertyChanging();
				this._serverId = value;
				this.SendPropertyChanged("serverId");
				this.OnserverIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchwarContinentId", DbType="Int NOT NULL")]
	public int SearchwarContinentId
	{
		get
		{
			return this._SearchwarContinentId;
		}
		set
		{
			if ((this._SearchwarContinentId != value))
			{
				if (this._SW_SearchWarContinent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchwarContinentIdChanging(value);
				this.SendPropertyChanging();
				this._SearchwarContinentId = value;
				this.SendPropertyChanged("SearchwarContinentId");
				this.OnSearchwarContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Server_SW_ServerContinent", Storage="_SW_Server", ThisKey="serverId", OtherKey="serverID", IsForeignKey=true)]
	public SW_Server SW_Server
	{
		get
		{
			return this._SW_Server.Entity;
		}
		set
		{
			SW_Server previousValue = this._SW_Server.Entity;
			if (((previousValue != value) 
						|| (this._SW_Server.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Server.Entity = null;
					previousValue.SW_ServerContinents.Remove(this);
				}
				this._SW_Server.Entity = value;
				if ((value != null))
				{
					value.SW_ServerContinents.Add(this);
					this._serverId = value.serverID;
				}
				else
				{
					this._serverId = default(System.Guid);
				}
				this.SendPropertyChanged("SW_Server");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_ServerContinent", Storage="_SW_SearchWarContinent", ThisKey="SearchwarContinentId", OtherKey="SearchWarContinentId", IsForeignKey=true)]
	public SW_SearchWarContinent SW_SearchWarContinent
	{
		get
		{
			return this._SW_SearchWarContinent.Entity;
		}
		set
		{
			SW_SearchWarContinent previousValue = this._SW_SearchWarContinent.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarContinent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarContinent.Entity = null;
					previousValue.SW_ServerContinents.Remove(this);
				}
				this._SW_SearchWarContinent.Entity = value;
				if ((value != null))
				{
					value.SW_ServerContinents.Add(this);
					this._SearchwarContinentId = value.SearchWarContinentId;
				}
				else
				{
					this._SearchwarContinentId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarContinent");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SW_Server")]
public partial class SW_Server : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _serverID;
	
	private string _serverName;
	
	private EntitySet<SW_ServerContinent> _SW_ServerContinents;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserverIDChanging(System.Guid value);
    partial void OnserverIDChanged();
    partial void OnserverNameChanging(string value);
    partial void OnserverNameChanged();
    #endregion
	
	public SW_Server()
	{
		this._SW_ServerContinents = new EntitySet<SW_ServerContinent>(new Action<SW_ServerContinent>(this.attach_SW_ServerContinents), new Action<SW_ServerContinent>(this.detach_SW_ServerContinents));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serverID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid serverID
	{
		get
		{
			return this._serverID;
		}
		set
		{
			if ((this._serverID != value))
			{
				this.OnserverIDChanging(value);
				this.SendPropertyChanging();
				this._serverID = value;
				this.SendPropertyChanged("serverID");
				this.OnserverIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serverName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string serverName
	{
		get
		{
			return this._serverName;
		}
		set
		{
			if ((this._serverName != value))
			{
				this.OnserverNameChanging(value);
				this.SendPropertyChanging();
				this._serverName = value;
				this.SendPropertyChanged("serverName");
				this.OnserverNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Server_SW_ServerContinent", Storage="_SW_ServerContinents", ThisKey="serverID", OtherKey="serverId")]
	public EntitySet<SW_ServerContinent> SW_ServerContinents
	{
		get
		{
			return this._SW_ServerContinents;
		}
		set
		{
			this._SW_ServerContinents.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_ServerContinents(SW_ServerContinent entity)
	{
		this.SendPropertyChanging();
		entity.SW_Server = this;
	}
	
	private void detach_SW_ServerContinents(SW_ServerContinent entity)
	{
		this.SendPropertyChanging();
		entity.SW_Server = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarCountryData")]
public partial class SW_SearchWarCountryData1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _SearchWarCountrytId;
	
	private string _SearchWarCountryName;
	
	private string _SearchWarCountryTLD;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
	private EntityRef<SW_SearchWarCountry> _SW_SearchWarCountry;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnSearchWarCountrytIdChanging(int value);
    partial void OnSearchWarCountrytIdChanged();
    partial void OnSearchWarCountryNameChanging(string value);
    partial void OnSearchWarCountryNameChanged();
    partial void OnSearchWarCountryTLDChanging(string value);
    partial void OnSearchWarCountryTLDChanged();
    #endregion
	
	public SW_SearchWarCountryData1()
	{
		this._SW_Lang = default(EntityRef<SW_Lang>);
		this._SW_SearchWarCountry = default(EntityRef<SW_SearchWarCountry>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountrytId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SearchWarCountrytId
	{
		get
		{
			return this._SearchWarCountrytId;
		}
		set
		{
			if ((this._SearchWarCountrytId != value))
			{
				if (this._SW_SearchWarCountry.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarCountrytIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountrytId = value;
				this.SendPropertyChanged("SearchWarCountrytId");
				this.OnSearchWarCountrytIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryName", DbType="VarChar(140) NOT NULL", CanBeNull=false)]
	public string SearchWarCountryName
	{
		get
		{
			return this._SearchWarCountryName;
		}
		set
		{
			if ((this._SearchWarCountryName != value))
			{
				this.OnSearchWarCountryNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryName = value;
				this.SendPropertyChanged("SearchWarCountryName");
				this.OnSearchWarCountryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarCountryTLD", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string SearchWarCountryTLD
	{
		get
		{
			return this._SearchWarCountryTLD;
		}
		set
		{
			if ((this._SearchWarCountryTLD != value))
			{
				this.OnSearchWarCountryTLDChanging(value);
				this.SendPropertyChanging();
				this._SearchWarCountryTLD = value;
				this.SendPropertyChanged("SearchWarCountryTLD");
				this.OnSearchWarCountryTLDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SearchWarCountryData1", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_SearchWarCountryData1s.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountryData1s.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWarCountryData1", Storage="_SW_SearchWarCountry", ThisKey="SearchWarCountrytId", OtherKey="SearchWarCountryId", IsForeignKey=true)]
	public SW_SearchWarCountry SW_SearchWarCountry
	{
		get
		{
			return this._SW_SearchWarCountry.Entity;
		}
		set
		{
			SW_SearchWarCountry previousValue = this._SW_SearchWarCountry.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarCountry.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarCountry.Entity = null;
					previousValue.SW_SearchWarCountryData1s.Remove(this);
				}
				this._SW_SearchWarCountry.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarCountryData1s.Add(this);
					this._SearchWarCountrytId = value.SearchWarCountryId;
				}
				else
				{
					this._SearchWarCountrytId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarCountry");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWarContinent")]
public partial class SW_SearchWarContinent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SearchWarContinentId;
	
	private System.DateTime _SearchWarContinentAddedDate;
	
	private System.DateTime _SearchWarContinentEditDate;
	
	private System.Guid _SearchWarContinentAddedUserId;
	
	private System.Guid _SearchWarContinentEditUserId;
	
	private EntitySet<SW_SearchWarContinentData> _SW_SearchWarContinentDatas;
	
	private EntitySet<SW_SearchWarCountry> _SW_SearchWarCountries;
	
	private EntitySet<SW_ServerContinent> _SW_ServerContinents;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars;
	
	private EntitySet<SW_SearchWar> _SW_SearchWars1;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarContinentIdChanging(int value);
    partial void OnSearchWarContinentIdChanged();
    partial void OnSearchWarContinentAddedDateChanging(System.DateTime value);
    partial void OnSearchWarContinentAddedDateChanged();
    partial void OnSearchWarContinentEditDateChanging(System.DateTime value);
    partial void OnSearchWarContinentEditDateChanged();
    partial void OnSearchWarContinentAddedUserIdChanging(System.Guid value);
    partial void OnSearchWarContinentAddedUserIdChanged();
    partial void OnSearchWarContinentEditUserIdChanging(System.Guid value);
    partial void OnSearchWarContinentEditUserIdChanged();
    #endregion
	
	public SW_SearchWarContinent()
	{
		this._SW_SearchWarContinentDatas = new EntitySet<SW_SearchWarContinentData>(new Action<SW_SearchWarContinentData>(this.attach_SW_SearchWarContinentDatas), new Action<SW_SearchWarContinentData>(this.detach_SW_SearchWarContinentDatas));
		this._SW_SearchWarCountries = new EntitySet<SW_SearchWarCountry>(new Action<SW_SearchWarCountry>(this.attach_SW_SearchWarCountries), new Action<SW_SearchWarCountry>(this.detach_SW_SearchWarCountries));
		this._SW_ServerContinents = new EntitySet<SW_ServerContinent>(new Action<SW_ServerContinent>(this.attach_SW_ServerContinents), new Action<SW_ServerContinent>(this.detach_SW_ServerContinents));
		this._SW_SearchWars = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars), new Action<SW_SearchWar>(this.detach_SW_SearchWars));
		this._SW_SearchWars1 = new EntitySet<SW_SearchWar>(new Action<SW_SearchWar>(this.attach_SW_SearchWars1), new Action<SW_SearchWar>(this.detach_SW_SearchWars1));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SearchWarContinentId
	{
		get
		{
			return this._SearchWarContinentId;
		}
		set
		{
			if ((this._SearchWarContinentId != value))
			{
				this.OnSearchWarContinentIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentId = value;
				this.SendPropertyChanged("SearchWarContinentId");
				this.OnSearchWarContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarContinentAddedDate
	{
		get
		{
			return this._SearchWarContinentAddedDate;
		}
		set
		{
			if ((this._SearchWarContinentAddedDate != value))
			{
				this.OnSearchWarContinentAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentAddedDate = value;
				this.SendPropertyChanged("SearchWarContinentAddedDate");
				this.OnSearchWarContinentAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarContinentEditDate
	{
		get
		{
			return this._SearchWarContinentEditDate;
		}
		set
		{
			if ((this._SearchWarContinentEditDate != value))
			{
				this.OnSearchWarContinentEditDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentEditDate = value;
				this.SendPropertyChanged("SearchWarContinentEditDate");
				this.OnSearchWarContinentEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarContinentAddedUserId
	{
		get
		{
			return this._SearchWarContinentAddedUserId;
		}
		set
		{
			if ((this._SearchWarContinentAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarContinentAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentAddedUserId = value;
				this.SendPropertyChanged("SearchWarContinentAddedUserId");
				this.OnSearchWarContinentAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarContinentEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarContinentEditUserId
	{
		get
		{
			return this._SearchWarContinentEditUserId;
		}
		set
		{
			if ((this._SearchWarContinentEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarContinentEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarContinentEditUserId = value;
				this.SendPropertyChanged("SearchWarContinentEditUserId");
				this.OnSearchWarContinentEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWarContinentData", Storage="_SW_SearchWarContinentDatas", ThisKey="SearchWarContinentId", OtherKey="SearchWarContinentId")]
	public EntitySet<SW_SearchWarContinentData> SW_SearchWarContinentDatas
	{
		get
		{
			return this._SW_SearchWarContinentDatas;
		}
		set
		{
			this._SW_SearchWarContinentDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWarCountry", Storage="_SW_SearchWarCountries", ThisKey="SearchWarContinentId", OtherKey="SearchWarContinentId")]
	public EntitySet<SW_SearchWarCountry> SW_SearchWarCountries
	{
		get
		{
			return this._SW_SearchWarCountries;
		}
		set
		{
			this._SW_SearchWarCountries.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_ServerContinent", Storage="_SW_ServerContinents", ThisKey="SearchWarContinentId", OtherKey="SearchwarContinentId")]
	public EntitySet<SW_ServerContinent> SW_ServerContinents
	{
		get
		{
			return this._SW_ServerContinents;
		}
		set
		{
			this._SW_ServerContinents.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWar", Storage="_SW_SearchWars", ThisKey="SearchWarContinentId", OtherKey="SearchWarSearchContinentId")]
	public EntitySet<SW_SearchWar> SW_SearchWars
	{
		get
		{
			return this._SW_SearchWars;
		}
		set
		{
			this._SW_SearchWars.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWar1", Storage="_SW_SearchWars1", ThisKey="SearchWarContinentId", OtherKey="SearchWarClanContinentId")]
	public EntitySet<SW_SearchWar> SW_SearchWars1
	{
		get
		{
			return this._SW_SearchWars1;
		}
		set
		{
			this._SW_SearchWars1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarContinent", Storage="_aspnet_User", ThisKey="SearchWarContinentAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SearchWarContinents.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarContinents.Add(this);
					this._SearchWarContinentAddedUserId = value.UserId;
				}
				else
				{
					this._SearchWarContinentAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SearchWarContinent1", Storage="_aspnet_User1", ThisKey="SearchWarContinentEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SearchWarContinents1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWarContinents1.Add(this);
					this._SearchWarContinentEditUserId = value.UserId;
				}
				else
				{
					this._SearchWarContinentEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SearchWarContinentDatas(SW_SearchWarContinentData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = this;
	}
	
	private void detach_SW_SearchWarContinentDatas(SW_SearchWarContinentData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = null;
	}
	
	private void attach_SW_SearchWarCountries(SW_SearchWarCountry entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = this;
	}
	
	private void detach_SW_SearchWarCountries(SW_SearchWarCountry entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = null;
	}
	
	private void attach_SW_ServerContinents(SW_ServerContinent entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = this;
	}
	
	private void detach_SW_ServerContinents(SW_ServerContinent entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = null;
	}
	
	private void attach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = this;
	}
	
	private void detach_SW_SearchWars(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent = null;
	}
	
	private void attach_SW_SearchWars1(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent1 = this;
	}
	
	private void detach_SW_SearchWars1(SW_SearchWar entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWarContinent1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SearchWar")]
public partial class SW_SearchWar : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _SearchWarId;
	
	private string _SearchWarClanName;
	
	private System.Nullable<int> _SearchWarClanSkillId;
	
	private System.Nullable<int> _SearchWarClanContinentId;
	
	private System.Nullable<int> _SearchWarClanCountryId;
	
	private int _SearchWarSearchGameId;
	
	private System.Nullable<int> _SearchWarSearchGameTypeId;
	
	private System.Nullable<int> _SearchWarSearchSkillId;
	
	private System.Nullable<int> _SearchWarSearchContinentId;
	
	private System.Nullable<int> _SearchWarSearchCountryId;
	
	private int _SearchWarSearchXvs;
	
	private int _SearchWarSearchvsX;
	
	private string _SearchWarSearchMap;
	
	private System.DateTime _SearchWarSearchMatchStart;
	
	private string _SearchWarComment;
	
	private System.DateTime _SearchWarAddedDate;
	
	private System.DateTime _SearchWarEditDate;
	
	private string _SearchWarUserIpAddress;
	
	private System.Guid _SearchWarUserID;
	
	private bool _SearchWarIsRunning;
	
	private EntitySet<SW_SearchWarPlayer> _SW_SearchWarPlayers;
	
	private EntityRef<SW_SearchWarContinent> _SW_SearchWarContinent;
	
	private EntityRef<SW_SearchWarContinent> _SW_SearchWarContinent1;
	
	private EntityRef<SW_SearchWarCountry> _SW_SearchWarCountry;
	
	private EntityRef<SW_SearchWarCountry> _SW_SearchWarCountry1;
	
	private EntityRef<SW_SearchWarGame> _SW_SearchWarGame;
	
	private EntityRef<SW_SearchWarGameType> _SW_SearchWarGameType;
	
	private EntityRef<SW_SearchWarSkill> _SW_SearchWarSkill;
	
	private EntityRef<SW_SearchWarSkill> _SW_SearchWarSkill1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchWarIdChanging(System.Guid value);
    partial void OnSearchWarIdChanged();
    partial void OnSearchWarClanNameChanging(string value);
    partial void OnSearchWarClanNameChanged();
    partial void OnSearchWarClanSkillIdChanging(System.Nullable<int> value);
    partial void OnSearchWarClanSkillIdChanged();
    partial void OnSearchWarClanContinentIdChanging(System.Nullable<int> value);
    partial void OnSearchWarClanContinentIdChanged();
    partial void OnSearchWarClanCountryIdChanging(System.Nullable<int> value);
    partial void OnSearchWarClanCountryIdChanged();
    partial void OnSearchWarSearchGameIdChanging(int value);
    partial void OnSearchWarSearchGameIdChanged();
    partial void OnSearchWarSearchGameTypeIdChanging(System.Nullable<int> value);
    partial void OnSearchWarSearchGameTypeIdChanged();
    partial void OnSearchWarSearchSkillIdChanging(System.Nullable<int> value);
    partial void OnSearchWarSearchSkillIdChanged();
    partial void OnSearchWarSearchContinentIdChanging(System.Nullable<int> value);
    partial void OnSearchWarSearchContinentIdChanged();
    partial void OnSearchWarSearchCountryIdChanging(System.Nullable<int> value);
    partial void OnSearchWarSearchCountryIdChanged();
    partial void OnSearchWarSearchXvsChanging(int value);
    partial void OnSearchWarSearchXvsChanged();
    partial void OnSearchWarSearchvsXChanging(int value);
    partial void OnSearchWarSearchvsXChanged();
    partial void OnSearchWarSearchMapChanging(string value);
    partial void OnSearchWarSearchMapChanged();
    partial void OnSearchWarSearchMatchStartChanging(System.DateTime value);
    partial void OnSearchWarSearchMatchStartChanged();
    partial void OnSearchWarCommentChanging(string value);
    partial void OnSearchWarCommentChanged();
    partial void OnSearchWarAddedDateChanging(System.DateTime value);
    partial void OnSearchWarAddedDateChanged();
    partial void OnSearchWarEditDateChanging(System.DateTime value);
    partial void OnSearchWarEditDateChanged();
    partial void OnSearchWarUserIpAddressChanging(string value);
    partial void OnSearchWarUserIpAddressChanged();
    partial void OnSearchWarUserIDChanging(System.Guid value);
    partial void OnSearchWarUserIDChanged();
    partial void OnSearchWarIsRunningChanging(bool value);
    partial void OnSearchWarIsRunningChanged();
    #endregion
	
	public SW_SearchWar()
	{
		this._SW_SearchWarPlayers = new EntitySet<SW_SearchWarPlayer>(new Action<SW_SearchWarPlayer>(this.attach_SW_SearchWarPlayers), new Action<SW_SearchWarPlayer>(this.detach_SW_SearchWarPlayers));
		this._SW_SearchWarContinent = default(EntityRef<SW_SearchWarContinent>);
		this._SW_SearchWarContinent1 = default(EntityRef<SW_SearchWarContinent>);
		this._SW_SearchWarCountry = default(EntityRef<SW_SearchWarCountry>);
		this._SW_SearchWarCountry1 = default(EntityRef<SW_SearchWarCountry>);
		this._SW_SearchWarGame = default(EntityRef<SW_SearchWarGame>);
		this._SW_SearchWarGameType = default(EntityRef<SW_SearchWarGameType>);
		this._SW_SearchWarSkill = default(EntityRef<SW_SearchWarSkill>);
		this._SW_SearchWarSkill1 = default(EntityRef<SW_SearchWarSkill>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
	public System.Guid SearchWarId
	{
		get
		{
			return this._SearchWarId;
		}
		set
		{
			if ((this._SearchWarId != value))
			{
				this.OnSearchWarIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarId = value;
				this.SendPropertyChanged("SearchWarId");
				this.OnSearchWarIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarClanName", DbType="VarChar(60)")]
	public string SearchWarClanName
	{
		get
		{
			return this._SearchWarClanName;
		}
		set
		{
			if ((this._SearchWarClanName != value))
			{
				this.OnSearchWarClanNameChanging(value);
				this.SendPropertyChanging();
				this._SearchWarClanName = value;
				this.SendPropertyChanged("SearchWarClanName");
				this.OnSearchWarClanNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarClanSkillId", DbType="Int")]
	public System.Nullable<int> SearchWarClanSkillId
	{
		get
		{
			return this._SearchWarClanSkillId;
		}
		set
		{
			if ((this._SearchWarClanSkillId != value))
			{
				if (this._SW_SearchWarSkill1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarClanSkillIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarClanSkillId = value;
				this.SendPropertyChanged("SearchWarClanSkillId");
				this.OnSearchWarClanSkillIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarClanContinentId", DbType="Int")]
	public System.Nullable<int> SearchWarClanContinentId
	{
		get
		{
			return this._SearchWarClanContinentId;
		}
		set
		{
			if ((this._SearchWarClanContinentId != value))
			{
				if (this._SW_SearchWarContinent1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarClanContinentIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarClanContinentId = value;
				this.SendPropertyChanged("SearchWarClanContinentId");
				this.OnSearchWarClanContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarClanCountryId", DbType="Int")]
	public System.Nullable<int> SearchWarClanCountryId
	{
		get
		{
			return this._SearchWarClanCountryId;
		}
		set
		{
			if ((this._SearchWarClanCountryId != value))
			{
				if (this._SW_SearchWarCountry1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarClanCountryIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarClanCountryId = value;
				this.SendPropertyChanged("SearchWarClanCountryId");
				this.OnSearchWarClanCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchGameId", DbType="Int NOT NULL")]
	public int SearchWarSearchGameId
	{
		get
		{
			return this._SearchWarSearchGameId;
		}
		set
		{
			if ((this._SearchWarSearchGameId != value))
			{
				if (this._SW_SearchWarGame.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSearchGameIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchGameId = value;
				this.SendPropertyChanged("SearchWarSearchGameId");
				this.OnSearchWarSearchGameIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchGameTypeId", DbType="Int")]
	public System.Nullable<int> SearchWarSearchGameTypeId
	{
		get
		{
			return this._SearchWarSearchGameTypeId;
		}
		set
		{
			if ((this._SearchWarSearchGameTypeId != value))
			{
				if (this._SW_SearchWarGameType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSearchGameTypeIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchGameTypeId = value;
				this.SendPropertyChanged("SearchWarSearchGameTypeId");
				this.OnSearchWarSearchGameTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchSkillId", DbType="Int")]
	public System.Nullable<int> SearchWarSearchSkillId
	{
		get
		{
			return this._SearchWarSearchSkillId;
		}
		set
		{
			if ((this._SearchWarSearchSkillId != value))
			{
				if (this._SW_SearchWarSkill.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSearchSkillIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchSkillId = value;
				this.SendPropertyChanged("SearchWarSearchSkillId");
				this.OnSearchWarSearchSkillIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchContinentId", DbType="Int")]
	public System.Nullable<int> SearchWarSearchContinentId
	{
		get
		{
			return this._SearchWarSearchContinentId;
		}
		set
		{
			if ((this._SearchWarSearchContinentId != value))
			{
				if (this._SW_SearchWarContinent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSearchContinentIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchContinentId = value;
				this.SendPropertyChanged("SearchWarSearchContinentId");
				this.OnSearchWarSearchContinentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchCountryId", DbType="Int")]
	public System.Nullable<int> SearchWarSearchCountryId
	{
		get
		{
			return this._SearchWarSearchCountryId;
		}
		set
		{
			if ((this._SearchWarSearchCountryId != value))
			{
				if (this._SW_SearchWarCountry.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSearchWarSearchCountryIdChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchCountryId = value;
				this.SendPropertyChanged("SearchWarSearchCountryId");
				this.OnSearchWarSearchCountryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchXvs", DbType="Int NOT NULL")]
	public int SearchWarSearchXvs
	{
		get
		{
			return this._SearchWarSearchXvs;
		}
		set
		{
			if ((this._SearchWarSearchXvs != value))
			{
				this.OnSearchWarSearchXvsChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchXvs = value;
				this.SendPropertyChanged("SearchWarSearchXvs");
				this.OnSearchWarSearchXvsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchvsX", DbType="Int NOT NULL")]
	public int SearchWarSearchvsX
	{
		get
		{
			return this._SearchWarSearchvsX;
		}
		set
		{
			if ((this._SearchWarSearchvsX != value))
			{
				this.OnSearchWarSearchvsXChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchvsX = value;
				this.SendPropertyChanged("SearchWarSearchvsX");
				this.OnSearchWarSearchvsXChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchMap", DbType="VarChar(110)")]
	public string SearchWarSearchMap
	{
		get
		{
			return this._SearchWarSearchMap;
		}
		set
		{
			if ((this._SearchWarSearchMap != value))
			{
				this.OnSearchWarSearchMapChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchMap = value;
				this.SendPropertyChanged("SearchWarSearchMap");
				this.OnSearchWarSearchMapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarSearchMatchStart", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarSearchMatchStart
	{
		get
		{
			return this._SearchWarSearchMatchStart;
		}
		set
		{
			if ((this._SearchWarSearchMatchStart != value))
			{
				this.OnSearchWarSearchMatchStartChanging(value);
				this.SendPropertyChanging();
				this._SearchWarSearchMatchStart = value;
				this.SendPropertyChanged("SearchWarSearchMatchStart");
				this.OnSearchWarSearchMatchStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarComment", DbType="VarChar(200)")]
	public string SearchWarComment
	{
		get
		{
			return this._SearchWarComment;
		}
		set
		{
			if ((this._SearchWarComment != value))
			{
				this.OnSearchWarCommentChanging(value);
				this.SendPropertyChanging();
				this._SearchWarComment = value;
				this.SendPropertyChanged("SearchWarComment");
				this.OnSearchWarCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarAddedDate
	{
		get
		{
			return this._SearchWarAddedDate;
		}
		set
		{
			if ((this._SearchWarAddedDate != value))
			{
				this.OnSearchWarAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarAddedDate = value;
				this.SendPropertyChanged("SearchWarAddedDate");
				this.OnSearchWarAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime SearchWarEditDate
	{
		get
		{
			return this._SearchWarEditDate;
		}
		set
		{
			if ((this._SearchWarEditDate != value))
			{
				this.OnSearchWarEditDateChanging(value);
				this.SendPropertyChanging();
				this._SearchWarEditDate = value;
				this.SendPropertyChanged("SearchWarEditDate");
				this.OnSearchWarEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarUserIpAddress", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
	public string SearchWarUserIpAddress
	{
		get
		{
			return this._SearchWarUserIpAddress;
		}
		set
		{
			if ((this._SearchWarUserIpAddress != value))
			{
				this.OnSearchWarUserIpAddressChanging(value);
				this.SendPropertyChanging();
				this._SearchWarUserIpAddress = value;
				this.SendPropertyChanged("SearchWarUserIpAddress");
				this.OnSearchWarUserIpAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarUserID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SearchWarUserID
	{
		get
		{
			return this._SearchWarUserID;
		}
		set
		{
			if ((this._SearchWarUserID != value))
			{
				this.OnSearchWarUserIDChanging(value);
				this.SendPropertyChanging();
				this._SearchWarUserID = value;
				this.SendPropertyChanged("SearchWarUserID");
				this.OnSearchWarUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWarIsRunning", DbType="Bit NOT NULL")]
	public bool SearchWarIsRunning
	{
		get
		{
			return this._SearchWarIsRunning;
		}
		set
		{
			if ((this._SearchWarIsRunning != value))
			{
				this.OnSearchWarIsRunningChanging(value);
				this.SendPropertyChanging();
				this._SearchWarIsRunning = value;
				this.SendPropertyChanged("SearchWarIsRunning");
				this.OnSearchWarIsRunningChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWar_SW_SearchWarPlayer", Storage="_SW_SearchWarPlayers", ThisKey="SearchWarId", OtherKey="SearchWarId")]
	public EntitySet<SW_SearchWarPlayer> SW_SearchWarPlayers
	{
		get
		{
			return this._SW_SearchWarPlayers;
		}
		set
		{
			this._SW_SearchWarPlayers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWar", Storage="_SW_SearchWarContinent", ThisKey="SearchWarSearchContinentId", OtherKey="SearchWarContinentId", IsForeignKey=true)]
	public SW_SearchWarContinent SW_SearchWarContinent
	{
		get
		{
			return this._SW_SearchWarContinent.Entity;
		}
		set
		{
			SW_SearchWarContinent previousValue = this._SW_SearchWarContinent.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarContinent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarContinent.Entity = null;
					previousValue.SW_SearchWars.Remove(this);
				}
				this._SW_SearchWarContinent.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars.Add(this);
					this._SearchWarSearchContinentId = value.SearchWarContinentId;
				}
				else
				{
					this._SearchWarSearchContinentId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarContinent");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarContinent_SW_SearchWar1", Storage="_SW_SearchWarContinent1", ThisKey="SearchWarClanContinentId", OtherKey="SearchWarContinentId", IsForeignKey=true)]
	public SW_SearchWarContinent SW_SearchWarContinent1
	{
		get
		{
			return this._SW_SearchWarContinent1.Entity;
		}
		set
		{
			SW_SearchWarContinent previousValue = this._SW_SearchWarContinent1.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarContinent1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarContinent1.Entity = null;
					previousValue.SW_SearchWars1.Remove(this);
				}
				this._SW_SearchWarContinent1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars1.Add(this);
					this._SearchWarClanContinentId = value.SearchWarContinentId;
				}
				else
				{
					this._SearchWarClanContinentId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarContinent1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWar", Storage="_SW_SearchWarCountry", ThisKey="SearchWarSearchCountryId", OtherKey="SearchWarCountryId", IsForeignKey=true)]
	public SW_SearchWarCountry SW_SearchWarCountry
	{
		get
		{
			return this._SW_SearchWarCountry.Entity;
		}
		set
		{
			SW_SearchWarCountry previousValue = this._SW_SearchWarCountry.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarCountry.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarCountry.Entity = null;
					previousValue.SW_SearchWars.Remove(this);
				}
				this._SW_SearchWarCountry.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars.Add(this);
					this._SearchWarSearchCountryId = value.SearchWarCountryId;
				}
				else
				{
					this._SearchWarSearchCountryId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarCountry");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarCountry_SW_SearchWar1", Storage="_SW_SearchWarCountry1", ThisKey="SearchWarClanCountryId", OtherKey="SearchWarCountryId", IsForeignKey=true)]
	public SW_SearchWarCountry SW_SearchWarCountry1
	{
		get
		{
			return this._SW_SearchWarCountry1.Entity;
		}
		set
		{
			SW_SearchWarCountry previousValue = this._SW_SearchWarCountry1.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarCountry1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarCountry1.Entity = null;
					previousValue.SW_SearchWars1.Remove(this);
				}
				this._SW_SearchWarCountry1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars1.Add(this);
					this._SearchWarClanCountryId = value.SearchWarCountryId;
				}
				else
				{
					this._SearchWarClanCountryId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarCountry1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarGame_SW_SearchWar", Storage="_SW_SearchWarGame", ThisKey="SearchWarSearchGameId", OtherKey="SearchWarGameId", IsForeignKey=true)]
	public SW_SearchWarGame SW_SearchWarGame
	{
		get
		{
			return this._SW_SearchWarGame.Entity;
		}
		set
		{
			SW_SearchWarGame previousValue = this._SW_SearchWarGame.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarGame.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarGame.Entity = null;
					previousValue.SW_SearchWars.Remove(this);
				}
				this._SW_SearchWarGame.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars.Add(this);
					this._SearchWarSearchGameId = value.SearchWarGameId;
				}
				else
				{
					this._SearchWarSearchGameId = default(int);
				}
				this.SendPropertyChanged("SW_SearchWarGame");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarGameType_SW_SearchWar", Storage="_SW_SearchWarGameType", ThisKey="SearchWarSearchGameTypeId", OtherKey="SearchWarGameTypeId", IsForeignKey=true)]
	public SW_SearchWarGameType SW_SearchWarGameType
	{
		get
		{
			return this._SW_SearchWarGameType.Entity;
		}
		set
		{
			SW_SearchWarGameType previousValue = this._SW_SearchWarGameType.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarGameType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarGameType.Entity = null;
					previousValue.SW_SearchWars.Remove(this);
				}
				this._SW_SearchWarGameType.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars.Add(this);
					this._SearchWarSearchGameTypeId = value.SearchWarGameTypeId;
				}
				else
				{
					this._SearchWarSearchGameTypeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarGameType");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarSkill_SW_SearchWar", Storage="_SW_SearchWarSkill", ThisKey="SearchWarSearchSkillId", OtherKey="SearchWarSkillId", IsForeignKey=true)]
	public SW_SearchWarSkill SW_SearchWarSkill
	{
		get
		{
			return this._SW_SearchWarSkill.Entity;
		}
		set
		{
			SW_SearchWarSkill previousValue = this._SW_SearchWarSkill.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarSkill.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarSkill.Entity = null;
					previousValue.SW_SearchWars.Remove(this);
				}
				this._SW_SearchWarSkill.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars.Add(this);
					this._SearchWarSearchSkillId = value.SearchWarSkillId;
				}
				else
				{
					this._SearchWarSearchSkillId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarSkill");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SearchWarSkill_SW_SearchWar1", Storage="_SW_SearchWarSkill1", ThisKey="SearchWarClanSkillId", OtherKey="SearchWarSkillId", IsForeignKey=true)]
	public SW_SearchWarSkill SW_SearchWarSkill1
	{
		get
		{
			return this._SW_SearchWarSkill1.Entity;
		}
		set
		{
			SW_SearchWarSkill previousValue = this._SW_SearchWarSkill1.Entity;
			if (((previousValue != value) 
						|| (this._SW_SearchWarSkill1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SearchWarSkill1.Entity = null;
					previousValue.SW_SearchWars1.Remove(this);
				}
				this._SW_SearchWarSkill1.Entity = value;
				if ((value != null))
				{
					value.SW_SearchWars1.Add(this);
					this._SearchWarClanSkillId = value.SearchWarSkillId;
				}
				else
				{
					this._SearchWarClanSkillId = default(Nullable<int>);
				}
				this.SendPropertyChanged("SW_SearchWarSkill1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SearchWarPlayers(SW_SearchWarPlayer entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWar = this;
	}
	
	private void detach_SW_SearchWarPlayers(SW_SearchWarPlayer entity)
	{
		this.SendPropertyChanging();
		entity.SW_SearchWar = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SiteMapNodeData")]
public partial class SW_SiteMapNodeData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LangId;
	
	private int _SiteMapNodeId;
	
	private string _SiteMapNodeTitle;
	
	private string _SiteMapNodeRewriteRegex;
	
	private string _SiteMapNodeRewriteUrl;
	
	private EntityRef<SW_Lang> _SW_Lang;
	
	private EntityRef<SW_SiteMapNode> _SW_SiteMapNode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangIdChanging(int value);
    partial void OnLangIdChanged();
    partial void OnSiteMapNodeIdChanging(int value);
    partial void OnSiteMapNodeIdChanged();
    partial void OnSiteMapNodeTitleChanging(string value);
    partial void OnSiteMapNodeTitleChanged();
    partial void OnSiteMapNodeRewriteRegexChanging(string value);
    partial void OnSiteMapNodeRewriteRegexChanged();
    partial void OnSiteMapNodeRewriteUrlChanging(string value);
    partial void OnSiteMapNodeRewriteUrlChanged();
    #endregion
	
	public SW_SiteMapNodeData()
	{
		this._SW_Lang = default(EntityRef<SW_Lang>);
		this._SW_SiteMapNode = default(EntityRef<SW_SiteMapNode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int LangId
	{
		get
		{
			return this._LangId;
		}
		set
		{
			if ((this._LangId != value))
			{
				if (this._SW_Lang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLangIdChanging(value);
				this.SendPropertyChanging();
				this._LangId = value;
				this.SendPropertyChanged("LangId");
				this.OnLangIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SiteMapNodeId
	{
		get
		{
			return this._SiteMapNodeId;
		}
		set
		{
			if ((this._SiteMapNodeId != value))
			{
				if (this._SW_SiteMapNode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSiteMapNodeIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeId = value;
				this.SendPropertyChanged("SiteMapNodeId");
				this.OnSiteMapNodeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeTitle", DbType="VarChar(80)")]
	public string SiteMapNodeTitle
	{
		get
		{
			return this._SiteMapNodeTitle;
		}
		set
		{
			if ((this._SiteMapNodeTitle != value))
			{
				this.OnSiteMapNodeTitleChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeTitle = value;
				this.SendPropertyChanged("SiteMapNodeTitle");
				this.OnSiteMapNodeTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeRewriteRegex", DbType="VarChar(MAX)")]
	public string SiteMapNodeRewriteRegex
	{
		get
		{
			return this._SiteMapNodeRewriteRegex;
		}
		set
		{
			if ((this._SiteMapNodeRewriteRegex != value))
			{
				this.OnSiteMapNodeRewriteRegexChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeRewriteRegex = value;
				this.SendPropertyChanged("SiteMapNodeRewriteRegex");
				this.OnSiteMapNodeRewriteRegexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeRewriteUrl", DbType="VarChar(MAX)")]
	public string SiteMapNodeRewriteUrl
	{
		get
		{
			return this._SiteMapNodeRewriteUrl;
		}
		set
		{
			if ((this._SiteMapNodeRewriteUrl != value))
			{
				this.OnSiteMapNodeRewriteUrlChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeRewriteUrl = value;
				this.SendPropertyChanged("SiteMapNodeRewriteUrl");
				this.OnSiteMapNodeRewriteUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_Lang_SW_SiteMapNodeData", Storage="_SW_Lang", ThisKey="LangId", OtherKey="LangId", IsForeignKey=true)]
	public SW_Lang SW_Lang
	{
		get
		{
			return this._SW_Lang.Entity;
		}
		set
		{
			SW_Lang previousValue = this._SW_Lang.Entity;
			if (((previousValue != value) 
						|| (this._SW_Lang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_Lang.Entity = null;
					previousValue.SW_SiteMapNodeDatas.Remove(this);
				}
				this._SW_Lang.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeDatas.Add(this);
					this._LangId = value.LangId;
				}
				else
				{
					this._LangId = default(int);
				}
				this.SendPropertyChanged("SW_Lang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNode_SW_SiteMapNodeData", Storage="_SW_SiteMapNode", ThisKey="SiteMapNodeId", OtherKey="SiteMapNodeId", IsForeignKey=true)]
	public SW_SiteMapNode SW_SiteMapNode
	{
		get
		{
			return this._SW_SiteMapNode.Entity;
		}
		set
		{
			SW_SiteMapNode previousValue = this._SW_SiteMapNode.Entity;
			if (((previousValue != value) 
						|| (this._SW_SiteMapNode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SiteMapNode.Entity = null;
					previousValue.SW_SiteMapNodeDatas.Remove(this);
				}
				this._SW_SiteMapNode.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodeDatas.Add(this);
					this._SiteMapNodeId = value.SiteMapNodeId;
				}
				else
				{
					this._SiteMapNodeId = default(int);
				}
				this.SendPropertyChanged("SW_SiteMapNode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="staywar_searchwar.SW_SiteMapNode")]
public partial class SW_SiteMapNode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SiteMapNodeId;
	
	private string _SiteMapNodePath;
	
	private System.Guid _SiteMapNodeAddedUserId;
	
	private System.Guid _SiteMapNodeEditUserId;
	
	private System.Nullable<int> _SiteMapNodeSubId;
	
	private bool _SiteMapNodeShow;
	
	private System.DateTime _SiteMapNodeAddedDate;
	
	private System.DateTime _SiteMapNodeEditDate;
	
	private int _SiteMapNodeSort;
	
	private string _SiteMapNodeRewriteToUrl;
	
	private EntitySet<SW_SiteMapNodeRole> _SW_SiteMapNodeRoles;
	
	private EntityRef<SW_SiteMapNodeMetaTag> _SW_SiteMapNodeMetaTag;
	
	private EntitySet<SW_SiteMapNodeData> _SW_SiteMapNodeDatas;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteMapNodeIdChanging(int value);
    partial void OnSiteMapNodeIdChanged();
    partial void OnSiteMapNodePathChanging(string value);
    partial void OnSiteMapNodePathChanged();
    partial void OnSiteMapNodeAddedUserIdChanging(System.Guid value);
    partial void OnSiteMapNodeAddedUserIdChanged();
    partial void OnSiteMapNodeEditUserIdChanging(System.Guid value);
    partial void OnSiteMapNodeEditUserIdChanged();
    partial void OnSiteMapNodeSubIdChanging(System.Nullable<int> value);
    partial void OnSiteMapNodeSubIdChanged();
    partial void OnSiteMapNodeShowChanging(bool value);
    partial void OnSiteMapNodeShowChanged();
    partial void OnSiteMapNodeAddedDateChanging(System.DateTime value);
    partial void OnSiteMapNodeAddedDateChanged();
    partial void OnSiteMapNodeEditDateChanging(System.DateTime value);
    partial void OnSiteMapNodeEditDateChanged();
    partial void OnSiteMapNodeSortChanging(int value);
    partial void OnSiteMapNodeSortChanged();
    partial void OnSiteMapNodeRewriteToUrlChanging(string value);
    partial void OnSiteMapNodeRewriteToUrlChanged();
    #endregion
	
	public SW_SiteMapNode()
	{
		this._SW_SiteMapNodeRoles = new EntitySet<SW_SiteMapNodeRole>(new Action<SW_SiteMapNodeRole>(this.attach_SW_SiteMapNodeRoles), new Action<SW_SiteMapNodeRole>(this.detach_SW_SiteMapNodeRoles));
		this._SW_SiteMapNodeMetaTag = default(EntityRef<SW_SiteMapNodeMetaTag>);
		this._SW_SiteMapNodeDatas = new EntitySet<SW_SiteMapNodeData>(new Action<SW_SiteMapNodeData>(this.attach_SW_SiteMapNodeDatas), new Action<SW_SiteMapNodeData>(this.detach_SW_SiteMapNodeDatas));
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SiteMapNodeId
	{
		get
		{
			return this._SiteMapNodeId;
		}
		set
		{
			if ((this._SiteMapNodeId != value))
			{
				this.OnSiteMapNodeIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeId = value;
				this.SendPropertyChanged("SiteMapNodeId");
				this.OnSiteMapNodeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodePath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string SiteMapNodePath
	{
		get
		{
			return this._SiteMapNodePath;
		}
		set
		{
			if ((this._SiteMapNodePath != value))
			{
				this.OnSiteMapNodePathChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodePath = value;
				this.SendPropertyChanged("SiteMapNodePath");
				this.OnSiteMapNodePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeAddedUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SiteMapNodeAddedUserId
	{
		get
		{
			return this._SiteMapNodeAddedUserId;
		}
		set
		{
			if ((this._SiteMapNodeAddedUserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSiteMapNodeAddedUserIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeAddedUserId = value;
				this.SendPropertyChanged("SiteMapNodeAddedUserId");
				this.OnSiteMapNodeAddedUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeEditUserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SiteMapNodeEditUserId
	{
		get
		{
			return this._SiteMapNodeEditUserId;
		}
		set
		{
			if ((this._SiteMapNodeEditUserId != value))
			{
				if (this._aspnet_User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSiteMapNodeEditUserIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeEditUserId = value;
				this.SendPropertyChanged("SiteMapNodeEditUserId");
				this.OnSiteMapNodeEditUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeSubId", DbType="Int")]
	public System.Nullable<int> SiteMapNodeSubId
	{
		get
		{
			return this._SiteMapNodeSubId;
		}
		set
		{
			if ((this._SiteMapNodeSubId != value))
			{
				this.OnSiteMapNodeSubIdChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeSubId = value;
				this.SendPropertyChanged("SiteMapNodeSubId");
				this.OnSiteMapNodeSubIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeShow", DbType="Bit NOT NULL")]
	public bool SiteMapNodeShow
	{
		get
		{
			return this._SiteMapNodeShow;
		}
		set
		{
			if ((this._SiteMapNodeShow != value))
			{
				this.OnSiteMapNodeShowChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeShow = value;
				this.SendPropertyChanged("SiteMapNodeShow");
				this.OnSiteMapNodeShowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeAddedDate", DbType="DateTime NOT NULL")]
	public System.DateTime SiteMapNodeAddedDate
	{
		get
		{
			return this._SiteMapNodeAddedDate;
		}
		set
		{
			if ((this._SiteMapNodeAddedDate != value))
			{
				this.OnSiteMapNodeAddedDateChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeAddedDate = value;
				this.SendPropertyChanged("SiteMapNodeAddedDate");
				this.OnSiteMapNodeAddedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeEditDate", DbType="DateTime NOT NULL")]
	public System.DateTime SiteMapNodeEditDate
	{
		get
		{
			return this._SiteMapNodeEditDate;
		}
		set
		{
			if ((this._SiteMapNodeEditDate != value))
			{
				this.OnSiteMapNodeEditDateChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeEditDate = value;
				this.SendPropertyChanged("SiteMapNodeEditDate");
				this.OnSiteMapNodeEditDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeSort", DbType="Int NOT NULL")]
	public int SiteMapNodeSort
	{
		get
		{
			return this._SiteMapNodeSort;
		}
		set
		{
			if ((this._SiteMapNodeSort != value))
			{
				this.OnSiteMapNodeSortChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeSort = value;
				this.SendPropertyChanged("SiteMapNodeSort");
				this.OnSiteMapNodeSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapNodeRewriteToUrl", DbType="VarChar(MAX)")]
	public string SiteMapNodeRewriteToUrl
	{
		get
		{
			return this._SiteMapNodeRewriteToUrl;
		}
		set
		{
			if ((this._SiteMapNodeRewriteToUrl != value))
			{
				this.OnSiteMapNodeRewriteToUrlChanging(value);
				this.SendPropertyChanging();
				this._SiteMapNodeRewriteToUrl = value;
				this.SendPropertyChanged("SiteMapNodeRewriteToUrl");
				this.OnSiteMapNodeRewriteToUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNode_SW_SiteMapNodeRole", Storage="_SW_SiteMapNodeRoles", ThisKey="SiteMapNodeId", OtherKey="SiteMapNodeId")]
	public EntitySet<SW_SiteMapNodeRole> SW_SiteMapNodeRoles
	{
		get
		{
			return this._SW_SiteMapNodeRoles;
		}
		set
		{
			this._SW_SiteMapNodeRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNode_SW_SiteMapNodeMetaTag", Storage="_SW_SiteMapNodeMetaTag", ThisKey="SiteMapNodeId", OtherKey="MetaTagsId", IsUnique=true, IsForeignKey=false)]
	public SW_SiteMapNodeMetaTag SW_SiteMapNodeMetaTag
	{
		get
		{
			return this._SW_SiteMapNodeMetaTag.Entity;
		}
		set
		{
			SW_SiteMapNodeMetaTag previousValue = this._SW_SiteMapNodeMetaTag.Entity;
			if (((previousValue != value) 
						|| (this._SW_SiteMapNodeMetaTag.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SW_SiteMapNodeMetaTag.Entity = null;
					previousValue.SW_SiteMapNode = null;
				}
				this._SW_SiteMapNodeMetaTag.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNode = this;
				}
				this.SendPropertyChanged("SW_SiteMapNodeMetaTag");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SW_SiteMapNode_SW_SiteMapNodeData", Storage="_SW_SiteMapNodeDatas", ThisKey="SiteMapNodeId", OtherKey="SiteMapNodeId")]
	public EntitySet<SW_SiteMapNodeData> SW_SiteMapNodeDatas
	{
		get
		{
			return this._SW_SiteMapNodeDatas;
		}
		set
		{
			this._SW_SiteMapNodeDatas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNode", Storage="_aspnet_User", ThisKey="SiteMapNodeAddedUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.SW_SiteMapNodes.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodes.Add(this);
					this._SiteMapNodeAddedUserId = value.UserId;
				}
				else
				{
					this._SiteMapNodeAddedUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SW_SiteMapNode1", Storage="_aspnet_User1", ThisKey="SiteMapNodeEditUserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.SW_SiteMapNodes1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.SW_SiteMapNodes1.Add(this);
					this._SiteMapNodeEditUserId = value.UserId;
				}
				else
				{
					this._SiteMapNodeEditUserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SW_SiteMapNodeRoles(SW_SiteMapNodeRole entity)
	{
		this.SendPropertyChanging();
		entity.SW_SiteMapNode = this;
	}
	
	private void detach_SW_SiteMapNodeRoles(SW_SiteMapNodeRole entity)
	{
		this.SendPropertyChanging();
		entity.SW_SiteMapNode = null;
	}
	
	private void attach_SW_SiteMapNodeDatas(SW_SiteMapNodeData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SiteMapNode = this;
	}
	
	private void detach_SW_SiteMapNodeDatas(SW_SiteMapNodeData entity)
	{
		this.SendPropertyChanging();
		entity.SW_SiteMapNode = null;
	}
}
#pragma warning restore 1591
